{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import axios from'axios';import{ArrowPathIcon,ExclamationCircleIcon}from'@heroicons/react/24/outline';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const InteractiveViewer=_ref=>{let{caseId}=_ref;const[volumeInfo,setVolumeInfo]=useState(null);const[currentAxis,setCurrentAxis]=useState('axial');const[currentSlice,setCurrentSlice]=useState(0);const[sliceImage,setSliceImage]=useState(null);const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);const[nodulesInSlice,setNodulesInSlice]=useState([]);const canvasRef=useRef(null);// Fetch volume metadata\nuseEffect(()=>{const fetchVolumeInfo=async()=>{try{setIsLoading(true);const response=await axios.get(`/api/results/${caseId}/slices`);setVolumeInfo(response.data.volume_info);// Set initial slice to middle of volume\nconst initialSlice=Math.floor(response.data.volume_info.dimensions.depth/2);setCurrentSlice(initialSlice);setIsLoading(false);}catch(error){var _error$response,_error$response$data;console.error('Error fetching volume info:',error);setError(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Failed to load volume data');setIsLoading(false);}};fetchVolumeInfo();},[caseId]);// Fetch slice when axis or slice index changes\nuseEffect(()=>{const fetchSlice=async()=>{if(!volumeInfo)return;try{setIsLoading(true);const response=await axios.get(`/api/results/${caseId}/slices/${currentAxis}/${currentSlice}`);setSliceImage(response.data.slice_data);setIsLoading(false);}catch(error){var _error$response2,_error$response2$data;console.error('Error fetching slice:',error);setError(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Failed to load slice');setIsLoading(false);}};fetchSlice();},[caseId,currentAxis,currentSlice,volumeInfo]);// Find nodules in the current slice\nuseEffect(()=>{if(!volumeInfo||!volumeInfo.nodules)return;// Determine which nodules are visible in this slice\nconst sliceNodules=volumeInfo.nodules.filter(nodule=>{// Check if this nodule is visible in the current slice\nif(currentAxis==='axial'){// Check if the nodule's z-coordinate is close to this slice\nreturn Math.abs(nodule.z-currentSlice)<=nodule.radius;}else if(currentAxis==='coronal'){// Check if the nodule's y-coordinate is close to this slice\nreturn Math.abs(nodule.y-currentSlice)<=nodule.radius;}else{// sagittal\n// Check if the nodule's x-coordinate is close to this slice\nreturn Math.abs(nodule.x-currentSlice)<=nodule.radius;}});setNodulesInSlice(sliceNodules);},[volumeInfo,currentAxis,currentSlice]);// Get max slice index for current axis\nconst getMaxSliceIndex=()=>{if(!volumeInfo)return 0;if(currentAxis==='axial'){return volumeInfo.dimensions.depth-1;}else if(currentAxis==='coronal'){return volumeInfo.dimensions.height-1;}else{// sagittal\nreturn volumeInfo.dimensions.width-1;}};const handleAxisChange=axis=>{setCurrentAxis(axis);// Reset to middle slice when changing axis\nconst middle=Math.floor(axis==='axial'?volumeInfo.dimensions.depth/2:axis==='coronal'?volumeInfo.dimensions.height/2:volumeInfo.dimensions.width/2);setCurrentSlice(middle);};const handleSliceChange=e=>{setCurrentSlice(parseInt(e.target.value,10));};// Track which slices have nodules to highlight them on the slider\nconst slicesWithNodules=()=>{if(!volumeInfo||!volumeInfo.nodules)return[];const noduleSlices=new Set();volumeInfo.nodules.forEach(nodule=>{if(currentAxis==='axial'){// Mark all slices within the nodule's radius\nconst start=Math.max(0,Math.floor(nodule.z-nodule.radius));const end=Math.min(volumeInfo.dimensions.depth-1,Math.ceil(nodule.z+nodule.radius));for(let i=start;i<=end;i++){noduleSlices.add(i);}}else if(currentAxis==='coronal'){const start=Math.max(0,Math.floor(nodule.y-nodule.radius));const end=Math.min(volumeInfo.dimensions.height-1,Math.ceil(nodule.y+nodule.radius));for(let i=start;i<=end;i++){noduleSlices.add(i);}}else{// sagittal\nconst start=Math.max(0,Math.floor(nodule.x-nodule.radius));const end=Math.min(volumeInfo.dimensions.width-1,Math.ceil(nodule.x+nodule.radius));for(let i=start;i<=end;i++){noduleSlices.add(i);}}});return Array.from(noduleSlices);};// Nodule colors for different confidence levels\nconst getNoduleColor=confidence=>{if(confidence>=0.8)return'rgba(220, 38, 38, 0.8)';// Red for high confidence\nif(confidence>=0.6)return'rgba(234, 88, 12, 0.8)';// Orange for medium confidence\nreturn'rgba(234, 179, 8, 0.8)';// Yellow for lower confidence\n};if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-50 p-4 rounded-md\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(ExclamationCircleIcon,{className:\"h-5 w-5 text-red-400\",\"aria-hidden\":\"true\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-3\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-medium text-red-800\",children:error}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-2 text-sm text-red-700\",children:\"Interactive visualization is not available. Please refer to the static image results.\"})]})]})});}if(isLoading&&!volumeInfo){return/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-12\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"inline-block h-8 w-8 animate-spin rounded-full border-4 border-solid border-indigo-600 border-r-transparent\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-4 text-gray-600\",children:\"Loading volume data...\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"px-4 py-5 border-b border-gray-200 sm:px-6 flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"Interactive Visualization\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleAxisChange('axial'),className:`px-3 py-1 rounded-md text-sm font-medium ${currentAxis==='axial'?'bg-indigo-600 text-white':'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,children:\"Axial\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleAxisChange('coronal'),className:`px-3 py-1 rounded-md text-sm font-medium ${currentAxis==='coronal'?'bg-indigo-600 text-white':'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,children:\"Coronal\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleAxisChange('sagittal'),className:`px-3 py-1 rounded-md text-sm font-medium ${currentAxis==='sagittal'?'bg-indigo-600 text-white':'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,children:\"Sagittal\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col md:flex-row gap-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 relative\",children:isLoading?/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 flex items-center justify-center bg-gray-100 rounded-md\",children:/*#__PURE__*/_jsx(ArrowPathIcon,{className:\"h-8 w-8 text-indigo-500 animate-spin\"})}):/*#__PURE__*/_jsx(_Fragment,{children:sliceImage&&/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"img\",{src:sliceImage,alt:`${currentAxis} slice ${currentSlice}`,className:\"w-full rounded-md shadow\"}),/*#__PURE__*/_jsx(\"svg\",{className:\"absolute top-0 left-0 w-full h-full\",ref:canvasRef,style:{pointerEvents:'none'},children:nodulesInSlice.map((nodule,index)=>{// Calculate position based on axis\nlet x,y,radius;if(currentAxis==='axial'){// Project to axial view (y, x coordinates)\nx=nodule.x;y=nodule.y;// Calculate projected radius based on distance from slice\nconst distanceFromSlice=Math.abs(nodule.z-currentSlice);const scaleFactor=1-distanceFromSlice/nodule.radius;radius=nodule.radius*scaleFactor;}else if(currentAxis==='coronal'){// Project to coronal view (z, x coordinates)\nx=nodule.x;y=nodule.z;const distanceFromSlice=Math.abs(nodule.y-currentSlice);const scaleFactor=1-distanceFromSlice/nodule.radius;radius=nodule.radius*scaleFactor;}else{// sagittal\n// Project to sagittal view (z, y coordinates)\nx=nodule.y;y=nodule.z;const distanceFromSlice=Math.abs(nodule.x-currentSlice);const scaleFactor=1-distanceFromSlice/nodule.radius;radius=nodule.radius*scaleFactor;}// Convert to view coordinates (percentage of image)\nconst imgWidth=currentAxis==='axial'?volumeInfo.dimensions.width:currentAxis==='coronal'?volumeInfo.dimensions.width:volumeInfo.dimensions.height;const imgHeight=currentAxis==='axial'?volumeInfo.dimensions.height:volumeInfo.dimensions.depth;const xPercent=x/imgWidth*100;const yPercent=y/imgHeight*100;// Size as percentage of image\nconst radiusPercent=radius/Math.min(imgWidth,imgHeight)*100;return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"circle\",{cx:`${xPercent}%`,cy:`${yPercent}%`,r:`${radiusPercent}%`,stroke:getNoduleColor(nodule.confidence),strokeWidth:\"2\",fill:\"transparent\"}),/*#__PURE__*/_jsxs(\"text\",{x:`${xPercent}%`,y:`${yPercent-radiusPercent-1}%`,textAnchor:\"middle\",fill:getNoduleColor(nodule.confidence),fontSize:\"12\",fontWeight:\"bold\",children:[nodule.id,\" (\",nodule.confidence.toFixed(2),\")\"]})]},index);})})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"md:w-64\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-4 rounded-md\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900 mb-2\",children:\"Slice Navigation\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:[\"Slice: \",currentSlice,\" / \",getMaxSliceIndex()]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center\",children:/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",max:getMaxSliceIndex(),value:currentSlice,onChange:handleSliceChange,className:\"w-full\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"relative mt-2 h-2 bg-gray-200 rounded-full\",children:slicesWithNodules().map(sliceIndex=>/*#__PURE__*/_jsx(\"div\",{className:\"absolute h-2 w-1 bg-red-500 rounded-full\",style:{left:`${sliceIndex/getMaxSliceIndex()*100}%`,transform:'translateX(-50%)'}},sliceIndex))}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:\"Red marks indicate slices containing nodules\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between mb-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentSlice(Math.max(0,currentSlice-1)),disabled:currentSlice===0,className:\"px-2 py-1 bg-gray-200 rounded text-sm disabled:opacity-50\",children:\"Previous\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{// Find the nearest slice with a nodule\nconst nodulesSlices=slicesWithNodules();if(nodulesSlices.length>0){// Find the next slice with a nodule\nconst nextNoduleSlice=nodulesSlices.find(s=>s>currentSlice);if(nextNoduleSlice!==undefined){setCurrentSlice(nextNoduleSlice);}else{// Wrap around to first slice with nodule\nsetCurrentSlice(nodulesSlices[0]);}}},disabled:slicesWithNodules().length===0,className:\"px-2 py-1 bg-indigo-100 text-indigo-700 rounded text-sm disabled:opacity-50\",children:\"Jump to Nodule\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentSlice(Math.min(getMaxSliceIndex(),currentSlice+1)),disabled:currentSlice===getMaxSliceIndex(),className:\"px-2 py-1 bg-gray-200 rounded text-sm disabled:opacity-50\",children:\"Next\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"font-medium text-gray-900 mb-2\",children:[\"Nodules in Slice: \",nodulesInSlice.length]}),nodulesInSlice.length>0?/*#__PURE__*/_jsx(\"ul\",{className:\"space-y-2 max-h-40 overflow-y-auto\",children:nodulesInSlice.map((nodule,index)=>/*#__PURE__*/_jsxs(\"li\",{className:\"text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 rounded-full mr-2\",style:{backgroundColor:getNoduleColor(nodule.confidence)}}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:nodule.id})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-5 text-xs text-gray-500\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"Confidence: \",nodule.confidence.toFixed(2)]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Radius: \",nodule.radius.toFixed(2),\"mm\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Position: (\",nodule.x.toFixed(1),\", \",nodule.y.toFixed(1),\", \",nodule.z.toFixed(1),\")\"]})]})]},index))}):/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500\",children:\"No nodules in this slice\"})]})]})})]})})]});};export default InteractiveViewer;","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","ArrowPathIcon","ExclamationCircleIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","InteractiveViewer","_ref","caseId","volumeInfo","setVolumeInfo","currentAxis","setCurrentAxis","currentSlice","setCurrentSlice","sliceImage","setSliceImage","isLoading","setIsLoading","error","setError","nodulesInSlice","setNodulesInSlice","canvasRef","fetchVolumeInfo","response","get","data","volume_info","initialSlice","Math","floor","dimensions","depth","_error$response","_error$response$data","console","message","fetchSlice","slice_data","_error$response2","_error$response2$data","nodules","sliceNodules","filter","nodule","abs","z","radius","y","x","getMaxSliceIndex","height","width","handleAxisChange","axis","middle","handleSliceChange","e","parseInt","target","value","slicesWithNodules","noduleSlices","Set","forEach","start","max","end","min","ceil","i","add","Array","from","getNoduleColor","confidence","className","children","onClick","src","alt","ref","style","pointerEvents","map","index","distanceFromSlice","scaleFactor","imgWidth","imgHeight","xPercent","yPercent","radiusPercent","cx","cy","r","stroke","strokeWidth","fill","textAnchor","fontSize","fontWeight","id","toFixed","type","onChange","sliceIndex","left","transform","disabled","nodulesSlices","length","nextNoduleSlice","find","s","undefined","backgroundColor"],"sources":["D:/Segmentation/pipeline/webapp/static/src/components/InteractiveViewer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { ArrowPathIcon, ExclamationCircleIcon } from '@heroicons/react/24/outline';\r\n\r\nconst InteractiveViewer = ({ caseId }) => {\r\n  const [volumeInfo, setVolumeInfo] = useState(null);\r\n  const [currentAxis, setCurrentAxis] = useState('axial');\r\n  const [currentSlice, setCurrentSlice] = useState(0);\r\n  const [sliceImage, setSliceImage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [nodulesInSlice, setNodulesInSlice] = useState([]);\r\n  const canvasRef = useRef(null);\r\n\r\n  // Fetch volume metadata\r\n  useEffect(() => {\r\n    const fetchVolumeInfo = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await axios.get(`/api/results/${caseId}/slices`);\r\n        setVolumeInfo(response.data.volume_info);\r\n        \r\n        // Set initial slice to middle of volume\r\n        const initialSlice = Math.floor(response.data.volume_info.dimensions.depth / 2);\r\n        setCurrentSlice(initialSlice);\r\n        \r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching volume info:', error);\r\n        setError(error.response?.data?.message || 'Failed to load volume data');\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchVolumeInfo();\r\n  }, [caseId]);\r\n\r\n  // Fetch slice when axis or slice index changes\r\n  useEffect(() => {\r\n    const fetchSlice = async () => {\r\n      if (!volumeInfo) return;\r\n      \r\n      try {\r\n        setIsLoading(true);\r\n        const response = await axios.get(`/api/results/${caseId}/slices/${currentAxis}/${currentSlice}`);\r\n        setSliceImage(response.data.slice_data);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching slice:', error);\r\n        setError(error.response?.data?.message || 'Failed to load slice');\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchSlice();\r\n  }, [caseId, currentAxis, currentSlice, volumeInfo]);\r\n\r\n  // Find nodules in the current slice\r\n  useEffect(() => {\r\n    if (!volumeInfo || !volumeInfo.nodules) return;\r\n    \r\n    // Determine which nodules are visible in this slice\r\n    const sliceNodules = volumeInfo.nodules.filter(nodule => {\r\n      // Check if this nodule is visible in the current slice\r\n      if (currentAxis === 'axial') {\r\n        // Check if the nodule's z-coordinate is close to this slice\r\n        return Math.abs(nodule.z - currentSlice) <= nodule.radius;\r\n      } else if (currentAxis === 'coronal') {\r\n        // Check if the nodule's y-coordinate is close to this slice\r\n        return Math.abs(nodule.y - currentSlice) <= nodule.radius;\r\n      } else { // sagittal\r\n        // Check if the nodule's x-coordinate is close to this slice\r\n        return Math.abs(nodule.x - currentSlice) <= nodule.radius;\r\n      }\r\n    });\r\n    \r\n    setNodulesInSlice(sliceNodules);\r\n  }, [volumeInfo, currentAxis, currentSlice]);\r\n\r\n  // Get max slice index for current axis\r\n  const getMaxSliceIndex = () => {\r\n    if (!volumeInfo) return 0;\r\n    \r\n    if (currentAxis === 'axial') {\r\n      return volumeInfo.dimensions.depth - 1;\r\n    } else if (currentAxis === 'coronal') {\r\n      return volumeInfo.dimensions.height - 1;\r\n    } else { // sagittal\r\n      return volumeInfo.dimensions.width - 1;\r\n    }\r\n  };\r\n\r\n  const handleAxisChange = (axis) => {\r\n    setCurrentAxis(axis);\r\n    // Reset to middle slice when changing axis\r\n    const middle = Math.floor(\r\n      axis === 'axial' \r\n        ? volumeInfo.dimensions.depth / 2\r\n        : axis === 'coronal'\r\n          ? volumeInfo.dimensions.height / 2\r\n          : volumeInfo.dimensions.width / 2\r\n    );\r\n    setCurrentSlice(middle);\r\n  };\r\n\r\n  const handleSliceChange = (e) => {\r\n    setCurrentSlice(parseInt(e.target.value, 10));\r\n  };\r\n\r\n  // Track which slices have nodules to highlight them on the slider\r\n  const slicesWithNodules = () => {\r\n    if (!volumeInfo || !volumeInfo.nodules) return [];\r\n    \r\n    const noduleSlices = new Set();\r\n    volumeInfo.nodules.forEach(nodule => {\r\n      if (currentAxis === 'axial') {\r\n        // Mark all slices within the nodule's radius\r\n        const start = Math.max(0, Math.floor(nodule.z - nodule.radius));\r\n        const end = Math.min(volumeInfo.dimensions.depth - 1, Math.ceil(nodule.z + nodule.radius));\r\n        for (let i = start; i <= end; i++) {\r\n          noduleSlices.add(i);\r\n        }\r\n      } else if (currentAxis === 'coronal') {\r\n        const start = Math.max(0, Math.floor(nodule.y - nodule.radius));\r\n        const end = Math.min(volumeInfo.dimensions.height - 1, Math.ceil(nodule.y + nodule.radius));\r\n        for (let i = start; i <= end; i++) {\r\n          noduleSlices.add(i);\r\n        }\r\n      } else { // sagittal\r\n        const start = Math.max(0, Math.floor(nodule.x - nodule.radius));\r\n        const end = Math.min(volumeInfo.dimensions.width - 1, Math.ceil(nodule.x + nodule.radius));\r\n        for (let i = start; i <= end; i++) {\r\n          noduleSlices.add(i);\r\n        }\r\n      }\r\n    });\r\n    \r\n    return Array.from(noduleSlices);\r\n  };\r\n\r\n  // Nodule colors for different confidence levels\r\n  const getNoduleColor = (confidence) => {\r\n    if (confidence >= 0.8) return 'rgba(220, 38, 38, 0.8)';  // Red for high confidence\r\n    if (confidence >= 0.6) return 'rgba(234, 88, 12, 0.8)';  // Orange for medium confidence\r\n    return 'rgba(234, 179, 8, 0.8)';  // Yellow for lower confidence\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"bg-red-50 p-4 rounded-md\">\r\n        <div className=\"flex\">\r\n          <ExclamationCircleIcon className=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\r\n          <div className=\"ml-3\">\r\n            <h3 className=\"text-sm font-medium text-red-800\">{error}</h3>\r\n            <p className=\"mt-2 text-sm text-red-700\">\r\n              Interactive visualization is not available. Please refer to the static image results.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading && !volumeInfo) {\r\n    return (\r\n      <div className=\"text-center py-12\">\r\n        <div className=\"inline-block h-8 w-8 animate-spin rounded-full border-4 border-solid border-indigo-600 border-r-transparent\"></div>\r\n        <p className=\"mt-4 text-gray-600\">Loading volume data...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white shadow rounded-lg overflow-hidden\">\r\n      <div className=\"px-4 py-5 border-b border-gray-200 sm:px-6 flex justify-between items-center\">\r\n        <h3 className=\"text-lg font-medium text-gray-900\">Interactive Visualization</h3>\r\n        \r\n        {/* Axis selection */}\r\n        <div className=\"flex space-x-2\">\r\n          <button\r\n            onClick={() => handleAxisChange('axial')}\r\n            className={`px-3 py-1 rounded-md text-sm font-medium ${\r\n              currentAxis === 'axial'\r\n                ? 'bg-indigo-600 text-white'\r\n                : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\r\n            }`}\r\n          >\r\n            Axial\r\n          </button>\r\n          <button\r\n            onClick={() => handleAxisChange('coronal')}\r\n            className={`px-3 py-1 rounded-md text-sm font-medium ${\r\n              currentAxis === 'coronal'\r\n                ? 'bg-indigo-600 text-white'\r\n                : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\r\n            }`}\r\n          >\r\n            Coronal\r\n          </button>\r\n          <button\r\n            onClick={() => handleAxisChange('sagittal')}\r\n            className={`px-3 py-1 rounded-md text-sm font-medium ${\r\n              currentAxis === 'sagittal'\r\n                ? 'bg-indigo-600 text-white'\r\n                : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\r\n            }`}\r\n          >\r\n            Sagittal\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"p-6\">\r\n        {/* Slice viewer */}\r\n        <div className=\"flex flex-col md:flex-row gap-6\">\r\n          {/* Slice image */}\r\n          <div className=\"flex-1 relative\">\r\n            {isLoading ? (\r\n              <div className=\"absolute inset-0 flex items-center justify-center bg-gray-100 rounded-md\">\r\n                <ArrowPathIcon className=\"h-8 w-8 text-indigo-500 animate-spin\" />\r\n              </div>\r\n            ) : (\r\n              <>\r\n                {sliceImage && (\r\n                  <div className=\"relative\">\r\n                    <img\r\n                      src={sliceImage}\r\n                      alt={`${currentAxis} slice ${currentSlice}`}\r\n                      className=\"w-full rounded-md shadow\"\r\n                    />\r\n                    \r\n                    {/* Overlay SVG for nodules */}\r\n                    <svg\r\n                      className=\"absolute top-0 left-0 w-full h-full\"\r\n                      ref={canvasRef}\r\n                      style={{ pointerEvents: 'none' }}\r\n                    >\r\n                      {nodulesInSlice.map((nodule, index) => {\r\n                        // Calculate position based on axis\r\n                        let x, y, radius;\r\n                        if (currentAxis === 'axial') {\r\n                          // Project to axial view (y, x coordinates)\r\n                          x = nodule.x;\r\n                          y = nodule.y;\r\n                          // Calculate projected radius based on distance from slice\r\n                          const distanceFromSlice = Math.abs(nodule.z - currentSlice);\r\n                          const scaleFactor = 1 - (distanceFromSlice / nodule.radius);\r\n                          radius = nodule.radius * scaleFactor;\r\n                        } else if (currentAxis === 'coronal') {\r\n                          // Project to coronal view (z, x coordinates)\r\n                          x = nodule.x;\r\n                          y = nodule.z;\r\n                          const distanceFromSlice = Math.abs(nodule.y - currentSlice);\r\n                          const scaleFactor = 1 - (distanceFromSlice / nodule.radius);\r\n                          radius = nodule.radius * scaleFactor;\r\n                        } else { // sagittal\r\n                          // Project to sagittal view (z, y coordinates)\r\n                          x = nodule.y;\r\n                          y = nodule.z;\r\n                          const distanceFromSlice = Math.abs(nodule.x - currentSlice);\r\n                          const scaleFactor = 1 - (distanceFromSlice / nodule.radius);\r\n                          radius = nodule.radius * scaleFactor;\r\n                        }\r\n                        \r\n                        // Convert to view coordinates (percentage of image)\r\n                        const imgWidth = currentAxis === 'axial' ? \r\n                          volumeInfo.dimensions.width : \r\n                          currentAxis === 'coronal' ? \r\n                            volumeInfo.dimensions.width : \r\n                            volumeInfo.dimensions.height;\r\n                            \r\n                        const imgHeight = currentAxis === 'axial' ? \r\n                          volumeInfo.dimensions.height : \r\n                          volumeInfo.dimensions.depth;\r\n                        \r\n                        const xPercent = (x / imgWidth) * 100;\r\n                        const yPercent = (y / imgHeight) * 100;\r\n                        \r\n                        // Size as percentage of image\r\n                        const radiusPercent = (radius / Math.min(imgWidth, imgHeight)) * 100;\r\n                        \r\n                        return (\r\n                          <g key={index}>\r\n                            <circle\r\n                              cx={`${xPercent}%`}\r\n                              cy={`${yPercent}%`}\r\n                              r={`${radiusPercent}%`}\r\n                              stroke={getNoduleColor(nodule.confidence)}\r\n                              strokeWidth=\"2\"\r\n                              fill=\"transparent\"\r\n                            />\r\n                            <text\r\n                              x={`${xPercent}%`}\r\n                              y={`${yPercent - radiusPercent - 1}%`}\r\n                              textAnchor=\"middle\"\r\n                              fill={getNoduleColor(nodule.confidence)}\r\n                              fontSize=\"12\"\r\n                              fontWeight=\"bold\"\r\n                            >\r\n                              {nodule.id} ({nodule.confidence.toFixed(2)})\r\n                            </text>\r\n                          </g>\r\n                        );\r\n                      })}\r\n                    </svg>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n          \r\n          {/* Slice controls and nodule info */}\r\n          <div className=\"md:w-64\">\r\n            <div className=\"bg-gray-50 p-4 rounded-md\">\r\n              <h4 className=\"font-medium text-gray-900 mb-2\">Slice Navigation</h4>\r\n              \r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Slice: {currentSlice} / {getMaxSliceIndex()}\r\n                </label>\r\n                <div className=\"flex items-center\">\r\n                  <input\r\n                    type=\"range\"\r\n                    min=\"0\"\r\n                    max={getMaxSliceIndex()}\r\n                    value={currentSlice}\r\n                    onChange={handleSliceChange}\r\n                    className=\"w-full\"\r\n                  />\r\n                </div>\r\n                <div className=\"relative mt-2 h-2 bg-gray-200 rounded-full\">\r\n                  {/* Highlight slices with nodules */}\r\n                  {slicesWithNodules().map(sliceIndex => (\r\n                    <div\r\n                      key={sliceIndex}\r\n                      className=\"absolute h-2 w-1 bg-red-500 rounded-full\"\r\n                      style={{\r\n                        left: `${(sliceIndex / getMaxSliceIndex()) * 100}%`,\r\n                        transform: 'translateX(-50%)'\r\n                      }}\r\n                    />\r\n                  ))}\r\n                </div>\r\n                <p className=\"text-xs text-gray-500 mt-1\">\r\n                  Red marks indicate slices containing nodules\r\n                </p>\r\n              </div>\r\n              \r\n              {/* Navigation buttons */}\r\n              <div className=\"flex justify-between mb-4\">\r\n                <button\r\n                  onClick={() => setCurrentSlice(Math.max(0, currentSlice - 1))}\r\n                  disabled={currentSlice === 0}\r\n                  className=\"px-2 py-1 bg-gray-200 rounded text-sm disabled:opacity-50\"\r\n                >\r\n                  Previous\r\n                </button>\r\n                <button\r\n                  onClick={() => {\r\n                    // Find the nearest slice with a nodule\r\n                    const nodulesSlices = slicesWithNodules();\r\n                    if (nodulesSlices.length > 0) {\r\n                      // Find the next slice with a nodule\r\n                      const nextNoduleSlice = nodulesSlices.find(s => s > currentSlice);\r\n                      if (nextNoduleSlice !== undefined) {\r\n                        setCurrentSlice(nextNoduleSlice);\r\n                      } else {\r\n                        // Wrap around to first slice with nodule\r\n                        setCurrentSlice(nodulesSlices[0]);\r\n                      }\r\n                    }\r\n                  }}\r\n                  disabled={slicesWithNodules().length === 0}\r\n                  className=\"px-2 py-1 bg-indigo-100 text-indigo-700 rounded text-sm disabled:opacity-50\"\r\n                >\r\n                  Jump to Nodule\r\n                </button>\r\n                <button\r\n                  onClick={() => setCurrentSlice(Math.min(getMaxSliceIndex(), currentSlice + 1))}\r\n                  disabled={currentSlice === getMaxSliceIndex()}\r\n                  className=\"px-2 py-1 bg-gray-200 rounded text-sm disabled:opacity-50\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n              \r\n              {/* Nodules in current slice */}\r\n              <div>\r\n                <h4 className=\"font-medium text-gray-900 mb-2\">\r\n                  Nodules in Slice: {nodulesInSlice.length}\r\n                </h4>\r\n                {nodulesInSlice.length > 0 ? (\r\n                  <ul className=\"space-y-2 max-h-40 overflow-y-auto\">\r\n                    {nodulesInSlice.map((nodule, index) => (\r\n                      <li key={index} className=\"text-sm\">\r\n                        <div className=\"flex items-center\">\r\n                          <div\r\n                            className=\"w-3 h-3 rounded-full mr-2\"\r\n                            style={{ backgroundColor: getNoduleColor(nodule.confidence) }}\r\n                          />\r\n                          <span className=\"font-medium\">{nodule.id}</span>\r\n                        </div>\r\n                        <div className=\"ml-5 text-xs text-gray-500\">\r\n                          <div>Confidence: {nodule.confidence.toFixed(2)}</div>\r\n                          <div>Radius: {nodule.radius.toFixed(2)}mm</div>\r\n                          <div>Position: ({nodule.x.toFixed(1)}, {nodule.y.toFixed(1)}, {nodule.z.toFixed(1)})</div>\r\n                        </div>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                ) : (\r\n                  <p className=\"text-sm text-gray-500\">No nodules in this slice</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InteractiveViewer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}