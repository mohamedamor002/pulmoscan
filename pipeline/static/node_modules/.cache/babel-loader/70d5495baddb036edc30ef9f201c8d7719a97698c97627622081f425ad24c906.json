{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kouss\\\\Desktop\\\\Cursor\\\\Segmentation\\\\pipeline\\\\webapp\\\\static\\\\src\\\\pages\\\\AnalyticsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, PointElement, LineElement, Title, Tooltip, Legend, ArcElement, RadialLinearScale } from 'chart.js';\nimport { Bar, Line, Pie, Radar } from 'react-chartjs-2';\nimport { useTheme } from '../contexts/ThemeContext';\nimport { useAuth } from '../contexts/AuthContext';\nimport { ChartBarIcon, ArrowPathIcon, ExclamationCircleIcon, CalendarIcon, ClockIcon } from '@heroicons/react/24/outline';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, PointElement, LineElement, Title, Tooltip, Legend, ArcElement, RadialLinearScale);\nconst AnalyticsPage = () => {\n  _s();\n  const [data, setData] = useState({\n    scansByMonth: [],\n    noduleLocationData: [],\n    confidenceDistribution: [],\n    scansByDoctor: [],\n    noduleSize: []\n  });\n  const [dateRange, setDateRange] = useState('6months');\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    darkMode\n  } = useTheme();\n  const {\n    user\n  } = useAuth();\n\n  // Mock data generation\n  useEffect(() => {\n    const fetchAnalyticsData = async () => {\n      try {\n        setIsLoading(true);\n\n        // In a real implementation, this would be an API call to fetch analytics data\n        // For now, we'll generate mock data that looks realistic\n\n        // Fetch real scan results for reference\n        const resultsResponse = await axios.get('/api/results');\n        const actualResults = resultsResponse.data || [];\n\n        // Generate realistic mock data based on the actual results count\n        const mockData = generateMockAnalyticsData(actualResults.length, dateRange);\n        setData(mockData);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching analytics data:', error);\n        setError('Failed to load analytics data. Please try again later.');\n        setIsLoading(false);\n      }\n    };\n    fetchAnalyticsData();\n  }, [dateRange]);\n\n  // Generate mock data for visualization\n  const generateMockAnalyticsData = (resultCount, range) => {\n    // Define date ranges\n    const now = new Date();\n    let monthsToShow = 6;\n    switch (range) {\n      case '3months':\n        monthsToShow = 3;\n        break;\n      case '12months':\n        monthsToShow = 12;\n        break;\n      default:\n        monthsToShow = 6;\n    }\n\n    // Generate months labels\n    const monthLabels = [];\n    for (let i = monthsToShow - 1; i >= 0; i--) {\n      const d = new Date();\n      d.setMonth(now.getMonth() - i);\n      monthLabels.push(d.toLocaleString('default', {\n        month: 'short',\n        year: 'numeric'\n      }));\n    }\n\n    // Scans by month (with some randomization for realistic data)\n    const baseScanCount = Math.max(Math.floor(resultCount / monthsToShow), 1);\n    const scansByMonth = monthLabels.map((month, i) => {\n      // Make more recent months have slightly more scans for a realistic trend\n      const factor = 0.5 + (i + 1) / monthsToShow * 0.5;\n      return {\n        month,\n        totalScans: Math.floor(baseScanCount * factor * (0.8 + Math.random() * 0.4)),\n        withNodules: Math.floor(baseScanCount * factor * 0.6 * (0.7 + Math.random() * 0.5))\n      };\n    });\n\n    // Nodule location data (distribution across lung areas)\n    const noduleLocationData = [{\n      location: 'Upper Right Lobe',\n      count: Math.floor(10 + Math.random() * 20)\n    }, {\n      location: 'Middle Right Lobe',\n      count: Math.floor(5 + Math.random() * 15)\n    }, {\n      location: 'Lower Right Lobe',\n      count: Math.floor(15 + Math.random() * 25)\n    }, {\n      location: 'Upper Left Lobe',\n      count: Math.floor(10 + Math.random() * 20)\n    }, {\n      location: 'Lower Left Lobe',\n      count: Math.floor(15 + Math.random() * 25)\n    }];\n\n    // AI confidence distribution\n    const confidenceRanges = ['90-100%', '80-90%', '70-80%', '60-70%', '<60%'];\n    const confidenceDistribution = confidenceRanges.map(range => ({\n      range,\n      count: Math.floor(5 + Math.random() * 20)\n    }));\n\n    // Scans by doctor (top 5)\n    const doctorNames = ['Dr. Smith', 'Dr. Johnson', 'Dr. Williams', 'Dr. Brown', 'Dr. Jones', 'Dr. Garcia', 'Dr. Miller', 'Dr. Davis', 'Dr. Rodriguez', 'Dr. Martinez'];\n\n    // Select 5 random doctors\n    const selectedDoctors = doctorNames.sort(() => 0.5 - Math.random()).slice(0, 5);\n    const scansByDoctor = selectedDoctors.map(doctor => ({\n      doctor,\n      scans: Math.floor(5 + Math.random() * 20)\n    })).sort((a, b) => b.scans - a.scans);\n\n    // Nodule size distribution\n    const noduleSizeRanges = ['<3mm', '3-6mm', '6-10mm', '10-15mm', '>15mm'];\n    const noduleSize = noduleSizeRanges.map(range => ({\n      range,\n      count: Math.floor(5 + Math.random() * 15)\n    }));\n    return {\n      scansByMonth,\n      noduleLocationData,\n      confidenceDistribution,\n      scansByDoctor,\n      noduleSize\n    };\n  };\n\n  // Chart configuration and data preparation\n  const monthlyScansChartData = {\n    labels: data.scansByMonth.map(item => item.month),\n    datasets: [{\n      label: 'Total Scans',\n      data: data.scansByMonth.map(item => item.totalScans),\n      backgroundColor: 'rgba(79, 70, 229, 0.6)',\n      borderColor: 'rgba(79, 70, 229, 1)',\n      borderWidth: 1\n    }, {\n      label: 'Scans With Nodules',\n      data: data.scansByMonth.map(item => item.withNodules),\n      backgroundColor: 'rgba(236, 72, 153, 0.6)',\n      borderColor: 'rgba(236, 72, 153, 1)',\n      borderWidth: 1\n    }]\n  };\n  const monthlyTrendChartData = {\n    labels: data.scansByMonth.map(item => item.month),\n    datasets: [{\n      label: 'Total Scans',\n      data: data.scansByMonth.map(item => item.totalScans),\n      backgroundColor: 'rgba(79, 70, 229, 0.1)',\n      borderColor: 'rgba(79, 70, 229, 1)',\n      fill: true,\n      tension: 0.4\n    }, {\n      label: 'Scans With Nodules',\n      data: data.scansByMonth.map(item => item.withNodules),\n      backgroundColor: 'rgba(236, 72, 153, 0.1)',\n      borderColor: 'rgba(236, 72, 153, 1)',\n      fill: true,\n      tension: 0.4\n    }]\n  };\n  const noduleLocationChartData = {\n    labels: data.noduleLocationData.map(item => item.location),\n    datasets: [{\n      label: 'Nodule Distribution by Location',\n      data: data.noduleLocationData.map(item => item.count),\n      backgroundColor: ['rgba(79, 70, 229, 0.6)', 'rgba(16, 185, 129, 0.6)', 'rgba(245, 158, 11, 0.6)', 'rgba(236, 72, 153, 0.6)', 'rgba(99, 102, 241, 0.6)'],\n      borderColor: ['rgba(79, 70, 229, 1)', 'rgba(16, 185, 129, 1)', 'rgba(245, 158, 11, 1)', 'rgba(236, 72, 153, 1)', 'rgba(99, 102, 241, 1)'],\n      borderWidth: 1\n    }]\n  };\n  const confidenceChartData = {\n    labels: data.confidenceDistribution.map(item => item.range),\n    datasets: [{\n      label: 'AI Confidence Distribution',\n      data: data.confidenceDistribution.map(item => item.count),\n      backgroundColor: 'rgba(16, 185, 129, 0.6)',\n      borderColor: 'rgba(16, 185, 129, 1)',\n      borderWidth: 1\n    }]\n  };\n  const doctorScansChartData = {\n    labels: data.scansByDoctor.map(item => item.doctor),\n    datasets: [{\n      label: 'Scans by Doctor',\n      data: data.scansByDoctor.map(item => item.scans),\n      backgroundColor: ['rgba(79, 70, 229, 0.6)', 'rgba(16, 185, 129, 0.6)', 'rgba(245, 158, 11, 0.6)', 'rgba(236, 72, 153, 0.6)', 'rgba(99, 102, 241, 0.6)'],\n      borderColor: ['rgba(79, 70, 229, 1)', 'rgba(16, 185, 129, 1)', 'rgba(245, 158, 11, 1)', 'rgba(236, 72, 153, 1)', 'rgba(99, 102, 241, 1)'],\n      borderWidth: 1\n    }]\n  };\n  const noduleSizeChartData = {\n    labels: data.noduleSize.map(item => item.range),\n    datasets: [{\n      label: 'Nodule Size Distribution',\n      data: data.noduleSize.map(item => item.count),\n      backgroundColor: 'rgba(245, 158, 11, 0.6)',\n      borderColor: ['rgba(245, 158, 11, 1)', 'rgba(245, 158, 11, 1)', 'rgba(245, 158, 11, 1)', 'rgba(245, 158, 11, 1)', 'rgba(245, 158, 11, 1)'],\n      borderWidth: 1\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          color: darkMode ? '#fff' : '#000',\n          font: {\n            size: 12\n          }\n        }\n      },\n      tooltip: {\n        backgroundColor: darkMode ? 'rgba(0, 0, 0, 0.8)' : 'rgba(255, 255, 255, 0.8)',\n        titleColor: darkMode ? '#fff' : '#000',\n        bodyColor: darkMode ? '#e5e7eb' : '#374151',\n        borderColor: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)',\n        borderWidth: 1\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          precision: 0,\n          color: darkMode ? '#e5e7eb' : '#374151'\n        },\n        grid: {\n          color: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'\n        }\n      },\n      x: {\n        ticks: {\n          color: darkMode ? '#e5e7eb' : '#374151'\n        },\n        grid: {\n          color: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'\n        }\n      }\n    }\n  };\n\n  // Special options for pie chart\n  const pieChartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'right',\n        labels: {\n          color: darkMode ? '#fff' : '#000',\n          font: {\n            size: 12\n          },\n          padding: 20\n        }\n      },\n      tooltip: {\n        backgroundColor: darkMode ? 'rgba(0, 0, 0, 0.8)' : 'rgba(255, 255, 255, 0.8)',\n        titleColor: darkMode ? '#fff' : '#000',\n        bodyColor: darkMode ? '#e5e7eb' : '#374151',\n        borderColor: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)',\n        borderWidth: 1\n      }\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `text-center py-12 ${darkMode ? 'text-white' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline-block h-8 w-8 animate-spin rounded-full border-4 border-solid border-indigo-600 border-r-transparent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `mt-4 ${darkMode ? 'text-gray-300' : 'text-gray-600'}`,\n        children: \"Loading analytics data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${darkMode ? 'bg-red-900' : 'bg-red-50'} p-4 rounded-md`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(ExclamationCircleIcon, {\n          className: `h-5 w-5 ${darkMode ? 'text-red-300' : 'text-red-400'}`,\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-3\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: `text-sm font-medium ${darkMode ? 'text-red-300' : 'text-red-800'}`,\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: darkMode ? 'text-white' : '',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: `text-2xl font-semibold ${darkMode ? 'text-white' : 'text-gray-900'}`,\n        children: [/*#__PURE__*/_jsxDEV(ChartBarIcon, {\n          className: \"h-7 w-7 inline-block mr-2 mb-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), \"Analytics Dashboard\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `mt-1 text-sm ${darkMode ? 'text-gray-300' : 'text-gray-500'}`,\n        children: \"Comprehensive data visualization for scan results and nodule detection statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${darkMode ? 'bg-gray-800' : 'bg-white'} p-4 rounded-lg shadow-sm mb-6`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(CalendarIcon, {\n            className: `h-5 w-5 mr-2 ${darkMode ? 'text-gray-400' : 'text-gray-500'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'}`,\n            children: \"Time Period:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setDateRange('3months'),\n            className: `px-3 py-1.5 text-sm font-medium rounded-md transition-colors ${dateRange === '3months' ? darkMode ? 'bg-indigo-600 text-white' : 'bg-indigo-50 text-indigo-700' : darkMode ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'}`,\n            children: \"Last 3 Months\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setDateRange('6months'),\n            className: `px-3 py-1.5 text-sm font-medium rounded-md transition-colors ${dateRange === '6months' ? darkMode ? 'bg-indigo-600 text-white' : 'bg-indigo-50 text-indigo-700' : darkMode ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'}`,\n            children: \"Last 6 Months\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setDateRange('12months'),\n            className: `px-3 py-1.5 text-sm font-medium rounded-md transition-colors ${dateRange === '12months' ? darkMode ? 'bg-indigo-600 text-white' : 'bg-indigo-50 text-indigo-700' : darkMode ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'}`,\n            children: \"Last 12 Months\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setIsLoading(true);\n            setTimeout(() => {\n              // Generate new mock data with the same date range\n              const mockData = generateMockAnalyticsData(data.scansByMonth.reduce((sum, item) => sum + item.totalScans, 0), dateRange);\n              setData(mockData);\n              setIsLoading(false);\n            }, 500);\n          },\n          className: `flex items-center px-3 py-1.5 rounded-md text-sm font-medium ${darkMode ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'}`,\n          children: [/*#__PURE__*/_jsxDEV(ArrowPathIcon, {\n            className: \"h-4 w-4 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this), \"Refresh\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${darkMode ? 'bg-gray-800' : 'bg-white'} p-4 rounded-lg shadow-sm`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: `text-lg font-medium mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`,\n          children: \"Monthly Scan Volume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-72\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            data: monthlyScansChartData,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${darkMode ? 'bg-gray-800' : 'bg-white'} p-4 rounded-lg shadow-sm`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: `text-lg font-medium mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`,\n          children: \"Scan Volume Trends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-72\",\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: monthlyTrendChartData,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${darkMode ? 'bg-gray-800' : 'bg-white'} p-4 rounded-lg shadow-sm`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: `text-lg font-medium mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`,\n          children: \"Nodule Location Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-72\",\n          children: /*#__PURE__*/_jsxDEV(Pie, {\n            data: noduleLocationChartData,\n            options: pieChartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${darkMode ? 'bg-gray-800' : 'bg-white'} p-4 rounded-lg shadow-sm`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: `text-lg font-medium mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`,\n          children: \"AI Confidence Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-72\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            data: confidenceChartData,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${darkMode ? 'bg-gray-800' : 'bg-white'} p-4 rounded-lg shadow-sm`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: `text-lg font-medium mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`,\n          children: \"Top Doctors by Scan Volume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-72\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            data: doctorScansChartData,\n            options: {\n              ...chartOptions,\n              indexAxis: 'y'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${darkMode ? 'bg-gray-800' : 'bg-white'} p-4 rounded-lg shadow-sm`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: `text-lg font-medium mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`,\n          children: \"Nodule Size Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-72\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            data: noduleSizeChartData,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${darkMode ? 'bg-indigo-900/30 border-indigo-800' : 'bg-indigo-50 border-indigo-100'} border rounded-lg p-4 mb-6`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: `text-base font-medium mb-2 ${darkMode ? 'text-indigo-300' : 'text-indigo-800'}`,\n        children: \"Advanced Analytics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `text-sm ${darkMode ? 'text-indigo-200' : 'text-indigo-700'}`,\n        children: \"This dashboard contains sample visualization data. In a production environment, these charts would be populated with real analytics data from your scan database. Contact your administrator for access to detailed reporting features.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 364,\n    columnNumber: 5\n  }, this);\n};\n_s(AnalyticsPage, \"0viSRsxesh0IBRYl4FFIewx3HcY=\", false, function () {\n  return [useTheme, useAuth];\n});\n_c = AnalyticsPage;\nexport default AnalyticsPage;\nvar _c;\n$RefreshReg$(_c, \"AnalyticsPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Chart","ChartJS","CategoryScale","LinearScale","BarElement","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","RadialLinearScale","Bar","Line","Pie","Radar","useTheme","useAuth","ChartBarIcon","ArrowPathIcon","ExclamationCircleIcon","CalendarIcon","ClockIcon","jsxDEV","_jsxDEV","register","AnalyticsPage","_s","data","setData","scansByMonth","noduleLocationData","confidenceDistribution","scansByDoctor","noduleSize","dateRange","setDateRange","isLoading","setIsLoading","error","setError","darkMode","user","fetchAnalyticsData","resultsResponse","get","actualResults","mockData","generateMockAnalyticsData","length","console","resultCount","range","now","Date","monthsToShow","monthLabels","i","d","setMonth","getMonth","push","toLocaleString","month","year","baseScanCount","Math","max","floor","map","factor","totalScans","random","withNodules","location","count","confidenceRanges","doctorNames","selectedDoctors","sort","slice","doctor","scans","a","b","noduleSizeRanges","monthlyScansChartData","labels","item","datasets","label","backgroundColor","borderColor","borderWidth","monthlyTrendChartData","fill","tension","noduleLocationChartData","confidenceChartData","doctorScansChartData","noduleSizeChartData","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","color","font","size","tooltip","titleColor","bodyColor","scales","y","beginAtZero","ticks","precision","grid","x","pieChartOptions","padding","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","setTimeout","reduce","sum","options","indexAxis","_c","$RefreshReg$"],"sources":["C:/Users/kouss/Desktop/Cursor/Segmentation/pipeline/webapp/static/src/pages/AnalyticsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, PointElement, LineElement, Title, Tooltip, Legend, ArcElement, RadialLinearScale } from 'chart.js';\r\nimport { Bar, Line, Pie, Radar } from 'react-chartjs-2';\r\nimport { useTheme } from '../contexts/ThemeContext';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { ChartBarIcon, ArrowPathIcon, ExclamationCircleIcon, CalendarIcon, ClockIcon } from '@heroicons/react/24/outline';\r\n\r\n// Register ChartJS components\r\nChartJS.register(\r\n  CategoryScale, \r\n  LinearScale, \r\n  BarElement, \r\n  PointElement, \r\n  LineElement,\r\n  Title, \r\n  Tooltip, \r\n  Legend, \r\n  ArcElement,\r\n  RadialLinearScale\r\n);\r\n\r\nconst AnalyticsPage = () => {\r\n  const [data, setData] = useState({\r\n    scansByMonth: [],\r\n    noduleLocationData: [],\r\n    confidenceDistribution: [],\r\n    scansByDoctor: [],\r\n    noduleSize: []\r\n  });\r\n  const [dateRange, setDateRange] = useState('6months');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const { darkMode } = useTheme();\r\n  const { user } = useAuth();\r\n\r\n  // Mock data generation\r\n  useEffect(() => {\r\n    const fetchAnalyticsData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        \r\n        // In a real implementation, this would be an API call to fetch analytics data\r\n        // For now, we'll generate mock data that looks realistic\r\n        \r\n        // Fetch real scan results for reference\r\n        const resultsResponse = await axios.get('/api/results');\r\n        const actualResults = resultsResponse.data || [];\r\n        \r\n        // Generate realistic mock data based on the actual results count\r\n        const mockData = generateMockAnalyticsData(actualResults.length, dateRange);\r\n        setData(mockData);\r\n        \r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching analytics data:', error);\r\n        setError('Failed to load analytics data. Please try again later.');\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAnalyticsData();\r\n  }, [dateRange]);\r\n\r\n  // Generate mock data for visualization\r\n  const generateMockAnalyticsData = (resultCount, range) => {\r\n    // Define date ranges\r\n    const now = new Date();\r\n    let monthsToShow = 6;\r\n    \r\n    switch(range) {\r\n      case '3months':\r\n        monthsToShow = 3;\r\n        break;\r\n      case '12months':\r\n        monthsToShow = 12;\r\n        break;\r\n      default:\r\n        monthsToShow = 6;\r\n    }\r\n    \r\n    // Generate months labels\r\n    const monthLabels = [];\r\n    for (let i = monthsToShow - 1; i >= 0; i--) {\r\n      const d = new Date();\r\n      d.setMonth(now.getMonth() - i);\r\n      monthLabels.push(d.toLocaleString('default', { month: 'short', year: 'numeric' }));\r\n    }\r\n    \r\n    // Scans by month (with some randomization for realistic data)\r\n    const baseScanCount = Math.max(Math.floor(resultCount / monthsToShow), 1);\r\n    const scansByMonth = monthLabels.map((month, i) => {\r\n      // Make more recent months have slightly more scans for a realistic trend\r\n      const factor = 0.5 + ((i + 1) / monthsToShow) * 0.5;\r\n      return {\r\n        month,\r\n        totalScans: Math.floor(baseScanCount * factor * (0.8 + Math.random() * 0.4)),\r\n        withNodules: Math.floor(baseScanCount * factor * 0.6 * (0.7 + Math.random() * 0.5))\r\n      };\r\n    });\r\n    \r\n    // Nodule location data (distribution across lung areas)\r\n    const noduleLocationData = [\r\n      { location: 'Upper Right Lobe', count: Math.floor(10 + Math.random() * 20) },\r\n      { location: 'Middle Right Lobe', count: Math.floor(5 + Math.random() * 15) },\r\n      { location: 'Lower Right Lobe', count: Math.floor(15 + Math.random() * 25) },\r\n      { location: 'Upper Left Lobe', count: Math.floor(10 + Math.random() * 20) },\r\n      { location: 'Lower Left Lobe', count: Math.floor(15 + Math.random() * 25) },\r\n    ];\r\n    \r\n    // AI confidence distribution\r\n    const confidenceRanges = ['90-100%', '80-90%', '70-80%', '60-70%', '<60%'];\r\n    const confidenceDistribution = confidenceRanges.map(range => ({\r\n      range,\r\n      count: Math.floor(5 + Math.random() * 20)\r\n    }));\r\n    \r\n    // Scans by doctor (top 5)\r\n    const doctorNames = [\r\n      'Dr. Smith', 'Dr. Johnson', 'Dr. Williams', 'Dr. Brown', 'Dr. Jones', \r\n      'Dr. Garcia', 'Dr. Miller', 'Dr. Davis', 'Dr. Rodriguez', 'Dr. Martinez'\r\n    ];\r\n    \r\n    // Select 5 random doctors\r\n    const selectedDoctors = doctorNames.sort(() => 0.5 - Math.random()).slice(0, 5);\r\n    \r\n    const scansByDoctor = selectedDoctors.map(doctor => ({\r\n      doctor,\r\n      scans: Math.floor(5 + Math.random() * 20)\r\n    })).sort((a, b) => b.scans - a.scans);\r\n    \r\n    // Nodule size distribution\r\n    const noduleSizeRanges = ['<3mm', '3-6mm', '6-10mm', '10-15mm', '>15mm'];\r\n    const noduleSize = noduleSizeRanges.map(range => ({\r\n      range,\r\n      count: Math.floor(5 + Math.random() * 15)\r\n    }));\r\n    \r\n    return {\r\n      scansByMonth,\r\n      noduleLocationData,\r\n      confidenceDistribution,\r\n      scansByDoctor,\r\n      noduleSize\r\n    };\r\n  };\r\n\r\n  // Chart configuration and data preparation\r\n  const monthlyScansChartData = {\r\n    labels: data.scansByMonth.map(item => item.month),\r\n    datasets: [\r\n      {\r\n        label: 'Total Scans',\r\n        data: data.scansByMonth.map(item => item.totalScans),\r\n        backgroundColor: 'rgba(79, 70, 229, 0.6)',\r\n        borderColor: 'rgba(79, 70, 229, 1)',\r\n        borderWidth: 1,\r\n      },\r\n      {\r\n        label: 'Scans With Nodules',\r\n        data: data.scansByMonth.map(item => item.withNodules),\r\n        backgroundColor: 'rgba(236, 72, 153, 0.6)',\r\n        borderColor: 'rgba(236, 72, 153, 1)',\r\n        borderWidth: 1,\r\n      }\r\n    ],\r\n  };\r\n\r\n  const monthlyTrendChartData = {\r\n    labels: data.scansByMonth.map(item => item.month),\r\n    datasets: [\r\n      {\r\n        label: 'Total Scans',\r\n        data: data.scansByMonth.map(item => item.totalScans),\r\n        backgroundColor: 'rgba(79, 70, 229, 0.1)',\r\n        borderColor: 'rgba(79, 70, 229, 1)',\r\n        fill: true,\r\n        tension: 0.4,\r\n      },\r\n      {\r\n        label: 'Scans With Nodules',\r\n        data: data.scansByMonth.map(item => item.withNodules),\r\n        backgroundColor: 'rgba(236, 72, 153, 0.1)',\r\n        borderColor: 'rgba(236, 72, 153, 1)',\r\n        fill: true,\r\n        tension: 0.4,\r\n      }\r\n    ],\r\n  };\r\n\r\n  const noduleLocationChartData = {\r\n    labels: data.noduleLocationData.map(item => item.location),\r\n    datasets: [\r\n      {\r\n        label: 'Nodule Distribution by Location',\r\n        data: data.noduleLocationData.map(item => item.count),\r\n        backgroundColor: [\r\n          'rgba(79, 70, 229, 0.6)',\r\n          'rgba(16, 185, 129, 0.6)',\r\n          'rgba(245, 158, 11, 0.6)',\r\n          'rgba(236, 72, 153, 0.6)',\r\n          'rgba(99, 102, 241, 0.6)'\r\n        ],\r\n        borderColor: [\r\n          'rgba(79, 70, 229, 1)',\r\n          'rgba(16, 185, 129, 1)',\r\n          'rgba(245, 158, 11, 1)',\r\n          'rgba(236, 72, 153, 1)',\r\n          'rgba(99, 102, 241, 1)'\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const confidenceChartData = {\r\n    labels: data.confidenceDistribution.map(item => item.range),\r\n    datasets: [\r\n      {\r\n        label: 'AI Confidence Distribution',\r\n        data: data.confidenceDistribution.map(item => item.count),\r\n        backgroundColor: 'rgba(16, 185, 129, 0.6)',\r\n        borderColor: 'rgba(16, 185, 129, 1)',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const doctorScansChartData = {\r\n    labels: data.scansByDoctor.map(item => item.doctor),\r\n    datasets: [\r\n      {\r\n        label: 'Scans by Doctor',\r\n        data: data.scansByDoctor.map(item => item.scans),\r\n        backgroundColor: [\r\n          'rgba(79, 70, 229, 0.6)',\r\n          'rgba(16, 185, 129, 0.6)',\r\n          'rgba(245, 158, 11, 0.6)',\r\n          'rgba(236, 72, 153, 0.6)',\r\n          'rgba(99, 102, 241, 0.6)'\r\n        ],\r\n        borderColor: [\r\n          'rgba(79, 70, 229, 1)',\r\n          'rgba(16, 185, 129, 1)',\r\n          'rgba(245, 158, 11, 1)',\r\n          'rgba(236, 72, 153, 1)',\r\n          'rgba(99, 102, 241, 1)'\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const noduleSizeChartData = {\r\n    labels: data.noduleSize.map(item => item.range),\r\n    datasets: [\r\n      {\r\n        label: 'Nodule Size Distribution',\r\n        data: data.noduleSize.map(item => item.count),\r\n        backgroundColor: 'rgba(245, 158, 11, 0.6)',\r\n        borderColor: [\r\n          'rgba(245, 158, 11, 1)',\r\n          'rgba(245, 158, 11, 1)',\r\n          'rgba(245, 158, 11, 1)',\r\n          'rgba(245, 158, 11, 1)',\r\n          'rgba(245, 158, 11, 1)'\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n        labels: {\r\n          color: darkMode ? '#fff' : '#000',\r\n          font: {\r\n            size: 12\r\n          }\r\n        }\r\n      },\r\n      tooltip: {\r\n        backgroundColor: darkMode ? 'rgba(0, 0, 0, 0.8)' : 'rgba(255, 255, 255, 0.8)',\r\n        titleColor: darkMode ? '#fff' : '#000',\r\n        bodyColor: darkMode ? '#e5e7eb' : '#374151',\r\n        borderColor: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)',\r\n        borderWidth: 1\r\n      }\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        ticks: {\r\n          precision: 0,\r\n          color: darkMode ? '#e5e7eb' : '#374151',\r\n        },\r\n        grid: {\r\n          color: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)',\r\n        }\r\n      },\r\n      x: {\r\n        ticks: {\r\n          color: darkMode ? '#e5e7eb' : '#374151',\r\n        },\r\n        grid: {\r\n          color: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)',\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // Special options for pie chart\r\n  const pieChartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'right',\r\n        labels: {\r\n          color: darkMode ? '#fff' : '#000',\r\n          font: {\r\n            size: 12\r\n          },\r\n          padding: 20\r\n        }\r\n      },\r\n      tooltip: {\r\n        backgroundColor: darkMode ? 'rgba(0, 0, 0, 0.8)' : 'rgba(255, 255, 255, 0.8)',\r\n        titleColor: darkMode ? '#fff' : '#000',\r\n        bodyColor: darkMode ? '#e5e7eb' : '#374151',\r\n        borderColor: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)',\r\n        borderWidth: 1\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className={`text-center py-12 ${darkMode ? 'text-white' : ''}`}>\r\n        <div className=\"inline-block h-8 w-8 animate-spin rounded-full border-4 border-solid border-indigo-600 border-r-transparent\"></div>\r\n        <p className={`mt-4 ${darkMode ? 'text-gray-300' : 'text-gray-600'}`}>Loading analytics data...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className={`${darkMode ? 'bg-red-900' : 'bg-red-50'} p-4 rounded-md`}>\r\n        <div className=\"flex\">\r\n          <ExclamationCircleIcon className={`h-5 w-5 ${darkMode ? 'text-red-300' : 'text-red-400'}`} aria-hidden=\"true\" />\r\n          <div className=\"ml-3\">\r\n            <h3 className={`text-sm font-medium ${darkMode ? 'text-red-300' : 'text-red-800'}`}>{error}</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={darkMode ? 'text-white' : ''}>\r\n      <div className=\"mb-6\">\r\n        <h1 className={`text-2xl font-semibold ${darkMode ? 'text-white' : 'text-gray-900'}`}>\r\n          <ChartBarIcon className=\"h-7 w-7 inline-block mr-2 mb-1\" />\r\n          Analytics Dashboard\r\n        </h1>\r\n        <p className={`mt-1 text-sm ${darkMode ? 'text-gray-300' : 'text-gray-500'}`}>\r\n          Comprehensive data visualization for scan results and nodule detection statistics\r\n        </p>\r\n      </div>\r\n\r\n      {/* Date filter */}\r\n      <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} p-4 rounded-lg shadow-sm mb-6`}>\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center\">\r\n            <CalendarIcon className={`h-5 w-5 mr-2 ${darkMode ? 'text-gray-400' : 'text-gray-500'}`} />\r\n            <span className={`text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>\r\n              Time Period:\r\n            </span>\r\n          </div>\r\n          <div className=\"flex space-x-2\">\r\n            <button\r\n              onClick={() => setDateRange('3months')}\r\n              className={`px-3 py-1.5 text-sm font-medium rounded-md transition-colors ${\r\n                dateRange === '3months'\r\n                  ? darkMode\r\n                    ? 'bg-indigo-600 text-white'\r\n                    : 'bg-indigo-50 text-indigo-700'\r\n                  : darkMode\r\n                    ? 'bg-gray-700 text-gray-300 hover:bg-gray-600'\r\n                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n              }`}\r\n            >\r\n              Last 3 Months\r\n            </button>\r\n            <button\r\n              onClick={() => setDateRange('6months')}\r\n              className={`px-3 py-1.5 text-sm font-medium rounded-md transition-colors ${\r\n                dateRange === '6months'\r\n                  ? darkMode\r\n                    ? 'bg-indigo-600 text-white'\r\n                    : 'bg-indigo-50 text-indigo-700'\r\n                  : darkMode\r\n                    ? 'bg-gray-700 text-gray-300 hover:bg-gray-600'\r\n                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n              }`}\r\n            >\r\n              Last 6 Months\r\n            </button>\r\n            <button\r\n              onClick={() => setDateRange('12months')}\r\n              className={`px-3 py-1.5 text-sm font-medium rounded-md transition-colors ${\r\n                dateRange === '12months'\r\n                  ? darkMode\r\n                    ? 'bg-indigo-600 text-white'\r\n                    : 'bg-indigo-50 text-indigo-700'\r\n                  : darkMode\r\n                    ? 'bg-gray-700 text-gray-300 hover:bg-gray-600'\r\n                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n              }`}\r\n            >\r\n              Last 12 Months\r\n            </button>\r\n          </div>\r\n          <button\r\n            onClick={() => {\r\n              setIsLoading(true);\r\n              setTimeout(() => {\r\n                // Generate new mock data with the same date range\r\n                const mockData = generateMockAnalyticsData(data.scansByMonth.reduce((sum, item) => sum + item.totalScans, 0), dateRange);\r\n                setData(mockData);\r\n                setIsLoading(false);\r\n              }, 500);\r\n            }}\r\n            className={`flex items-center px-3 py-1.5 rounded-md text-sm font-medium ${\r\n              darkMode \r\n                ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' \r\n                : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n            }`}\r\n          >\r\n            <ArrowPathIcon className=\"h-4 w-4 mr-1\" />\r\n            Refresh\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Charts grid */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n        {/* Monthly scans chart */}\r\n        <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} p-4 rounded-lg shadow-sm`}>\r\n          <h2 className={`text-lg font-medium mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`}>\r\n            Monthly Scan Volume\r\n          </h2>\r\n          <div className=\"h-72\">\r\n            <Bar data={monthlyScansChartData} options={chartOptions} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Monthly trend chart */}\r\n        <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} p-4 rounded-lg shadow-sm`}>\r\n          <h2 className={`text-lg font-medium mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`}>\r\n            Scan Volume Trends\r\n          </h2>\r\n          <div className=\"h-72\">\r\n            <Line data={monthlyTrendChartData} options={chartOptions} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Nodule location chart */}\r\n        <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} p-4 rounded-lg shadow-sm`}>\r\n          <h2 className={`text-lg font-medium mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`}>\r\n            Nodule Location Distribution\r\n          </h2>\r\n          <div className=\"h-72\">\r\n            <Pie data={noduleLocationChartData} options={pieChartOptions} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* AI confidence distribution */}\r\n        <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} p-4 rounded-lg shadow-sm`}>\r\n          <h2 className={`text-lg font-medium mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`}>\r\n            AI Confidence Distribution\r\n          </h2>\r\n          <div className=\"h-72\">\r\n            <Bar data={confidenceChartData} options={chartOptions} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Scans by doctor */}\r\n        <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} p-4 rounded-lg shadow-sm`}>\r\n          <h2 className={`text-lg font-medium mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`}>\r\n            Top Doctors by Scan Volume\r\n          </h2>\r\n          <div className=\"h-72\">\r\n            <Bar \r\n              data={doctorScansChartData} \r\n              options={{\r\n                ...chartOptions,\r\n                indexAxis: 'y'\r\n              }} \r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Nodule size distribution */}\r\n        <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} p-4 rounded-lg shadow-sm`}>\r\n          <h2 className={`text-lg font-medium mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`}>\r\n            Nodule Size Distribution\r\n          </h2>\r\n          <div className=\"h-72\">\r\n            <Bar data={noduleSizeChartData} options={chartOptions} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Advanced analytics note */}\r\n      <div className={`${darkMode ? 'bg-indigo-900/30 border-indigo-800' : 'bg-indigo-50 border-indigo-100'} border rounded-lg p-4 mb-6`}>\r\n        <h3 className={`text-base font-medium mb-2 ${darkMode ? 'text-indigo-300' : 'text-indigo-800'}`}>\r\n          Advanced Analytics\r\n        </h3>\r\n        <p className={`text-sm ${darkMode ? 'text-indigo-200' : 'text-indigo-700'}`}>\r\n          This dashboard contains sample visualization data. In a production environment, these charts would be populated with real analytics data from your scan database. Contact your administrator for access to detailed reporting features.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnalyticsPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}