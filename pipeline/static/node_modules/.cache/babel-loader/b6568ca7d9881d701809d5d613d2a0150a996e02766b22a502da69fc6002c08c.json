{"ast":null,"code":"var _jsxFileName = \"D:\\\\Segmentation\\\\pipeline\\\\webapp\\\\static\\\\src\\\\components\\\\InteractiveViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { ArrowPathIcon, ExclamationCircleIcon } from '@heroicons/react/24/outline';\nimport { useTheme } from '../contexts/ThemeContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InteractiveViewer = ({\n  caseId,\n  selectedNoduleId\n}) => {\n  _s();\n  const [volumeInfo, setVolumeInfo] = useState(null);\n  const [currentAxis, setCurrentAxis] = useState('axial');\n  const [currentSlice, setCurrentSlice] = useState(0);\n  const [sliceImage, setSliceImage] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [nodulesInSlice, setNodulesInSlice] = useState([]);\n  const canvasRef = useRef(null);\n  const {\n    darkMode\n  } = useTheme();\n\n  // Function to go to a specific nodule slice\n  const goToNoduleSlice = noduleId => {\n    if (!volumeInfo || !volumeInfo.nodules) return;\n\n    // Find the nodule by ID\n    const nodule = volumeInfo.nodules.find(n => n.id === noduleId);\n    if (!nodule) return;\n\n    // Set the axis to axial (z)\n    setCurrentAxis('axial');\n\n    // Set the slice to the nodule's z-coordinate\n    setCurrentSlice(Math.round(nodule.z));\n  };\n\n  // Navigate to selected nodule when selectedNoduleId or volumeInfo changes\n  useEffect(() => {\n    if (selectedNoduleId && volumeInfo && volumeInfo.nodules) {\n      goToNoduleSlice(selectedNoduleId);\n    }\n  }, [selectedNoduleId, volumeInfo]);\n\n  // Fetch volume metadata\n  useEffect(() => {\n    const fetchVolumeInfo = async () => {\n      try {\n        setIsLoading(true);\n        const response = await axios.get(`/api/results/${caseId}/slices`);\n        setVolumeInfo(response.data.volume_info);\n\n        // Set initial slice to middle of volume\n        const initialSlice = Math.floor(response.data.volume_info.dimensions.depth / 2);\n        setCurrentSlice(initialSlice);\n        setIsLoading(false);\n      } catch (error) {\n        var _error$response, _error$response$data;\n        console.error('Error fetching volume info:', error);\n        setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to load volume data');\n        setIsLoading(false);\n      }\n    };\n    fetchVolumeInfo();\n  }, [caseId]);\n\n  // Fetch slice when axis or slice index changes\n  useEffect(() => {\n    const fetchSlice = async () => {\n      if (!volumeInfo) return;\n      try {\n        setIsLoading(true);\n        const response = await axios.get(`/api/results/${caseId}/slices/${currentAxis}/${currentSlice}`);\n        setSliceImage(response.data.slice_data);\n        setIsLoading(false);\n      } catch (error) {\n        var _error$response2, _error$response2$data;\n        console.error('Error fetching slice:', error);\n        setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to load slice');\n        setIsLoading(false);\n      }\n    };\n    fetchSlice();\n  }, [caseId, currentAxis, currentSlice, volumeInfo]);\n\n  // Find nodules in the current slice\n  useEffect(() => {\n    if (!volumeInfo || !volumeInfo.nodules) return;\n\n    // Determine which nodules are visible in this slice\n    const sliceNodules = volumeInfo.nodules.filter(nodule => {\n      // Check if this nodule is visible in the current slice\n      if (currentAxis === 'axial') {\n        // Check if the nodule's z-coordinate is close to this slice\n        return Math.abs(nodule.z - currentSlice) <= nodule.radius;\n      } else if (currentAxis === 'coronal') {\n        // Check if the nodule's y-coordinate is close to this slice\n        return Math.abs(nodule.y - currentSlice) <= nodule.radius;\n      } else {\n        // sagittal\n        // Check if the nodule's x-coordinate is close to this slice\n        return Math.abs(nodule.x - currentSlice) <= nodule.radius;\n      }\n    });\n    setNodulesInSlice(sliceNodules);\n  }, [volumeInfo, currentAxis, currentSlice]);\n\n  // Get max slice index for current axis\n  const getMaxSliceIndex = () => {\n    if (!volumeInfo) return 0;\n    if (currentAxis === 'axial') {\n      return volumeInfo.dimensions.depth - 1;\n    } else if (currentAxis === 'coronal') {\n      return volumeInfo.dimensions.height - 1;\n    } else {\n      // sagittal\n      return volumeInfo.dimensions.width - 1;\n    }\n  };\n  const handleAxisChange = axis => {\n    setCurrentAxis(axis);\n    // Reset to middle slice when changing axis\n    const middle = Math.floor(axis === 'axial' ? volumeInfo.dimensions.depth / 2 : axis === 'coronal' ? volumeInfo.dimensions.height / 2 : volumeInfo.dimensions.width / 2);\n    setCurrentSlice(middle);\n  };\n  const handleSliceChange = e => {\n    setCurrentSlice(parseInt(e.target.value, 10));\n  };\n\n  // Track which slices have nodules to highlight them on the slider\n  const slicesWithNodules = () => {\n    if (!volumeInfo || !volumeInfo.nodules) return [];\n    const noduleSlices = new Set();\n    volumeInfo.nodules.forEach(nodule => {\n      if (currentAxis === 'axial') {\n        // Mark all slices within the nodule's radius\n        const start = Math.max(0, Math.floor(nodule.z - nodule.radius));\n        const end = Math.min(volumeInfo.dimensions.depth - 1, Math.ceil(nodule.z + nodule.radius));\n        for (let i = start; i <= end; i++) {\n          noduleSlices.add(i);\n        }\n      } else if (currentAxis === 'coronal') {\n        const start = Math.max(0, Math.floor(nodule.y - nodule.radius));\n        const end = Math.min(volumeInfo.dimensions.height - 1, Math.ceil(nodule.y + nodule.radius));\n        for (let i = start; i <= end; i++) {\n          noduleSlices.add(i);\n        }\n      } else {\n        // sagittal\n        const start = Math.max(0, Math.floor(nodule.x - nodule.radius));\n        const end = Math.min(volumeInfo.dimensions.width - 1, Math.ceil(nodule.x + nodule.radius));\n        for (let i = start; i <= end; i++) {\n          noduleSlices.add(i);\n        }\n      }\n    });\n    return Array.from(noduleSlices);\n  };\n\n  // Nodule colors for different confidence levels\n  const getNoduleColor = confidence => {\n    if (confidence >= 0.8) return 'rgba(220, 38, 38, 0.8)'; // Red for high confidence\n    if (confidence >= 0.6) return 'rgba(234, 88, 12, 0.8)'; // Orange for medium confidence\n    return 'rgba(234, 179, 8, 0.8)'; // Yellow for lower confidence\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${darkMode ? 'bg-red-900' : 'bg-red-50'} p-4 rounded-md`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(ExclamationCircleIcon, {\n          className: `h-5 w-5 ${darkMode ? 'text-red-300' : 'text-red-400'}`,\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: `text-sm font-medium ${darkMode ? 'text-red-300' : 'text-red-800'}`,\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `mt-2 text-sm ${darkMode ? 'text-red-200' : 'text-red-700'}`,\n            children: \"Interactive visualization is not available. Please refer to the static image results.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this);\n  }\n  if (isLoading && !volumeInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `text-center py-12 ${darkMode ? 'text-white' : 'text-gray-600'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline-block h-8 w-8 animate-spin rounded-full border-4 border-solid border-indigo-600 border-r-transparent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `mt-4 ${darkMode ? 'text-gray-300' : 'text-gray-600'}`,\n        children: \"Loading volume data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${darkMode ? 'bg-gray-800' : 'bg-white'} shadow rounded-lg overflow-hidden`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `px-4 py-5 border-b ${darkMode ? 'border-gray-700' : 'border-gray-200'} sm:px-6 flex justify-between items-center`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: `text-lg font-medium ${darkMode ? 'text-white' : 'text-gray-900'}`,\n        children: \"Interactive Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAxisChange('axial'),\n          className: `px-3 py-1 rounded-md text-sm font-medium ${currentAxis === 'axial' ? 'bg-indigo-600 text-white' : darkMode ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,\n          children: \"Axial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAxisChange('coronal'),\n          className: `px-3 py-1 rounded-md text-sm font-medium ${currentAxis === 'coronal' ? 'bg-indigo-600 text-white' : darkMode ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,\n          children: \"Coronal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAxisChange('sagittal'),\n          className: `px-3 py-1 rounded-md text-sm font-medium ${currentAxis === 'sagittal' ? 'bg-indigo-600 text-white' : darkMode ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,\n          children: \"Sagittal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-4 text-sm ${darkMode ? 'text-gray-300' : 'text-gray-600'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Interactive visualization shows enhanced CT scan slices with detected nodules highlighted. Navigate through slices using the controls.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"mt-2 list-disc pl-5 space-y-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Blue markers on slider: Slices containing nodules\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Colored circles: Detected nodules (color indicates confidence level)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Red highlights: Areas of interest where nodules may be present\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Enhanced contrast: Adaptive window/level settings improve nodule visibility\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Use slider or buttons to navigate slices and jump between nodules\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"View planes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), \":\", /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"ml-2 mt-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Axial: Top-down view (transverse plane)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Coronal: Front-to-back view (rotated for better orientation)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Sagittal: Side view (left-to-right)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col lg:flex-row gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 relative max-w-4xl mx-auto lg:mx-0\",\n          children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `absolute inset-0 flex items-center justify-center ${darkMode ? 'bg-gray-700' : 'bg-gray-100'} rounded-md`,\n            children: /*#__PURE__*/_jsxDEV(ArrowPathIcon, {\n              className: \"h-8 w-8 text-indigo-500 animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: sliceImage && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: sliceImage,\n                alt: `${currentAxis} slice ${currentSlice}`,\n                className: \"w-full rounded-md shadow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 19\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-full lg:w-64 ${darkMode ? 'text-white' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"slice-slider\",\n              className: `block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`,\n              children: [\"Slice Navigator\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 text-xs font-normal\",\n                children: [\"(\", currentSlice, \" / \", getMaxSliceIndex(), \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative mt-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                id: \"slice-slider\",\n                min: \"0\",\n                max: getMaxSliceIndex(),\n                value: currentSlice,\n                onChange: handleSliceChange,\n                className: `w-full h-2 rounded-lg appearance-none cursor-pointer ${darkMode ? 'bg-gray-700' : 'bg-gray-200'}`,\n                style: {\n                  background: `linear-gradient(to right, \n                      ${darkMode ? '#4f46e5' : '#6366f1'} 0%, \n                      ${darkMode ? '#4f46e5' : '#6366f1'} ${currentSlice / getMaxSliceIndex() * 100}%, \n                      ${darkMode ? '#374151' : '#e5e7eb'} ${currentSlice / getMaxSliceIndex() * 100}%, \n                      ${darkMode ? '#374151' : '#e5e7eb'} 100%)`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 17\n              }, this), slicesWithNodules().map(slice => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'absolute',\n                  left: `${slice / getMaxSliceIndex() * 100}%`,\n                  top: '0px',\n                  width: '4px',\n                  height: '8px',\n                  backgroundColor: '#3b82f6',\n                  borderRadius: '2px',\n                  transform: 'translateX(-50%)',\n                  zIndex: 10\n                },\n                title: `Nodule at slice ${slice}`,\n                onClick: () => setCurrentSlice(slice)\n              }, `marker-${slice}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: `text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-2`,\n              children: \"Nodules In View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this), nodulesInSlice.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: `space-y-2 ${darkMode ? 'text-gray-300' : 'text-gray-700'}`,\n              children: nodulesInSlice.map(nodule => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"flex items-center justify-between\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"inline-block w-3 h-3 rounded-full mr-2\",\n                    style: {\n                      backgroundColor: getNoduleColor(nodule.confidence)\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm\",\n                    children: [nodule.id, /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `ml-2 ${darkMode ? 'text-gray-400' : 'text-gray-500'} text-xs`,\n                      children: [\"(conf: \", (nodule.confidence * 100).toFixed(1), \"%)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 356,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 23\n                }, this)\n              }, `nodule-${nodule.id}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `text-sm ${darkMode ? 'text-gray-400' : 'text-gray-500'}`,\n              children: \"No nodules in current slice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentSlice(Math.max(0, currentSlice - 1)),\n              disabled: currentSlice === 0,\n              className: `px-3 py-1 rounded text-sm ${currentSlice === 0 ? `${darkMode ? 'bg-gray-700 text-gray-500' : 'bg-gray-200 text-gray-400'} cursor-not-allowed` : `${darkMode ? 'bg-gray-700 text-white hover:bg-gray-600' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`}`,\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentSlice(Math.min(getMaxSliceIndex(), currentSlice + 1)),\n              disabled: currentSlice === getMaxSliceIndex(),\n              className: `px-3 py-1 rounded text-sm ${currentSlice === getMaxSliceIndex() ? `${darkMode ? 'bg-gray-700 text-gray-500' : 'bg-gray-200 text-gray-400'} cursor-not-allowed` : `${darkMode ? 'bg-gray-700 text-white hover:bg-gray-600' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`}`,\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_s(InteractiveViewer, \"GBXOsHp43Y10IcUhIo0AXSoALUs=\", false, function () {\n  return [useTheme];\n});\n_c = InteractiveViewer;\nexport default InteractiveViewer;\nvar _c;\n$RefreshReg$(_c, \"InteractiveViewer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","ArrowPathIcon","ExclamationCircleIcon","useTheme","jsxDEV","_jsxDEV","Fragment","_Fragment","InteractiveViewer","caseId","selectedNoduleId","_s","volumeInfo","setVolumeInfo","currentAxis","setCurrentAxis","currentSlice","setCurrentSlice","sliceImage","setSliceImage","isLoading","setIsLoading","error","setError","nodulesInSlice","setNodulesInSlice","canvasRef","darkMode","goToNoduleSlice","noduleId","nodules","nodule","find","n","id","Math","round","z","fetchVolumeInfo","response","get","data","volume_info","initialSlice","floor","dimensions","depth","_error$response","_error$response$data","console","message","fetchSlice","slice_data","_error$response2","_error$response2$data","sliceNodules","filter","abs","radius","y","x","getMaxSliceIndex","height","width","handleAxisChange","axis","middle","handleSliceChange","e","parseInt","target","value","slicesWithNodules","noduleSlices","Set","forEach","start","max","end","min","ceil","i","add","Array","from","getNoduleColor","confidence","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","htmlFor","type","onChange","style","background","map","slice","position","left","top","backgroundColor","borderRadius","transform","zIndex","title","length","toFixed","disabled","_c","$RefreshReg$"],"sources":["D:/Segmentation/pipeline/webapp/static/src/components/InteractiveViewer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { ArrowPathIcon, ExclamationCircleIcon } from '@heroicons/react/24/outline';\r\nimport { useTheme } from '../contexts/ThemeContext';\r\n\r\nconst InteractiveViewer = ({ caseId, selectedNoduleId }) => {\r\n  const [volumeInfo, setVolumeInfo] = useState(null);\r\n  const [currentAxis, setCurrentAxis] = useState('axial');\r\n  const [currentSlice, setCurrentSlice] = useState(0);\r\n  const [sliceImage, setSliceImage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [nodulesInSlice, setNodulesInSlice] = useState([]);\r\n  const canvasRef = useRef(null);\r\n  const { darkMode } = useTheme();\r\n\r\n  // Function to go to a specific nodule slice\r\n  const goToNoduleSlice = (noduleId) => {\r\n    if (!volumeInfo || !volumeInfo.nodules) return;\r\n    \r\n    // Find the nodule by ID\r\n    const nodule = volumeInfo.nodules.find(n => n.id === noduleId);\r\n    if (!nodule) return;\r\n    \r\n    // Set the axis to axial (z)\r\n    setCurrentAxis('axial');\r\n    \r\n    // Set the slice to the nodule's z-coordinate\r\n    setCurrentSlice(Math.round(nodule.z));\r\n  };\r\n\r\n  // Navigate to selected nodule when selectedNoduleId or volumeInfo changes\r\n  useEffect(() => {\r\n    if (selectedNoduleId && volumeInfo && volumeInfo.nodules) {\r\n      goToNoduleSlice(selectedNoduleId);\r\n    }\r\n  }, [selectedNoduleId, volumeInfo]);\r\n\r\n  // Fetch volume metadata\r\n  useEffect(() => {\r\n    const fetchVolumeInfo = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await axios.get(`/api/results/${caseId}/slices`);\r\n        setVolumeInfo(response.data.volume_info);\r\n        \r\n        // Set initial slice to middle of volume\r\n        const initialSlice = Math.floor(response.data.volume_info.dimensions.depth / 2);\r\n        setCurrentSlice(initialSlice);\r\n        \r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching volume info:', error);\r\n        setError(error.response?.data?.message || 'Failed to load volume data');\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchVolumeInfo();\r\n  }, [caseId]);\r\n\r\n  // Fetch slice when axis or slice index changes\r\n  useEffect(() => {\r\n    const fetchSlice = async () => {\r\n      if (!volumeInfo) return;\r\n      \r\n      try {\r\n        setIsLoading(true);\r\n        const response = await axios.get(`/api/results/${caseId}/slices/${currentAxis}/${currentSlice}`);\r\n        setSliceImage(response.data.slice_data);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching slice:', error);\r\n        setError(error.response?.data?.message || 'Failed to load slice');\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchSlice();\r\n  }, [caseId, currentAxis, currentSlice, volumeInfo]);\r\n\r\n  // Find nodules in the current slice\r\n  useEffect(() => {\r\n    if (!volumeInfo || !volumeInfo.nodules) return;\r\n    \r\n    // Determine which nodules are visible in this slice\r\n    const sliceNodules = volumeInfo.nodules.filter(nodule => {\r\n      // Check if this nodule is visible in the current slice\r\n      if (currentAxis === 'axial') {\r\n        // Check if the nodule's z-coordinate is close to this slice\r\n        return Math.abs(nodule.z - currentSlice) <= nodule.radius;\r\n      } else if (currentAxis === 'coronal') {\r\n        // Check if the nodule's y-coordinate is close to this slice\r\n        return Math.abs(nodule.y - currentSlice) <= nodule.radius;\r\n      } else { // sagittal\r\n        // Check if the nodule's x-coordinate is close to this slice\r\n        return Math.abs(nodule.x - currentSlice) <= nodule.radius;\r\n      }\r\n    });\r\n    \r\n    setNodulesInSlice(sliceNodules);\r\n  }, [volumeInfo, currentAxis, currentSlice]);\r\n\r\n  // Get max slice index for current axis\r\n  const getMaxSliceIndex = () => {\r\n    if (!volumeInfo) return 0;\r\n    \r\n    if (currentAxis === 'axial') {\r\n      return volumeInfo.dimensions.depth - 1;\r\n    } else if (currentAxis === 'coronal') {\r\n      return volumeInfo.dimensions.height - 1;\r\n    } else { // sagittal\r\n      return volumeInfo.dimensions.width - 1;\r\n    }\r\n  };\r\n\r\n  const handleAxisChange = (axis) => {\r\n    setCurrentAxis(axis);\r\n    // Reset to middle slice when changing axis\r\n    const middle = Math.floor(\r\n      axis === 'axial' \r\n        ? volumeInfo.dimensions.depth / 2\r\n        : axis === 'coronal'\r\n          ? volumeInfo.dimensions.height / 2\r\n          : volumeInfo.dimensions.width / 2\r\n    );\r\n    setCurrentSlice(middle);\r\n  };\r\n\r\n  const handleSliceChange = (e) => {\r\n    setCurrentSlice(parseInt(e.target.value, 10));\r\n  };\r\n\r\n  // Track which slices have nodules to highlight them on the slider\r\n  const slicesWithNodules = () => {\r\n    if (!volumeInfo || !volumeInfo.nodules) return [];\r\n    \r\n    const noduleSlices = new Set();\r\n    volumeInfo.nodules.forEach(nodule => {\r\n      if (currentAxis === 'axial') {\r\n        // Mark all slices within the nodule's radius\r\n        const start = Math.max(0, Math.floor(nodule.z - nodule.radius));\r\n        const end = Math.min(volumeInfo.dimensions.depth - 1, Math.ceil(nodule.z + nodule.radius));\r\n        for (let i = start; i <= end; i++) {\r\n          noduleSlices.add(i);\r\n        }\r\n      } else if (currentAxis === 'coronal') {\r\n        const start = Math.max(0, Math.floor(nodule.y - nodule.radius));\r\n        const end = Math.min(volumeInfo.dimensions.height - 1, Math.ceil(nodule.y + nodule.radius));\r\n        for (let i = start; i <= end; i++) {\r\n          noduleSlices.add(i);\r\n        }\r\n      } else { // sagittal\r\n        const start = Math.max(0, Math.floor(nodule.x - nodule.radius));\r\n        const end = Math.min(volumeInfo.dimensions.width - 1, Math.ceil(nodule.x + nodule.radius));\r\n        for (let i = start; i <= end; i++) {\r\n          noduleSlices.add(i);\r\n        }\r\n      }\r\n    });\r\n    \r\n    return Array.from(noduleSlices);\r\n  };\r\n\r\n  // Nodule colors for different confidence levels\r\n  const getNoduleColor = (confidence) => {\r\n    if (confidence >= 0.8) return 'rgba(220, 38, 38, 0.8)';  // Red for high confidence\r\n    if (confidence >= 0.6) return 'rgba(234, 88, 12, 0.8)';  // Orange for medium confidence\r\n    return 'rgba(234, 179, 8, 0.8)';  // Yellow for lower confidence\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className={`${darkMode ? 'bg-red-900' : 'bg-red-50'} p-4 rounded-md`}>\r\n        <div className=\"flex\">\r\n          <ExclamationCircleIcon className={`h-5 w-5 ${darkMode ? 'text-red-300' : 'text-red-400'}`} aria-hidden=\"true\" />\r\n          <div className=\"ml-3\">\r\n            <h3 className={`text-sm font-medium ${darkMode ? 'text-red-300' : 'text-red-800'}`}>{error}</h3>\r\n            <p className={`mt-2 text-sm ${darkMode ? 'text-red-200' : 'text-red-700'}`}>\r\n              Interactive visualization is not available. Please refer to the static image results.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading && !volumeInfo) {\r\n    return (\r\n      <div className={`text-center py-12 ${darkMode ? 'text-white' : 'text-gray-600'}`}>\r\n        <div className=\"inline-block h-8 w-8 animate-spin rounded-full border-4 border-solid border-indigo-600 border-r-transparent\"></div>\r\n        <p className={`mt-4 ${darkMode ? 'text-gray-300' : 'text-gray-600'}`}>Loading volume data...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} shadow rounded-lg overflow-hidden`}>\r\n      <div className={`px-4 py-5 border-b ${darkMode ? 'border-gray-700' : 'border-gray-200'} sm:px-6 flex justify-between items-center`}>\r\n        <h3 className={`text-lg font-medium ${darkMode ? 'text-white' : 'text-gray-900'}`}>Interactive Visualization</h3>\r\n        \r\n        {/* Axis selection */}\r\n        <div className=\"flex space-x-2\">\r\n          <button\r\n            onClick={() => handleAxisChange('axial')}\r\n            className={`px-3 py-1 rounded-md text-sm font-medium ${\r\n              currentAxis === 'axial'\r\n                ? 'bg-indigo-600 text-white'\r\n                : darkMode \r\n                  ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' \r\n                  : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\r\n            }`}\r\n          >\r\n            Axial\r\n          </button>\r\n          <button\r\n            onClick={() => handleAxisChange('coronal')}\r\n            className={`px-3 py-1 rounded-md text-sm font-medium ${\r\n              currentAxis === 'coronal'\r\n                ? 'bg-indigo-600 text-white'\r\n                : darkMode \r\n                  ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' \r\n                  : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\r\n            }`}\r\n          >\r\n            Coronal\r\n          </button>\r\n          <button\r\n            onClick={() => handleAxisChange('sagittal')}\r\n            className={`px-3 py-1 rounded-md text-sm font-medium ${\r\n              currentAxis === 'sagittal'\r\n                ? 'bg-indigo-600 text-white'\r\n                : darkMode \r\n                  ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' \r\n                  : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\r\n            }`}\r\n          >\r\n            Sagittal\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"p-6\">\r\n        {/* Description of view */}\r\n        <div className={`mb-4 text-sm ${darkMode ? 'text-gray-300' : 'text-gray-600'}`}>\r\n          <p>Interactive visualization shows enhanced CT scan slices with detected nodules highlighted. Navigate through slices using the controls.</p>\r\n          <ul className=\"mt-2 list-disc pl-5 space-y-1\">\r\n            <li>Blue markers on slider: Slices containing nodules</li>\r\n            <li>Colored circles: Detected nodules (color indicates confidence level)</li>\r\n            <li>Red highlights: Areas of interest where nodules may be present</li>\r\n            <li>Enhanced contrast: Adaptive window/level settings improve nodule visibility</li>\r\n            <li>Use slider or buttons to navigate slices and jump between nodules</li>\r\n            <li><strong>View planes</strong>: \r\n              <ul className=\"ml-2 mt-1\">\r\n                <li>Axial: Top-down view (transverse plane)</li>\r\n                <li>Coronal: Front-to-back view (rotated for better orientation)</li>\r\n                <li>Sagittal: Side view (left-to-right)</li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        \r\n        {/* Slice viewer */}\r\n        <div className=\"flex flex-col lg:flex-row gap-6\">\r\n          {/* Slice image */}\r\n          <div className=\"flex-1 relative max-w-4xl mx-auto lg:mx-0\">\r\n            {isLoading ? (\r\n              <div className={`absolute inset-0 flex items-center justify-center ${darkMode ? 'bg-gray-700' : 'bg-gray-100'} rounded-md`}>\r\n                <ArrowPathIcon className=\"h-8 w-8 text-indigo-500 animate-spin\" />\r\n              </div>\r\n            ) : (\r\n              <>\r\n                {sliceImage && (\r\n                  <div className=\"relative\">\r\n                    <img\r\n                      src={sliceImage}\r\n                      alt={`${currentAxis} slice ${currentSlice}`}\r\n                      className=\"w-full rounded-md shadow\"\r\n                    />\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n          \r\n          {/* Controls */}\r\n          <div className={`w-full lg:w-64 ${darkMode ? 'text-white' : ''}`}>\r\n            <div className=\"mb-4\">\r\n              <label\r\n                htmlFor=\"slice-slider\"\r\n                className={`block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}\r\n              >\r\n                Slice Navigator \r\n                <span className=\"ml-2 text-xs font-normal\">\r\n                  ({currentSlice} / {getMaxSliceIndex()})\r\n                </span>\r\n              </label>\r\n              \r\n              <div className=\"relative mt-1\">\r\n                <input\r\n                  type=\"range\"\r\n                  id=\"slice-slider\"\r\n                  min=\"0\"\r\n                  max={getMaxSliceIndex()}\r\n                  value={currentSlice}\r\n                  onChange={handleSliceChange}\r\n                  className={`w-full h-2 rounded-lg appearance-none cursor-pointer ${darkMode ? 'bg-gray-700' : 'bg-gray-200'}`}\r\n                  style={{\r\n                    background: `linear-gradient(to right, \r\n                      ${darkMode ? '#4f46e5' : '#6366f1'} 0%, \r\n                      ${darkMode ? '#4f46e5' : '#6366f1'} ${(currentSlice / getMaxSliceIndex()) * 100}%, \r\n                      ${darkMode ? '#374151' : '#e5e7eb'} ${(currentSlice / getMaxSliceIndex()) * 100}%, \r\n                      ${darkMode ? '#374151' : '#e5e7eb'} 100%)`\r\n                  }}\r\n                />\r\n                \r\n                {/* Markers for slices with nodules */}\r\n                {slicesWithNodules().map(slice => (\r\n                  <div\r\n                    key={`marker-${slice}`}\r\n                    style={{\r\n                      position: 'absolute',\r\n                      left: `${(slice / getMaxSliceIndex()) * 100}%`,\r\n                      top: '0px',\r\n                      width: '4px',\r\n                      height: '8px',\r\n                      backgroundColor: '#3b82f6',\r\n                      borderRadius: '2px',\r\n                      transform: 'translateX(-50%)',\r\n                      zIndex: 10\r\n                    }}\r\n                    title={`Nodule at slice ${slice}`}\r\n                    onClick={() => setCurrentSlice(slice)}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Nodules in current slice */}\r\n            <div className=\"mt-6\">\r\n              <h4 className={`text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-2`}>\r\n                Nodules In View\r\n              </h4>\r\n              \r\n              {nodulesInSlice.length > 0 ? (\r\n                <ul className={`space-y-2 ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>\r\n                  {nodulesInSlice.map(nodule => (\r\n                    <li key={`nodule-${nodule.id}`} className=\"flex items-center justify-between\">\r\n                      <div>\r\n                        <span \r\n                          className=\"inline-block w-3 h-3 rounded-full mr-2\"\r\n                          style={{ backgroundColor: getNoduleColor(nodule.confidence) }}\r\n                        />\r\n                        <span className=\"text-sm\">\r\n                          {nodule.id} \r\n                          <span className={`ml-2 ${darkMode ? 'text-gray-400' : 'text-gray-500'} text-xs`}>\r\n                            (conf: {(nodule.confidence * 100).toFixed(1)}%)\r\n                          </span>\r\n                        </span>\r\n                      </div>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              ) : (\r\n                <p className={`text-sm ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>\r\n                  No nodules in current slice\r\n                </p>\r\n              )}\r\n            </div>\r\n            \r\n            {/* Navigation buttons */}\r\n            <div className=\"flex justify-between mt-4\">\r\n              <button\r\n                onClick={() => setCurrentSlice(Math.max(0, currentSlice - 1))}\r\n                disabled={currentSlice === 0}\r\n                className={`px-3 py-1 rounded text-sm ${\r\n                  currentSlice === 0\r\n                    ? `${darkMode ? 'bg-gray-700 text-gray-500' : 'bg-gray-200 text-gray-400'} cursor-not-allowed`\r\n                    : `${darkMode ? 'bg-gray-700 text-white hover:bg-gray-600' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`\r\n                }`}\r\n              >\r\n                Previous\r\n              </button>\r\n              \r\n              <button\r\n                onClick={() => setCurrentSlice(Math.min(getMaxSliceIndex(), currentSlice + 1))}\r\n                disabled={currentSlice === getMaxSliceIndex()}\r\n                className={`px-3 py-1 rounded text-sm ${\r\n                  currentSlice === getMaxSliceIndex()\r\n                    ? `${darkMode ? 'bg-gray-700 text-gray-500' : 'bg-gray-200 text-gray-400'} cursor-not-allowed`\r\n                    : `${darkMode ? 'bg-gray-700 text-white hover:bg-gray-600' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`\r\n                }`}\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InteractiveViewer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}