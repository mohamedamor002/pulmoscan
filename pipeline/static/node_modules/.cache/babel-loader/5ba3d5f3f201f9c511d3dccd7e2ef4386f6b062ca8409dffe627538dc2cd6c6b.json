{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kouss\\\\Desktop\\\\Cursor\\\\Segmentation\\\\pipeline\\\\webapp\\\\static\\\\src\\\\pages\\\\UploadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { useDropzone } from 'react-dropzone';\nimport { CloudArrowUpIcon, ExclamationCircleIcon, InformationCircleIcon, CheckCircleIcon, XCircleIcon, ViewfinderCircleIcon, XMarkIcon } from '@heroicons/react/24/outline';\nimport { useTheme } from '../contexts/ThemeContext';\nimport InteractiveViewer from '../components/InteractiveViewer';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UploadPage = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [rawFile, setRawFile] = useState(null);\n  const [confidence, setConfidence] = useState(0.5);\n  const [isUploading, setIsUploading] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [processingProgress, setProcessingProgress] = useState(0);\n  const [showRawUpload, setShowRawUpload] = useState(false);\n  const [previewResult, setPreviewResult] = useState(null);\n  const [showPreview, setShowPreview] = useState(false);\n  const [selectedNoduleId, setSelectedNoduleId] = useState(null);\n  const [showLeaveConfirmation, setShowLeaveConfirmation] = useState(false);\n  const [showPatientForm, setShowPatientForm] = useState(false);\n  const [patientInfo, setPatientInfo] = useState({\n    name: '',\n    age: '',\n    description: ''\n  });\n  const [isNavigating, setIsNavigating] = useState(false);\n  const [pendingNavigation, setPendingNavigation] = useState(null);\n  const [uploadMode, setUploadMode] = useState('single'); // 'single' or 'dicom-volume'\n  const [dicomFiles, setDicomFiles] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    darkMode\n  } = useTheme();\n\n  // Track current location to detect changes\n  const [prevLocation, setPrevLocation] = useState(null);\n\n  // Handle location changes to detect navigation attempts\n  useEffect(() => {\n    // Skip on first render\n    if (prevLocation === null) {\n      setPrevLocation(location);\n      return;\n    }\n\n    // If the location has changed and we haven't explicitly allowed navigation\n    if (location !== prevLocation && !isNavigating && showPreview && previewResult) {\n      // Block navigation by going back to previous location\n      // This happens synchronously, before the confirmation dialog\n      navigate(-1);\n\n      // Show confirmation dialog\n      setShowLeaveConfirmation(true);\n      setPendingNavigation(location.pathname + location.search);\n      return;\n    }\n\n    // Update the previous location\n    setPrevLocation(location);\n  }, [location, prevLocation, isNavigating, showPreview, previewResult, navigate]);\n\n  // Browser back/refresh confirmation\n  useEffect(() => {\n    const handleBeforeUnload = e => {\n      if (showPreview && previewResult) {\n        e.preventDefault();\n        e.returnValue = '';\n        return '';\n      }\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [showPreview, previewResult]);\n\n  // Custom navigation function (can be used for in-app links that need confirmation)\n  const customNavigate = to => {\n    if (showPreview && previewResult) {\n      // Store pending navigation and show confirmation\n      setPendingNavigation(to);\n      setShowLeaveConfirmation(true);\n    } else {\n      // If no unsaved changes, navigate directly\n      navigate(to);\n    }\n  };\n\n  // Configure dropzone for CT scan files\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    accept: {\n      'application/octet-stream': ['.mhd', '.raw', '.nii.gz', '.nii'],\n      'application/dicom': ['.dcm']\n    },\n    multiple: true,\n    // Allow multiple files to select both .mhd and .raw together\n    onDrop: acceptedFiles => {\n      // Reset preview state when new files are dropped\n      setPreviewResult(null);\n      setShowPreview(false);\n\n      // Sort files to identify MHD and RAW files\n      const mhdFile = acceptedFiles.find(file => file.name.toLowerCase().endsWith('.mhd'));\n      const rawFile = acceptedFiles.find(file => file.name.toLowerCase().endsWith('.raw'));\n      if (mhdFile && rawFile) {\n        // Both files uploaded together\n        setFiles([mhdFile]);\n        setRawFile(rawFile);\n        setShowRawUpload(false);\n        setError(null);\n      } else if (mhdFile) {\n        // Only MHD file uploaded\n        setFiles([mhdFile]);\n        setShowRawUpload(true);\n        setError(\"You've uploaded an MHD file. Please also upload the associated RAW file.\");\n      } else if (rawFile) {\n        // Only RAW file uploaded\n        setRawFile(rawFile);\n        setShowRawUpload(true);\n        if (files.length === 0 || !files[0].name.toLowerCase().endsWith('.mhd')) {\n          setError(\"You've uploaded a RAW file. Please also upload the associated MHD file.\");\n        } else {\n          setError(null);\n        }\n      } else if (acceptedFiles.length > 0) {\n        // Other valid file types (NIFTI, DICOM)\n        setFiles(acceptedFiles);\n        setShowRawUpload(false);\n        setError(null);\n      }\n    }\n  });\n\n  // Configure dropzone specifically for RAW files\n  const {\n    getRootProps: getRawRootProps,\n    getInputProps: getRawInputProps,\n    isDragActive: isRawDragActive\n  } = useDropzone({\n    accept: {\n      'application/octet-stream': ['.raw']\n    },\n    multiple: false,\n    onDrop: acceptedFiles => {\n      if (acceptedFiles.length > 0) {\n        setRawFile(acceptedFiles[0]);\n        setError(null);\n      }\n    }\n  });\n\n  // Configure dropzone for DICOM series upload\n  const {\n    getRootProps: getDicomVolumeRootProps,\n    getInputProps: getDicomVolumeInputProps,\n    isDragActive: isDicomVolumeDragActive\n  } = useDropzone({\n    accept: {\n      'application/dicom': ['.dcm'],\n      'application/zip': ['.zip']\n    },\n    multiple: true,\n    onDrop: acceptedFiles => {\n      // Reset preview state when new files are dropped\n      setPreviewResult(null);\n      setShowPreview(false);\n\n      // Check if there's a single zip file\n      const zipFile = acceptedFiles.find(file => file.name.toLowerCase().endsWith('.zip'));\n      if (zipFile) {\n        setDicomFiles([zipFile]);\n        setError(null);\n        return;\n      }\n\n      // Filter only DICOM files\n      const dicomFilesOnly = acceptedFiles.filter(file => file.name.toLowerCase().endsWith('.dcm'));\n      if (dicomFilesOnly.length === 0) {\n        setError(\"Please upload DICOM (.dcm) files or a ZIP file containing DICOM files.\");\n        return;\n      }\n      if (dicomFilesOnly.length < 3) {\n        setError(\"Please upload at least 3 DICOM slices to create a 3D volume.\");\n        return;\n      }\n      setDicomFiles(dicomFilesOnly);\n      setError(null);\n    }\n  });\n  const handleUpload = async () => {\n    if (files.length === 0) {\n      setError('Please select a file to upload');\n      return;\n    }\n\n    // If user selected an MHD file but no RAW file, show error\n    if (files[0].name.toLowerCase().endsWith('.mhd') && !rawFile) {\n      setError('Please upload the associated RAW file for your MHD file');\n      return;\n    }\n\n    // Validate file sizes\n    const maxSizeInBytes = 300 * 1024 * 1024; // 300MB\n    if (files[0].size > maxSizeInBytes) {\n      setError(`File size exceeds the maximum limit of 300MB. Your file is ${(files[0].size / (1024 * 1024)).toFixed(2)}MB.`);\n      return;\n    }\n    if (rawFile && rawFile.size > maxSizeInBytes) {\n      setError(`RAW file size exceeds the maximum limit of 300MB. Your file is ${(rawFile.size / (1024 * 1024)).toFixed(2)}MB.`);\n      return;\n    }\n\n    // Check file name patterns for MHD and RAW to ensure they match\n    if (files[0].name.toLowerCase().endsWith('.mhd') && rawFile) {\n      const mhdBaseName = files[0].name.toLowerCase().slice(0, -4); // Remove .mhd\n      const rawBaseName = rawFile.name.toLowerCase().slice(0, -4); // Remove .raw\n\n      if (mhdBaseName !== rawBaseName && !window.confirm(`The MHD file (${files[0].name}) and RAW file (${rawFile.name}) have different base names. Are you sure they belong together?`)) {\n        setError('Please make sure your MHD and RAW files have matching names');\n        return;\n      }\n    }\n    setIsUploading(true);\n    setProgress(0);\n    setProcessingProgress(0);\n    setError(null);\n    const formData = new FormData();\n    formData.append('file', files[0]);\n\n    // Add RAW file if present\n    if (rawFile) {\n      formData.append('raw_file', rawFile);\n    }\n\n    // Ensure confidence value is a string with proper format\n    const confidenceValue = confidence.toString();\n    console.log(\"Uploading with confidence value:\", confidenceValue);\n    formData.append('confidence', confidenceValue);\n\n    // Debug the form data being sent\n    for (let pair of formData.entries()) {\n      console.log(pair[0] + ': ' + pair[1]);\n    }\n\n    // Always set no_segmentation to true to disable nodule segmentation completely\n    formData.append('lungs_only', 'false');\n    formData.append('no_segmentation', 'true');\n    try {\n      // Upload phase\n      const response = await axios.post('/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setProgress(percentCompleted);\n\n          // When upload is complete (100%), start the processing progress simulation\n          if (percentCompleted === 100) {\n            setIsUploading(false);\n            setIsProcessing(true);\n\n            // Simulate processing progress\n            // This is just a visual indicator since we don't have real-time backend progress updates\n            let currentProgress = 0;\n            const processingInterval = setInterval(() => {\n              // Increment progress in a non-linear way to simulate real processing\n              // Start slower, then speed up, then slow down again at the end\n              if (currentProgress < 30) {\n                currentProgress += 1;\n              } else if (currentProgress < 70) {\n                currentProgress += 2;\n              } else if (currentProgress < 90) {\n                currentProgress += 0.5;\n              } else if (currentProgress < 98) {\n                currentProgress += 0.2;\n              }\n              if (currentProgress >= 99) {\n                clearInterval(processingInterval);\n                currentProgress = 99; // Let the final 100% happen when we get the response\n              }\n              setProcessingProgress(Math.min(99, currentProgress));\n            }, 300);\n          }\n        }\n      });\n      if (response.data.success) {\n        // Set processing to complete\n        setProcessingProgress(100);\n        setIsProcessing(false);\n\n        // Now fetch the preview result to display\n        const jobId = response.data.job_id;\n        try {\n          const previewResponse = await axios.get(`/api/results/preview/${jobId}`);\n          setPreviewResult(previewResponse.data);\n          setShowPreview(true);\n        } catch (previewError) {\n          var _previewError$respons, _previewError$respons2;\n          console.error('Preview error:', previewError);\n          setError(((_previewError$respons = previewError.response) === null || _previewError$respons === void 0 ? void 0 : (_previewError$respons2 = _previewError$respons.data) === null || _previewError$respons2 === void 0 ? void 0 : _previewError$respons2.error) || 'Error retrieving result preview');\n        }\n      } else {\n        setError(response.data.error || 'Unknown error occurred');\n        setIsUploading(false);\n        setIsProcessing(false);\n      }\n    } catch (error) {\n      console.error('Upload error:', error);\n\n      // Provide more detailed error messages based on the error\n      let errorMessage = 'Error uploading file. Please try again.';\n      if (error.response) {\n        // Server responded with an error\n        console.error('Error response:', error.response.data);\n        if (error.response.status === 413) {\n          errorMessage = 'File too large. The maximum allowed size is 300MB.';\n        } else if (error.response.data && error.response.data.error) {\n          errorMessage = error.response.data.error;\n        } else {\n          errorMessage = `Server error (${error.response.status}). Please try again later.`;\n        }\n      } else if (error.request) {\n        // Request made but no response received\n        errorMessage = 'No response from server. Please check your network connection.';\n      }\n      setError(errorMessage);\n      setIsUploading(false);\n      setIsProcessing(false);\n    }\n  };\n  const handleDicomVolumeUpload = async () => {\n    if (dicomFiles.length === 0) {\n      setError('Please select DICOM files for upload');\n      return;\n    }\n    try {\n      setIsProcessing(true);\n      setProgress(0);\n      setError(null);\n\n      // Create form data for the upload\n      const formData = new FormData();\n      dicomFiles.forEach(file => {\n        formData.append('files[]', file);\n      });\n\n      // Add processing options\n      formData.append('confidence', confidence);\n      formData.append('lungs_only', 'false');\n\n      // Upload the files\n      const response = await axios.post('/api/upload/dicom-volume', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          const progress = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setProgress(progress);\n        }\n      });\n\n      // Reset upload progress after completed\n      setProgress(100);\n      if (response.data && response.data.job_id) {\n        // Start polling for the processing status\n        const jobId = response.data.job_id;\n        let pollCount = 0;\n        const maxPolls = 120; // Poll for up to 2 minutes (120 x 1s)\n        const pollDelay = 1000; // 1 second between polls\n        let foundResult = false;\n        setProcessingMessage(\"Processing DICOM volume. This may take a few minutes...\");\n        const pollInterval = setInterval(async () => {\n          try {\n            pollCount++;\n            const statusResponse = await axios.get(`/api/results/preview/${jobId}`);\n            console.log(`Poll status check ${pollCount}:`, statusResponse.data);\n\n            // Check if we have a status field\n            if (statusResponse.data.status === 'completed') {\n              clearInterval(pollInterval);\n              foundResult = true;\n              setIsProcessing(false);\n              setPreviewResult(statusResponse.data);\n              setShowPreview(true);\n              setProcessingMessage(null);\n            } else if (statusResponse.data.status === 'error') {\n              clearInterval(pollInterval);\n              foundResult = true;\n              setIsProcessing(false);\n              setError(`Processing error: ${statusResponse.data.error || 'Unknown error'}`);\n              setProcessingMessage(null);\n            } else if (pollCount >= maxPolls) {\n              // If we've polled too many times, still show the result page but with a notice\n              clearInterval(pollInterval);\n              setIsProcessing(false);\n              setProcessingMessage(\"Processing is continuing in the background. You may need to check Results page later.\");\n              try {\n                // Try one more time to get the result\n                const finalCheck = await axios.get(`/api/results/preview/${jobId}`);\n                if (finalCheck.data) {\n                  setPreviewResult(finalCheck.data);\n                  setShowPreview(true);\n                  foundResult = true;\n                }\n              } catch (e) {\n                console.error(\"Final check failed:\", e);\n              }\n            } else {\n              // Still processing, update message with time elapsed\n              const minutesElapsed = Math.floor(pollCount * pollDelay / 60000);\n              const secondsElapsed = Math.floor(pollCount * pollDelay / 1000 % 60);\n              setProcessingMessage(`Processing DICOM volume... (${minutesElapsed}m ${secondsElapsed}s elapsed)`);\n            }\n          } catch (error) {\n            console.log(`Poll error (attempt ${pollCount}):`, error);\n\n            // Don't give up on first error, try a few more times\n            if (pollCount >= maxPolls) {\n              clearInterval(pollInterval);\n              if (!foundResult) {\n                setIsProcessing(false);\n                setError('Failed to retrieve processing result. Please check the Results page later.');\n                setProcessingMessage(\"Processing is continuing in the background.\");\n              }\n            }\n          }\n        }, pollDelay);\n      } else {\n        setIsProcessing(false);\n        setError('Failed to start processing. Please try again.');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setIsProcessing(false);\n      console.error('Error uploading DICOM volume:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to upload DICOM volume. Please try again.');\n    }\n  };\n\n  // Handle patient info form inputs\n  const handlePatientInfoChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPatientInfo(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Handle saving with patient info\n  const handleSaveWithPatientInfo = async () => {\n    if (!previewResult || !previewResult.job_id) {\n      setError('No result to save');\n      return;\n    }\n    try {\n      const response = await axios.post(`/api/results/action/${previewResult.job_id}`, {\n        action: 'save',\n        patient_info: patientInfo\n      });\n      if (response.data.success) {\n        // Hide the form\n        setShowPatientForm(false);\n\n        // Set navigating flag to allow navigation\n        setIsNavigating(true);\n\n        // If we have a pending navigation, go there\n        if (pendingNavigation) {\n          navigate(pendingNavigation);\n          setPendingNavigation(null);\n        } else {\n          // Navigate to the result page using the path provided in the response\n          const resultPath = response.data.result_path || `/results/${response.data.job_id || response.data.case_name}`;\n\n          // Log the navigation\n          console.log(`Navigating to result path: ${resultPath}`);\n\n          // Navigate to the result page\n          navigate(resultPath.replace('/api', ''));\n        }\n      } else {\n        setError(response.data.error || 'Failed to save results');\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error saving result:', error);\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Error saving result');\n    }\n  };\n\n  // Handle result actions (save/discard)\n  const handleResultAction = async action => {\n    if (!previewResult || !previewResult.job_id) {\n      setError('No result to save or discard');\n      return;\n    }\n    if (action === 'save') {\n      // Show patient information form\n      setShowPatientForm(true);\n    } else {\n      try {\n        const response = await axios.post(`/api/results/action/${previewResult.job_id}`, {\n          action: action\n        });\n        if (response.data.success) {\n          // Reset the form on discard\n          setFiles([]);\n          setRawFile(null);\n          setPreviewResult(null);\n          setShowPreview(false);\n\n          // Allow navigation after discarding\n          setIsNavigating(true);\n\n          // If we were trying to navigate somewhere when discarding, navigate there\n          if (pendingNavigation) {\n            navigate(pendingNavigation);\n            setPendingNavigation(null);\n          }\n        } else {\n          setError(response.data.error || `Failed to ${action} results`);\n        }\n      } catch (error) {\n        var _error$response3, _error$response3$data;\n        console.error(`Error ${action}ing result:`, error);\n        setError(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || `Error ${action}ing result`);\n      }\n    }\n  };\n\n  // Handle action on leave confirmation\n  const handleLeaveConfirmation = shouldSave => {\n    if (shouldSave === 'save') {\n      // Show patient form\n      setShowPatientForm(true);\n      setShowLeaveConfirmation(false);\n    } else if (shouldSave === 'discard') {\n      // Discard and continue navigation\n      handleResultAction('discard');\n      setShowLeaveConfirmation(false);\n\n      // Set navigating flag to allow navigation\n      setIsNavigating(true);\n\n      // If we have a pending navigation, go there\n      if (pendingNavigation) {\n        navigate(pendingNavigation);\n        setPendingNavigation(null);\n      }\n    } else {\n      // Stay on page\n      setShowLeaveConfirmation(false);\n      setPendingNavigation(null);\n    }\n  };\n\n  // Handle nodule selection\n  const handleNoduleClick = noduleId => {\n    setSelectedNoduleId(noduleId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `container mx-auto px-4 py-8 ${darkMode ? 'text-gray-200' : 'text-gray-800'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Upload CT Scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-4 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setUploadMode('single'),\n          className: `px-4 py-2 rounded-lg ${uploadMode === 'single' ? darkMode ? 'bg-indigo-600 text-white' : 'bg-indigo-100 text-indigo-700' : darkMode ? 'bg-gray-700 text-gray-300' : 'bg-gray-100 text-gray-700'}`,\n          children: \"Single CT Scan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setUploadMode('dicom-volume'),\n          className: `px-4 py-2 rounded-lg ${uploadMode === 'dicom-volume' ? darkMode ? 'bg-indigo-600 text-white' : 'bg-indigo-100 text-indigo-700' : darkMode ? 'bg-gray-700 text-gray-300' : 'bg-gray-100 text-gray-700'}`,\n          children: \"DICOM Volume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 7\n    }, this), !showPreview ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-6 rounded-lg shadow-md ${darkMode ? 'bg-gray-800' : 'bg-white'}`,\n      children: uploadMode === 'single' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Upload Single CT Scan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-6 text-sm\",\n          children: \"Supported file formats: .mhd/.raw pair, .nii, .nii.gz, or single .dcm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ...getRootProps(),\n          className: `border-2 border-dashed rounded-lg p-8 cursor-pointer transition-colors ${isDragActive ? darkMode ? 'border-indigo-400 bg-indigo-900 bg-opacity-20' : 'border-indigo-500 bg-indigo-50' : darkMode ? 'border-gray-600 hover:border-gray-500' : 'border-gray-300 hover:border-gray-400'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col items-center justify-center\",\n            children: [/*#__PURE__*/_jsxDEV(CloudArrowUpIcon, {\n              className: `h-12 w-12 mb-3 ${isDragActive ? 'text-indigo-500' : 'text-gray-400'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 19\n            }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Drop the file here...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-center\",\n                children: \"Drag & drop your CT scan file here, or click to select file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-center text-xs mt-2 text-gray-500\",\n                children: \"For MHD files, you can upload the RAW file separately in the next step\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 15\n        }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mt-4 p-4 rounded-md ${darkMode ? 'bg-gray-700' : 'bg-gray-50'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium mb-2\",\n            children: \"Selected File:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"truncate\",\n              children: [files[0].name, \" (\", (files[0].size / (1024 * 1024)).toFixed(2), \" MB)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                e.stopPropagation();\n                setFiles([]);\n                setShowRawUpload(false);\n                setError(null);\n              },\n              className: \"text-red-500 hover:text-red-700\",\n              children: /*#__PURE__*/_jsxDEV(XMarkIcon, {\n                className: \"h-5 w-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 17\n        }, this), showRawUpload && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium mb-2\",\n            children: \"Upload associated RAW file:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ...getRawRootProps(),\n            className: `border-2 border-dashed rounded-lg p-6 cursor-pointer transition-colors ${isRawDragActive ? darkMode ? 'border-indigo-400 bg-indigo-900 bg-opacity-20' : 'border-indigo-500 bg-indigo-50' : darkMode ? 'border-gray-600 hover:border-gray-500' : 'border-gray-300 hover:border-gray-400'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...getRawInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col items-center justify-center\",\n              children: [/*#__PURE__*/_jsxDEV(CloudArrowUpIcon, {\n                className: `h-8 w-8 mb-2 ${isRawDragActive ? 'text-indigo-500' : 'text-gray-400'}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 23\n              }, this), isRawDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Drop the RAW file here...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 683,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-center text-sm\",\n                children: \"Drag & drop your RAW file here, or click to select file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 19\n          }, this), rawFile && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `mt-2 p-3 rounded-md ${darkMode ? 'bg-gray-700' : 'bg-gray-50'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"truncate\",\n                children: [rawFile.name, \" (\", (rawFile.size / (1024 * 1024)).toFixed(2), \" MB)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => {\n                  e.stopPropagation();\n                  setRawFile(null);\n                },\n                className: \"text-red-500 hover:text-red-700\",\n                children: /*#__PURE__*/_jsxDEV(XMarkIcon, {\n                  className: \"h-5 w-5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 702,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpload,\n            disabled: isUploading || isProcessing || files.length === 0,\n            className: `px-4 py-2 rounded-md text-white font-medium \n                    ${isUploading || isProcessing || files.length === 0 ? 'bg-gray-400 cursor-not-allowed' : 'bg-blue-600 hover:bg-blue-700'}\n                  `,\n            children: isUploading ? 'Uploading...' : isProcessing ? 'Processing...' : 'Upload and Process'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Upload DICOM Volume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-6 text-sm\",\n          children: \"Upload multiple DICOM (.dcm) files to create a 3D volume, or a single .zip file containing DICOM files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ...getDicomVolumeRootProps(),\n          className: `border-2 border-dashed rounded-lg p-8 cursor-pointer transition-colors ${isDicomVolumeDragActive ? darkMode ? 'border-indigo-400 bg-indigo-900 bg-opacity-20' : 'border-indigo-500 bg-indigo-50' : darkMode ? 'border-gray-600 hover:border-gray-500' : 'border-gray-300 hover:border-gray-400'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getDicomVolumeInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col items-center justify-center\",\n            children: [/*#__PURE__*/_jsxDEV(CloudArrowUpIcon, {\n              className: `h-12 w-12 mb-3 ${isDicomVolumeDragActive ? 'text-indigo-500' : 'text-gray-400'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 19\n            }, this), isDicomVolumeDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Drop the files here...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-center\",\n                children: \"Drag & drop multiple DICOM files or a ZIP file here, or click to select files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 748,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-center text-xs mt-2 text-gray-500\",\n                children: \"All slices from the same DICOM series will be combined into a 3D volume\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 749,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 15\n        }, this), dicomFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mt-4 p-4 rounded-md ${darkMode ? 'bg-gray-700' : 'bg-gray-50'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium mb-2\",\n            children: [\"Selected Files: \", dicomFiles.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-h-40 overflow-y-auto pr-2\",\n            children: dicomFiles.length === 1 && dicomFiles[0].name.toLowerCase().endsWith('.zip') ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"truncate\",\n                children: [dicomFiles[0].name, \" (\", (dicomFiles[0].size / (1024 * 1024)).toFixed(2), \" MB)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 764,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => {\n                  e.stopPropagation();\n                  setDicomFiles([]);\n                  setError(null);\n                },\n                className: \"text-red-500 hover:text-red-700\",\n                children: /*#__PURE__*/_jsxDEV(XMarkIcon, {\n                  className: \"h-5 w-5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 773,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 765,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 763,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [dicomFiles.length, \" DICOM files selected (\", (dicomFiles.reduce((sum, file) => sum + file.size, 0) / (1024 * 1024)).toFixed(2), \" MB total)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 779,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => {\n                    e.stopPropagation();\n                    setDicomFiles([]);\n                    setError(null);\n                  },\n                  className: \"text-red-500 hover:text-red-700\",\n                  children: /*#__PURE__*/_jsxDEV(XMarkIcon, {\n                    className: \"h-5 w-5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 788,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 780,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 778,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-400\",\n                children: [\"Files: \", dicomFiles.slice(0, 3).map(f => f.name).join(', '), dicomFiles.length > 3 ? ` ... and ${dicomFiles.length - 3} more` : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 791,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDicomVolumeUpload,\n            disabled: isUploading || isProcessing || dicomFiles.length === 0,\n            className: `px-4 py-2 rounded-md text-white font-medium \n                    ${isUploading || isProcessing || dicomFiles.length === 0 ? 'bg-gray-400 cursor-not-allowed' : 'bg-blue-600 hover:bg-blue-700'}\n                  `,\n            children: isUploading ? 'Uploading...' : isProcessing ? 'Processing...' : 'Upload and Process'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${darkMode ? 'bg-gray-800' : 'bg-white'} shadow rounded-lg p-6 max-w-4xl mx-auto`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: `text-xl font-semibold ${darkMode ? 'text-white' : 'text-gray-900'}`,\n          children: \"Review Scan Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${darkMode ? 'bg-blue-900' : 'bg-blue-50'} p-4 rounded-md mb-4`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(InformationCircleIcon, {\n              className: `h-5 w-5 ${darkMode ? 'text-blue-300' : 'text-blue-400'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 824,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `ml-3 text-sm ${darkMode ? 'text-blue-200' : 'text-blue-700'}`,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Please review the results below. Use the interactive visualization to examine detected nodules. You can save the results to your records or discard them if not satisfied.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 826,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 823,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${darkMode ? 'bg-gray-700' : 'bg-gray-100'} rounded-lg overflow-hidden`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `px-4 py-3 border-b ${darkMode ? 'border-gray-600' : 'border-gray-200'} sm:px-6`,\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: `text-lg font-medium ${darkMode ? 'text-white' : 'text-gray-900'}`,\n              children: \"Interactive Visualization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4\",\n            children: /*#__PURE__*/_jsxDEV(InteractiveViewer, {\n              caseId: previewResult.case_name,\n              selectedNoduleId: selectedNoduleId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 839,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 13\n        }, this), previewResult.details && previewResult.details.includes('Nodule ') && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${darkMode ? 'bg-gray-700' : 'bg-gray-100'} p-4 rounded-md`,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: `text-md font-medium ${darkMode ? 'text-white' : 'text-gray-900'} mb-2`,\n            children: \"Detected Nodules:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 849,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overflow-x-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: `min-w-full divide-y ${darkMode ? 'divide-gray-600' : 'divide-gray-200'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: `${darkMode ? 'bg-gray-800' : 'bg-gray-50'}`,\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    className: `px-6 py-3 text-left text-xs font-medium ${darkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`,\n                    children: \"Nodule\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 856,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    className: `px-6 py-3 text-left text-xs font-medium ${darkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`,\n                    children: \"Coordinates (z,y,x)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 859,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    className: `px-6 py-3 text-left text-xs font-medium ${darkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`,\n                    children: \"Radius (mm)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 862,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    className: `px-6 py-3 text-left text-xs font-medium ${darkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`,\n                    children: \"Confidence\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 865,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 855,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 854,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                className: `${darkMode ? 'bg-gray-700 divide-y divide-gray-600' : 'bg-white divide-y divide-gray-200'}`,\n                children: extractNodulesFromDetails(previewResult.details).map((nodule, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: `${index % 2 === 0 ? darkMode ? 'bg-gray-800' : 'bg-gray-50' : ''} \n                            cursor-pointer hover:${darkMode ? 'bg-gray-600' : 'bg-gray-100'} ${selectedNoduleId === nodule.id ? darkMode ? 'bg-indigo-900' : 'bg-indigo-100' : ''}`,\n                  onClick: () => handleNoduleClick(nodule.id),\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: `px-6 py-4 whitespace-nowrap text-sm ${darkMode ? 'text-white' : 'text-gray-900'}`,\n                    children: nodule.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 878,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: `px-6 py-4 whitespace-nowrap text-sm ${darkMode ? 'text-gray-300' : 'text-gray-500'}`,\n                    children: nodule.coordinates\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 881,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: `px-6 py-4 whitespace-nowrap text-sm ${darkMode ? 'text-gray-300' : 'text-gray-500'}`,\n                    children: nodule.radius\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 884,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: `px-6 py-4 whitespace-nowrap text-sm ${darkMode ? 'text-gray-300' : 'text-gray-500'}`,\n                    children: nodule.confidence\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 887,\n                    columnNumber: 27\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 872,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 870,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 852,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${darkMode ? 'bg-gray-700' : 'bg-gray-100'} p-4 rounded-md`,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: `text-md font-medium ${darkMode ? 'text-white' : 'text-gray-900'} mb-2`,\n            children: \"Analysis Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 900,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: `text-sm whitespace-pre-wrap ${darkMode ? 'text-gray-300' : 'text-gray-700'}`,\n            children: previewResult.details || \"No detailed analysis available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 903,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 899,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-4 justify-center mt-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleResultAction('discard'),\n            className: `px-4 py-2 rounded-md flex items-center ${darkMode ? 'bg-red-800 text-white hover:bg-red-700' : 'bg-red-600 text-white hover:bg-red-700'}`,\n            children: [/*#__PURE__*/_jsxDEV(XCircleIcon, {\n              className: \"h-5 w-5 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 918,\n              columnNumber: 17\n            }, this), \"Discard Results\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 910,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleResultAction('save'),\n            className: `px-4 py-2 rounded-md flex items-center ${darkMode ? 'bg-green-800 text-white hover:bg-green-700' : 'bg-green-600 text-white hover:bg-green-700'}`,\n            children: [/*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n              className: \"h-5 w-5 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 930,\n              columnNumber: 17\n            }, this), \"Save to Records\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 922,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 9\n    }, this), showLeaveConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${darkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-xl p-6 max-w-md w-full`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: `text-lg font-medium ${darkMode ? 'text-white' : 'text-gray-900'} mb-4`,\n          children: \"Unsaved Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 942,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `${darkMode ? 'text-gray-300' : 'text-gray-600'} mb-6`,\n          children: \"You have unsaved analysis results. What would you like to do?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 945,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLeaveConfirmation('stay'),\n            className: `px-4 py-2 rounded-md ${darkMode ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,\n            children: \"Stay on Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 949,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLeaveConfirmation('discard'),\n            className: `px-4 py-2 rounded-md ${darkMode ? 'bg-red-800 text-white hover:bg-red-700' : 'bg-red-600 text-white hover:bg-red-700'}`,\n            children: \"Discard & Leave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 959,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLeaveConfirmation('save'),\n            className: `px-4 py-2 rounded-md ${darkMode ? 'bg-green-800 text-white hover:bg-green-700' : 'bg-green-600 text-white hover:bg-green-700'}`,\n            children: \"Save Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 969,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 948,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 941,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 940,\n      columnNumber: 9\n    }, this), showPatientForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${darkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-xl p-6 max-w-md w-full`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: `text-lg font-medium ${darkMode ? 'text-white' : 'text-gray-900'}`,\n            children: \"Patient Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 989,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowPatientForm(false),\n            className: `rounded-full p-1 ${darkMode ? 'hover:bg-gray-700' : 'hover:bg-gray-200'}`,\n            children: /*#__PURE__*/_jsxDEV(XMarkIcon, {\n              className: `h-5 w-5 ${darkMode ? 'text-gray-400' : 'text-gray-500'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 996,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 992,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 988,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `${darkMode ? 'text-gray-300' : 'text-gray-600'} mb-4`,\n          children: \"Please enter the patient's information to save this result to their medical record.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1000,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              className: `block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`,\n              children: \"Patient Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1006,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              name: \"name\",\n              value: patientInfo.name,\n              onChange: handlePatientInfoChange,\n              required: true,\n              className: `w-full px-3 py-2 border ${darkMode ? 'bg-gray-700 border-gray-600 text-white' : 'bg-white border-gray-300 text-gray-900'} rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1009,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1005,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"age\",\n              className: `block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`,\n              children: \"Patient Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1021,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"age\",\n              name: \"age\",\n              value: patientInfo.age,\n              onChange: handlePatientInfoChange,\n              min: \"0\",\n              max: \"120\",\n              className: `w-full px-3 py-2 border ${darkMode ? 'bg-gray-700 border-gray-600 text-white' : 'bg-white border-gray-300 text-gray-900'} rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1024,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1020,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              className: `block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`,\n              children: \"Clinical Notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1037,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"description\",\n              name: \"description\",\n              value: patientInfo.description,\n              onChange: handlePatientInfoChange,\n              rows: \"3\",\n              className: `w-full px-3 py-2 border ${darkMode ? 'bg-gray-700 border-gray-600 text-white' : 'bg-white border-gray-300 text-gray-900'} rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500`,\n              placeholder: \"Enter any relevant clinical notes about this scan...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1040,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1036,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-4 mt-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowPatientForm(false),\n            className: `px-4 py-2 rounded-md ${darkMode ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1053,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveWithPatientInfo,\n            disabled: !patientInfo.name || !patientInfo.age,\n            className: `px-4 py-2 rounded-md ${!patientInfo.name || !patientInfo.age ? `${darkMode ? 'bg-green-900 text-gray-400' : 'bg-green-300 text-gray-600'} cursor-not-allowed` : darkMode ? 'bg-green-800 text-white hover:bg-green-700' : 'bg-green-600 text-white hover:bg-green-700'}`,\n            children: \"Save to Records\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1063,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1052,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 987,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 986,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 584,\n    columnNumber: 5\n  }, this);\n};\n\n// Helper function to extract nodule information from details text\n_s(UploadPage, \"ZREs7Rr7BlUfkKLu78GObdFgTgQ=\", false, function () {\n  return [useNavigate, useLocation, useTheme, useDropzone, useDropzone, useDropzone];\n});\n_c = UploadPage;\nconst extractNodulesFromDetails = details => {\n  if (!details) return [];\n  const nodules = [];\n  const lines = details.split('\\n');\n  let currentNodule = null;\n  for (const line of lines) {\n    // Skip segmentation information line\n    if (line.includes('Nodule segmentation performed:')) {\n      continue;\n    }\n    if (line.startsWith('Nodule ')) {\n      if (currentNodule) {\n        nodules.push(currentNodule);\n      }\n      currentNodule = {\n        id: line.replace(':', '').trim(),\n        coordinates: '',\n        radius: '',\n        confidence: ''\n      };\n    } else if (currentNodule) {\n      if (line.includes('Coordinates')) {\n        currentNodule.coordinates = line.split(':')[1].trim();\n      } else if (line.includes('Radius')) {\n        currentNodule.radius = line.split(':')[1].trim();\n      } else if (line.includes('Confidence')) {\n        currentNodule.confidence = line.split(':')[1].trim();\n      }\n    }\n  }\n\n  // Add the last nodule if present\n  if (currentNodule) {\n    nodules.push(currentNodule);\n  }\n  return nodules;\n};\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","useLocation","axios","useDropzone","CloudArrowUpIcon","ExclamationCircleIcon","InformationCircleIcon","CheckCircleIcon","XCircleIcon","ViewfinderCircleIcon","XMarkIcon","useTheme","InteractiveViewer","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadPage","_s","files","setFiles","rawFile","setRawFile","confidence","setConfidence","isUploading","setIsUploading","isProcessing","setIsProcessing","error","setError","progress","setProgress","processingProgress","setProcessingProgress","showRawUpload","setShowRawUpload","previewResult","setPreviewResult","showPreview","setShowPreview","selectedNoduleId","setSelectedNoduleId","showLeaveConfirmation","setShowLeaveConfirmation","showPatientForm","setShowPatientForm","patientInfo","setPatientInfo","name","age","description","isNavigating","setIsNavigating","pendingNavigation","setPendingNavigation","uploadMode","setUploadMode","dicomFiles","setDicomFiles","navigate","location","darkMode","prevLocation","setPrevLocation","pathname","search","handleBeforeUnload","e","preventDefault","returnValue","window","addEventListener","removeEventListener","customNavigate","to","getRootProps","getInputProps","isDragActive","accept","multiple","onDrop","acceptedFiles","mhdFile","find","file","toLowerCase","endsWith","length","getRawRootProps","getRawInputProps","isRawDragActive","getDicomVolumeRootProps","getDicomVolumeInputProps","isDicomVolumeDragActive","zipFile","dicomFilesOnly","filter","handleUpload","maxSizeInBytes","size","toFixed","mhdBaseName","slice","rawBaseName","confirm","formData","FormData","append","confidenceValue","toString","console","log","pair","entries","response","post","headers","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","currentProgress","processingInterval","setInterval","clearInterval","min","data","success","jobId","job_id","previewResponse","get","previewError","_previewError$respons","_previewError$respons2","errorMessage","status","request","handleDicomVolumeUpload","forEach","pollCount","maxPolls","pollDelay","foundResult","setProcessingMessage","pollInterval","statusResponse","finalCheck","minutesElapsed","floor","secondsElapsed","_error$response","_error$response$data","handlePatientInfoChange","value","target","prev","handleSaveWithPatientInfo","action","patient_info","resultPath","result_path","case_name","replace","_error$response2","_error$response2$data","handleResultAction","_error$response3","_error$response3$data","handleLeaveConfirmation","shouldSave","handleNoduleClick","noduleId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","stopPropagation","disabled","reduce","sum","map","f","join","caseId","details","includes","scope","extractNodulesFromDetails","nodule","index","id","coordinates","radius","htmlFor","type","onChange","required","max","rows","placeholder","_c","nodules","lines","split","currentNodule","line","startsWith","push","trim","$RefreshReg$"],"sources":["C:/Users/kouss/Desktop/Cursor/Segmentation/pipeline/webapp/static/src/pages/UploadPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { CloudArrowUpIcon, ExclamationCircleIcon, InformationCircleIcon, CheckCircleIcon, XCircleIcon, ViewfinderCircleIcon, XMarkIcon } from '@heroicons/react/24/outline';\r\nimport { useTheme } from '../contexts/ThemeContext';\r\nimport InteractiveViewer from '../components/InteractiveViewer';\r\n\r\nconst UploadPage = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [rawFile, setRawFile] = useState(null);\r\n  const [confidence, setConfidence] = useState(0.5);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const [processingProgress, setProcessingProgress] = useState(0);\r\n  const [showRawUpload, setShowRawUpload] = useState(false);\r\n  const [previewResult, setPreviewResult] = useState(null);\r\n  const [showPreview, setShowPreview] = useState(false);\r\n  const [selectedNoduleId, setSelectedNoduleId] = useState(null);\r\n  const [showLeaveConfirmation, setShowLeaveConfirmation] = useState(false);\r\n  const [showPatientForm, setShowPatientForm] = useState(false);\r\n  const [patientInfo, setPatientInfo] = useState({\r\n    name: '',\r\n    age: '',\r\n    description: ''\r\n  });\r\n  const [isNavigating, setIsNavigating] = useState(false);\r\n  const [pendingNavigation, setPendingNavigation] = useState(null);\r\n  const [uploadMode, setUploadMode] = useState('single'); // 'single' or 'dicom-volume'\r\n  const [dicomFiles, setDicomFiles] = useState([]);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { darkMode } = useTheme();\r\n  \r\n  // Track current location to detect changes\r\n  const [prevLocation, setPrevLocation] = useState(null);\r\n  \r\n  // Handle location changes to detect navigation attempts\r\n  useEffect(() => {\r\n    // Skip on first render\r\n    if (prevLocation === null) {\r\n      setPrevLocation(location);\r\n      return;\r\n    }\r\n    \r\n    // If the location has changed and we haven't explicitly allowed navigation\r\n    if (\r\n      location !== prevLocation && \r\n      !isNavigating && \r\n      showPreview && \r\n      previewResult\r\n    ) {\r\n      // Block navigation by going back to previous location\r\n      // This happens synchronously, before the confirmation dialog\r\n      navigate(-1);\r\n      \r\n      // Show confirmation dialog\r\n      setShowLeaveConfirmation(true);\r\n      setPendingNavigation(location.pathname + location.search);\r\n      \r\n      return;\r\n    }\r\n    \r\n    // Update the previous location\r\n    setPrevLocation(location);\r\n  }, [location, prevLocation, isNavigating, showPreview, previewResult, navigate]);\r\n\r\n  // Browser back/refresh confirmation\r\n  useEffect(() => {\r\n    const handleBeforeUnload = (e) => {\r\n      if (showPreview && previewResult) {\r\n        e.preventDefault();\r\n        e.returnValue = '';\r\n        return '';\r\n      }\r\n    };\r\n\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n    \r\n    return () => {\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    };\r\n  }, [showPreview, previewResult]);\r\n\r\n  // Custom navigation function (can be used for in-app links that need confirmation)\r\n  const customNavigate = (to) => {\r\n    if (showPreview && previewResult) {\r\n      // Store pending navigation and show confirmation\r\n      setPendingNavigation(to);\r\n      setShowLeaveConfirmation(true);\r\n    } else {\r\n      // If no unsaved changes, navigate directly\r\n      navigate(to);\r\n    }\r\n  };\r\n\r\n  // Configure dropzone for CT scan files\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    accept: {\r\n      'application/octet-stream': ['.mhd', '.raw', '.nii.gz', '.nii'],\r\n      'application/dicom': ['.dcm'],\r\n    },\r\n    multiple: true, // Allow multiple files to select both .mhd and .raw together\r\n    onDrop: (acceptedFiles) => {\r\n      // Reset preview state when new files are dropped\r\n      setPreviewResult(null);\r\n      setShowPreview(false);\r\n      \r\n      // Sort files to identify MHD and RAW files\r\n      const mhdFile = acceptedFiles.find(file => file.name.toLowerCase().endsWith('.mhd'));\r\n      const rawFile = acceptedFiles.find(file => file.name.toLowerCase().endsWith('.raw'));\r\n      \r\n      if (mhdFile && rawFile) {\r\n        // Both files uploaded together\r\n        setFiles([mhdFile]);\r\n        setRawFile(rawFile);\r\n        setShowRawUpload(false);\r\n        setError(null);\r\n      } else if (mhdFile) {\r\n        // Only MHD file uploaded\r\n        setFiles([mhdFile]);\r\n        setShowRawUpload(true);\r\n        setError(\"You've uploaded an MHD file. Please also upload the associated RAW file.\");\r\n      } else if (rawFile) {\r\n        // Only RAW file uploaded\r\n        setRawFile(rawFile);\r\n        setShowRawUpload(true);\r\n        if (files.length === 0 || !files[0].name.toLowerCase().endsWith('.mhd')) {\r\n          setError(\"You've uploaded a RAW file. Please also upload the associated MHD file.\");\r\n        } else {\r\n          setError(null);\r\n        }\r\n      } else if (acceptedFiles.length > 0) {\r\n        // Other valid file types (NIFTI, DICOM)\r\n        setFiles(acceptedFiles);\r\n        setShowRawUpload(false);\r\n        setError(null);\r\n      }\r\n    },\r\n  });\r\n\r\n  // Configure dropzone specifically for RAW files\r\n  const { getRootProps: getRawRootProps, getInputProps: getRawInputProps, isDragActive: isRawDragActive } = useDropzone({\r\n    accept: {\r\n      'application/octet-stream': ['.raw'],\r\n    },\r\n    multiple: false,\r\n    onDrop: (acceptedFiles) => {\r\n      if (acceptedFiles.length > 0) {\r\n        setRawFile(acceptedFiles[0]);\r\n        setError(null);\r\n      }\r\n    },\r\n  });\r\n\r\n  // Configure dropzone for DICOM series upload\r\n  const { getRootProps: getDicomVolumeRootProps, getInputProps: getDicomVolumeInputProps, isDragActive: isDicomVolumeDragActive } = useDropzone({\r\n    accept: {\r\n      'application/dicom': ['.dcm'],\r\n      'application/zip': ['.zip'],\r\n    },\r\n    multiple: true,\r\n    onDrop: (acceptedFiles) => {\r\n      // Reset preview state when new files are dropped\r\n      setPreviewResult(null);\r\n      setShowPreview(false);\r\n      \r\n      // Check if there's a single zip file\r\n      const zipFile = acceptedFiles.find(file => file.name.toLowerCase().endsWith('.zip'));\r\n      if (zipFile) {\r\n        setDicomFiles([zipFile]);\r\n        setError(null);\r\n        return;\r\n      }\r\n      \r\n      // Filter only DICOM files\r\n      const dicomFilesOnly = acceptedFiles.filter(file => file.name.toLowerCase().endsWith('.dcm'));\r\n      \r\n      if (dicomFilesOnly.length === 0) {\r\n        setError(\"Please upload DICOM (.dcm) files or a ZIP file containing DICOM files.\");\r\n        return;\r\n      }\r\n      \r\n      if (dicomFilesOnly.length < 3) {\r\n        setError(\"Please upload at least 3 DICOM slices to create a 3D volume.\");\r\n        return;\r\n      }\r\n      \r\n      setDicomFiles(dicomFilesOnly);\r\n      setError(null);\r\n    },\r\n  });\r\n\r\n  const handleUpload = async () => {\r\n    if (files.length === 0) {\r\n      setError('Please select a file to upload');\r\n      return;\r\n    }\r\n\r\n    // If user selected an MHD file but no RAW file, show error\r\n    if (files[0].name.toLowerCase().endsWith('.mhd') && !rawFile) {\r\n      setError('Please upload the associated RAW file for your MHD file');\r\n      return;\r\n    }\r\n\r\n    // Validate file sizes\r\n    const maxSizeInBytes = 300 * 1024 * 1024; // 300MB\r\n    if (files[0].size > maxSizeInBytes) {\r\n      setError(`File size exceeds the maximum limit of 300MB. Your file is ${(files[0].size / (1024 * 1024)).toFixed(2)}MB.`);\r\n      return;\r\n    }\r\n    \r\n    if (rawFile && rawFile.size > maxSizeInBytes) {\r\n      setError(`RAW file size exceeds the maximum limit of 300MB. Your file is ${(rawFile.size / (1024 * 1024)).toFixed(2)}MB.`);\r\n      return;\r\n    }\r\n\r\n    // Check file name patterns for MHD and RAW to ensure they match\r\n    if (files[0].name.toLowerCase().endsWith('.mhd') && rawFile) {\r\n      const mhdBaseName = files[0].name.toLowerCase().slice(0, -4); // Remove .mhd\r\n      const rawBaseName = rawFile.name.toLowerCase().slice(0, -4);  // Remove .raw\r\n      \r\n      if (mhdBaseName !== rawBaseName && !window.confirm(`The MHD file (${files[0].name}) and RAW file (${rawFile.name}) have different base names. Are you sure they belong together?`)) {\r\n        setError('Please make sure your MHD and RAW files have matching names');\r\n        return;\r\n      }\r\n    }\r\n\r\n    setIsUploading(true);\r\n    setProgress(0);\r\n    setProcessingProgress(0);\r\n    setError(null);\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', files[0]);\r\n    \r\n    // Add RAW file if present\r\n    if (rawFile) {\r\n      formData.append('raw_file', rawFile);\r\n    }\r\n    \r\n    // Ensure confidence value is a string with proper format\r\n    const confidenceValue = confidence.toString();\r\n    console.log(\"Uploading with confidence value:\", confidenceValue);\r\n    formData.append('confidence', confidenceValue);\r\n    \r\n    // Debug the form data being sent\r\n    for (let pair of formData.entries()) {\r\n      console.log(pair[0] + ': ' + pair[1]);\r\n    }\r\n    \r\n    // Always set no_segmentation to true to disable nodule segmentation completely\r\n    formData.append('lungs_only', 'false');\r\n    formData.append('no_segmentation', 'true');\r\n\r\n    try {\r\n      // Upload phase\r\n      const response = await axios.post('/api/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setProgress(percentCompleted);\r\n          \r\n          // When upload is complete (100%), start the processing progress simulation\r\n          if (percentCompleted === 100) {\r\n            setIsUploading(false);\r\n            setIsProcessing(true);\r\n            \r\n            // Simulate processing progress\r\n            // This is just a visual indicator since we don't have real-time backend progress updates\r\n            let currentProgress = 0;\r\n            const processingInterval = setInterval(() => {\r\n              // Increment progress in a non-linear way to simulate real processing\r\n              // Start slower, then speed up, then slow down again at the end\r\n              if (currentProgress < 30) {\r\n                currentProgress += 1;\r\n              } else if (currentProgress < 70) {\r\n                currentProgress += 2;\r\n              } else if (currentProgress < 90) {\r\n                currentProgress += 0.5;\r\n              } else if (currentProgress < 98) {\r\n                currentProgress += 0.2;\r\n              }\r\n              \r\n              if (currentProgress >= 99) {\r\n                clearInterval(processingInterval);\r\n                currentProgress = 99; // Let the final 100% happen when we get the response\r\n              }\r\n              \r\n              setProcessingProgress(Math.min(99, currentProgress));\r\n            }, 300);\r\n          }\r\n        },\r\n      });\r\n\r\n      if (response.data.success) {\r\n        // Set processing to complete\r\n        setProcessingProgress(100);\r\n        setIsProcessing(false);\r\n        \r\n        // Now fetch the preview result to display\r\n        const jobId = response.data.job_id;\r\n        try {\r\n          const previewResponse = await axios.get(`/api/results/preview/${jobId}`);\r\n          setPreviewResult(previewResponse.data);\r\n          setShowPreview(true);\r\n        } catch (previewError) {\r\n          console.error('Preview error:', previewError);\r\n          setError(previewError.response?.data?.error || 'Error retrieving result preview');\r\n        }\r\n      } else {\r\n        setError(response.data.error || 'Unknown error occurred');\r\n        setIsUploading(false);\r\n        setIsProcessing(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Upload error:', error);\r\n      \r\n      // Provide more detailed error messages based on the error\r\n      let errorMessage = 'Error uploading file. Please try again.';\r\n      \r\n      if (error.response) {\r\n        // Server responded with an error\r\n        console.error('Error response:', error.response.data);\r\n        if (error.response.status === 413) {\r\n          errorMessage = 'File too large. The maximum allowed size is 300MB.';\r\n        } else if (error.response.data && error.response.data.error) {\r\n          errorMessage = error.response.data.error;\r\n        } else {\r\n          errorMessage = `Server error (${error.response.status}). Please try again later.`;\r\n        }\r\n      } else if (error.request) {\r\n        // Request made but no response received\r\n        errorMessage = 'No response from server. Please check your network connection.';\r\n      }\r\n      \r\n      setError(errorMessage);\r\n      setIsUploading(false);\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const handleDicomVolumeUpload = async () => {\r\n    if (dicomFiles.length === 0) {\r\n      setError('Please select DICOM files for upload');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsProcessing(true);\r\n      setProgress(0);\r\n      setError(null);\r\n      \r\n      // Create form data for the upload\r\n      const formData = new FormData();\r\n      dicomFiles.forEach(file => {\r\n        formData.append('files[]', file);\r\n      });\r\n      \r\n      // Add processing options\r\n      formData.append('confidence', confidence);\r\n      formData.append('lungs_only', 'false');\r\n      \r\n      // Upload the files\r\n      const response = await axios.post('/api/upload/dicom-volume', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          const progress = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setProgress(progress);\r\n        }\r\n      });\r\n      \r\n      // Reset upload progress after completed\r\n      setProgress(100);\r\n      \r\n      if (response.data && response.data.job_id) {\r\n        // Start polling for the processing status\r\n        const jobId = response.data.job_id;\r\n        let pollCount = 0;\r\n        const maxPolls = 120; // Poll for up to 2 minutes (120 x 1s)\r\n        const pollDelay = 1000; // 1 second between polls\r\n        let foundResult = false;\r\n        \r\n        setProcessingMessage(\"Processing DICOM volume. This may take a few minutes...\");\r\n        \r\n        const pollInterval = setInterval(async () => {\r\n          try {\r\n            pollCount++;\r\n            const statusResponse = await axios.get(`/api/results/preview/${jobId}`);\r\n            console.log(`Poll status check ${pollCount}:`, statusResponse.data);\r\n            \r\n            // Check if we have a status field\r\n            if (statusResponse.data.status === 'completed') {\r\n              clearInterval(pollInterval);\r\n              foundResult = true;\r\n              setIsProcessing(false);\r\n              setPreviewResult(statusResponse.data);\r\n              setShowPreview(true);\r\n              setProcessingMessage(null);\r\n            } else if (statusResponse.data.status === 'error') {\r\n              clearInterval(pollInterval);\r\n              foundResult = true;\r\n              setIsProcessing(false);\r\n              setError(`Processing error: ${statusResponse.data.error || 'Unknown error'}`);\r\n              setProcessingMessage(null);\r\n            } else if (pollCount >= maxPolls) {\r\n              // If we've polled too many times, still show the result page but with a notice\r\n              clearInterval(pollInterval);\r\n              setIsProcessing(false);\r\n              setProcessingMessage(\"Processing is continuing in the background. You may need to check Results page later.\");\r\n              try {\r\n                // Try one more time to get the result\r\n                const finalCheck = await axios.get(`/api/results/preview/${jobId}`);\r\n                if (finalCheck.data) {\r\n                  setPreviewResult(finalCheck.data);\r\n                  setShowPreview(true);\r\n                  foundResult = true;\r\n                }\r\n              } catch (e) {\r\n                console.error(\"Final check failed:\", e);\r\n              }\r\n            } else {\r\n              // Still processing, update message with time elapsed\r\n              const minutesElapsed = Math.floor(pollCount * pollDelay / 60000);\r\n              const secondsElapsed = Math.floor((pollCount * pollDelay / 1000) % 60);\r\n              setProcessingMessage(`Processing DICOM volume... (${minutesElapsed}m ${secondsElapsed}s elapsed)`);\r\n            }\r\n          } catch (error) {\r\n            console.log(`Poll error (attempt ${pollCount}):`, error);\r\n            \r\n            // Don't give up on first error, try a few more times\r\n            if (pollCount >= maxPolls) {\r\n              clearInterval(pollInterval);\r\n              if (!foundResult) {\r\n                setIsProcessing(false);\r\n                setError('Failed to retrieve processing result. Please check the Results page later.');\r\n                setProcessingMessage(\"Processing is continuing in the background.\");\r\n              }\r\n            }\r\n          }\r\n        }, pollDelay);\r\n      } else {\r\n        setIsProcessing(false);\r\n        setError('Failed to start processing. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      setIsProcessing(false);\r\n      console.error('Error uploading DICOM volume:', error);\r\n      setError(error.response?.data?.error || 'Failed to upload DICOM volume. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Handle patient info form inputs\r\n  const handlePatientInfoChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPatientInfo(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  // Handle saving with patient info\r\n  const handleSaveWithPatientInfo = async () => {\r\n    if (!previewResult || !previewResult.job_id) {\r\n      setError('No result to save');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(`/api/results/action/${previewResult.job_id}`, {\r\n        action: 'save',\r\n        patient_info: patientInfo\r\n      });\r\n\r\n      if (response.data.success) {\r\n        // Hide the form\r\n        setShowPatientForm(false);\r\n        \r\n        // Set navigating flag to allow navigation\r\n        setIsNavigating(true);\r\n        \r\n        // If we have a pending navigation, go there\r\n        if (pendingNavigation) {\r\n          navigate(pendingNavigation);\r\n          setPendingNavigation(null);\r\n        } else {\r\n          // Navigate to the result page using the path provided in the response\r\n          const resultPath = response.data.result_path || `/results/${response.data.job_id || response.data.case_name}`;\r\n          \r\n          // Log the navigation\r\n          console.log(`Navigating to result path: ${resultPath}`);\r\n          \r\n          // Navigate to the result page\r\n          navigate(resultPath.replace('/api', ''));\r\n        }\r\n      } else {\r\n        setError(response.data.error || 'Failed to save results');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving result:', error);\r\n      setError(error.response?.data?.error || 'Error saving result');\r\n    }\r\n  };\r\n\r\n  // Handle result actions (save/discard)\r\n  const handleResultAction = async (action) => {\r\n    if (!previewResult || !previewResult.job_id) {\r\n      setError('No result to save or discard');\r\n      return;\r\n    }\r\n\r\n    if (action === 'save') {\r\n      // Show patient information form\r\n      setShowPatientForm(true);\r\n    } else {\r\n      try {\r\n        const response = await axios.post(`/api/results/action/${previewResult.job_id}`, {\r\n          action: action\r\n        });\r\n\r\n        if (response.data.success) {\r\n          // Reset the form on discard\r\n          setFiles([]);\r\n          setRawFile(null);\r\n          setPreviewResult(null);\r\n          setShowPreview(false);\r\n          \r\n          // Allow navigation after discarding\r\n          setIsNavigating(true);\r\n          \r\n          // If we were trying to navigate somewhere when discarding, navigate there\r\n          if (pendingNavigation) {\r\n            navigate(pendingNavigation);\r\n            setPendingNavigation(null);\r\n          }\r\n        } else {\r\n          setError(response.data.error || `Failed to ${action} results`);\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error ${action}ing result:`, error);\r\n        setError(error.response?.data?.error || `Error ${action}ing result`);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle action on leave confirmation\r\n  const handleLeaveConfirmation = (shouldSave) => {\r\n    if (shouldSave === 'save') {\r\n      // Show patient form\r\n      setShowPatientForm(true);\r\n      setShowLeaveConfirmation(false);\r\n    } else if (shouldSave === 'discard') {\r\n      // Discard and continue navigation\r\n      handleResultAction('discard');\r\n      setShowLeaveConfirmation(false);\r\n      \r\n      // Set navigating flag to allow navigation\r\n      setIsNavigating(true);\r\n      \r\n      // If we have a pending navigation, go there\r\n      if (pendingNavigation) {\r\n        navigate(pendingNavigation);\r\n        setPendingNavigation(null);\r\n      }\r\n    } else {\r\n      // Stay on page\r\n      setShowLeaveConfirmation(false);\r\n      setPendingNavigation(null);\r\n    }\r\n  };\r\n\r\n  // Handle nodule selection\r\n  const handleNoduleClick = (noduleId) => {\r\n    setSelectedNoduleId(noduleId);\r\n  };\r\n\r\n  return (\r\n    <div className={`container mx-auto px-4 py-8 ${darkMode ? 'text-gray-200' : 'text-gray-800'}`}>\r\n      {/* Add this section for mode switching */}\r\n      <div className=\"mb-6\">\r\n        <h1 className=\"text-2xl font-bold mb-4\">Upload CT Scan</h1>\r\n        \r\n        <div className=\"flex space-x-4 mb-4\">\r\n          <button\r\n            onClick={() => setUploadMode('single')}\r\n            className={`px-4 py-2 rounded-lg ${uploadMode === 'single' \r\n              ? (darkMode ? 'bg-indigo-600 text-white' : 'bg-indigo-100 text-indigo-700') \r\n              : (darkMode ? 'bg-gray-700 text-gray-300' : 'bg-gray-100 text-gray-700')\r\n            }`}\r\n          >\r\n            Single CT Scan\r\n          </button>\r\n          <button\r\n            onClick={() => setUploadMode('dicom-volume')}\r\n            className={`px-4 py-2 rounded-lg ${uploadMode === 'dicom-volume' \r\n              ? (darkMode ? 'bg-indigo-600 text-white' : 'bg-indigo-100 text-indigo-700') \r\n              : (darkMode ? 'bg-gray-700 text-gray-300' : 'bg-gray-100 text-gray-700')\r\n            }`}\r\n          >\r\n            DICOM Volume\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {!showPreview ? (\r\n        <div className={`p-6 rounded-lg shadow-md ${darkMode ? 'bg-gray-800' : 'bg-white'}`}>\r\n          {/* Show different upload interface based on mode */}\r\n          {uploadMode === 'single' ? (\r\n            <>\r\n              <h2 className=\"text-xl font-semibold mb-4\">Upload Single CT Scan</h2>\r\n              <p className=\"mb-6 text-sm\">\r\n                Supported file formats: .mhd/.raw pair, .nii, .nii.gz, or single .dcm\r\n              </p>\r\n              \r\n              {/* Original single file upload section */}\r\n              <div \r\n                {...getRootProps()} \r\n                className={`border-2 border-dashed rounded-lg p-8 cursor-pointer transition-colors ${\r\n                  isDragActive \r\n                    ? (darkMode ? 'border-indigo-400 bg-indigo-900 bg-opacity-20' : 'border-indigo-500 bg-indigo-50') \r\n                    : (darkMode ? 'border-gray-600 hover:border-gray-500' : 'border-gray-300 hover:border-gray-400')\r\n                }`}\r\n              >\r\n                <input {...getInputProps()} />\r\n                <div className=\"flex flex-col items-center justify-center\">\r\n                  <CloudArrowUpIcon className={`h-12 w-12 mb-3 ${isDragActive ? 'text-indigo-500' : 'text-gray-400'}`} />\r\n                  {isDragActive ? (\r\n                    <p>Drop the file here...</p>\r\n                  ) : (\r\n                    <>\r\n                      <p className=\"text-center\">Drag & drop your CT scan file here, or click to select file</p>\r\n                      <p className=\"text-center text-xs mt-2 text-gray-500\">\r\n                        For MHD files, you can upload the RAW file separately in the next step\r\n                      </p>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Display selected files */}\r\n              {files.length > 0 && (\r\n                <div className={`mt-4 p-4 rounded-md ${darkMode ? 'bg-gray-700' : 'bg-gray-50'}`}>\r\n                  <h3 className=\"font-medium mb-2\">Selected File:</h3>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"truncate\">{files[0].name} ({(files[0].size / (1024 * 1024)).toFixed(2)} MB)</span>\r\n                    <button \r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        setFiles([]);\r\n                        setShowRawUpload(false);\r\n                        setError(null);\r\n                      }}\r\n                      className=\"text-red-500 hover:text-red-700\"\r\n                    >\r\n                      <XMarkIcon className=\"h-5 w-5\" />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Raw file upload section for MHD files */}\r\n              {showRawUpload && (\r\n                <div className=\"mt-4\">\r\n                  <h3 className=\"font-medium mb-2\">Upload associated RAW file:</h3>\r\n                  <div \r\n                    {...getRawRootProps()} \r\n                    className={`border-2 border-dashed rounded-lg p-6 cursor-pointer transition-colors ${\r\n                      isRawDragActive \r\n                        ? (darkMode ? 'border-indigo-400 bg-indigo-900 bg-opacity-20' : 'border-indigo-500 bg-indigo-50') \r\n                        : (darkMode ? 'border-gray-600 hover:border-gray-500' : 'border-gray-300 hover:border-gray-400')\r\n                    }`}\r\n                  >\r\n                    <input {...getRawInputProps()} />\r\n                    <div className=\"flex flex-col items-center justify-center\">\r\n                      <CloudArrowUpIcon className={`h-8 w-8 mb-2 ${isRawDragActive ? 'text-indigo-500' : 'text-gray-400'}`} />\r\n                      {isRawDragActive ? (\r\n                        <p>Drop the RAW file here...</p>\r\n                      ) : (\r\n                        <p className=\"text-center text-sm\">Drag & drop your RAW file here, or click to select file</p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {/* Display selected RAW file */}\r\n                  {rawFile && (\r\n                    <div className={`mt-2 p-3 rounded-md ${darkMode ? 'bg-gray-700' : 'bg-gray-50'}`}>\r\n                      <div className=\"flex justify-between items-center\">\r\n                        <span className=\"truncate\">{rawFile.name} ({(rawFile.size / (1024 * 1024)).toFixed(2)} MB)</span>\r\n                        <button \r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            setRawFile(null);\r\n                          }}\r\n                          className=\"text-red-500 hover:text-red-700\"\r\n                        >\r\n                          <XMarkIcon className=\"h-5 w-5\" />\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n              \r\n              {/* Original upload button */}\r\n              <div className=\"mt-6\">\r\n                <button \r\n                  onClick={handleUpload}\r\n                  disabled={isUploading || isProcessing || files.length === 0}\r\n                  className={`px-4 py-2 rounded-md text-white font-medium \r\n                    ${isUploading || isProcessing || files.length === 0 \r\n                      ? 'bg-gray-400 cursor-not-allowed' \r\n                      : 'bg-blue-600 hover:bg-blue-700'}\r\n                  `}\r\n                >\r\n                  {isUploading ? 'Uploading...' : isProcessing ? 'Processing...' : 'Upload and Process'}\r\n                </button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <h2 className=\"text-xl font-semibold mb-4\">Upload DICOM Volume</h2>\r\n              <p className=\"mb-6 text-sm\">\r\n                Upload multiple DICOM (.dcm) files to create a 3D volume, or a single .zip file containing DICOM files\r\n              </p>\r\n              \r\n              {/* DICOM Volume file upload section */}\r\n              <div \r\n                {...getDicomVolumeRootProps()} \r\n                className={`border-2 border-dashed rounded-lg p-8 cursor-pointer transition-colors ${\r\n                  isDicomVolumeDragActive \r\n                    ? (darkMode ? 'border-indigo-400 bg-indigo-900 bg-opacity-20' : 'border-indigo-500 bg-indigo-50') \r\n                    : (darkMode ? 'border-gray-600 hover:border-gray-500' : 'border-gray-300 hover:border-gray-400')\r\n                }`}\r\n              >\r\n                <input {...getDicomVolumeInputProps()} />\r\n                <div className=\"flex flex-col items-center justify-center\">\r\n                  <CloudArrowUpIcon className={`h-12 w-12 mb-3 ${isDicomVolumeDragActive ? 'text-indigo-500' : 'text-gray-400'}`} />\r\n                  {isDicomVolumeDragActive ? (\r\n                    <p>Drop the files here...</p>\r\n                  ) : (\r\n                    <>\r\n                      <p className=\"text-center\">Drag & drop multiple DICOM files or a ZIP file here, or click to select files</p>\r\n                      <p className=\"text-center text-xs mt-2 text-gray-500\">\r\n                        All slices from the same DICOM series will be combined into a 3D volume\r\n                      </p>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Display selected DICOM files */}\r\n              {dicomFiles.length > 0 && (\r\n                <div className={`mt-4 p-4 rounded-md ${darkMode ? 'bg-gray-700' : 'bg-gray-50'}`}>\r\n                  <h3 className=\"font-medium mb-2\">Selected Files: {dicomFiles.length}</h3>\r\n                  <div className=\"max-h-40 overflow-y-auto pr-2\">\r\n                    {dicomFiles.length === 1 && dicomFiles[0].name.toLowerCase().endsWith('.zip') ? (\r\n                      <div className=\"flex justify-between items-center\">\r\n                        <span className=\"truncate\">{dicomFiles[0].name} ({(dicomFiles[0].size / (1024 * 1024)).toFixed(2)} MB)</span>\r\n                        <button \r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            setDicomFiles([]);\r\n                            setError(null);\r\n                          }}\r\n                          className=\"text-red-500 hover:text-red-700\"\r\n                        >\r\n                          <XMarkIcon className=\"h-5 w-5\" />\r\n                        </button>\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        <div className=\"flex justify-between mb-2\">\r\n                          <span>{dicomFiles.length} DICOM files selected ({(dicomFiles.reduce((sum, file) => sum + file.size, 0) / (1024 * 1024)).toFixed(2)} MB total)</span>\r\n                          <button \r\n                            onClick={(e) => {\r\n                              e.stopPropagation();\r\n                              setDicomFiles([]);\r\n                              setError(null);\r\n                            }}\r\n                            className=\"text-red-500 hover:text-red-700\"\r\n                          >\r\n                            <XMarkIcon className=\"h-5 w-5\" />\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"text-xs text-gray-400\">Files: {dicomFiles.slice(0, 3).map(f => f.name).join(', ')}{dicomFiles.length > 3 ? ` ... and ${dicomFiles.length - 3} more` : ''}</div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {/* DICOM Volume upload button */}\r\n              <div className=\"mt-6\">\r\n                <button \r\n                  onClick={handleDicomVolumeUpload}\r\n                  disabled={isUploading || isProcessing || dicomFiles.length === 0}\r\n                  className={`px-4 py-2 rounded-md text-white font-medium \r\n                    ${isUploading || isProcessing || dicomFiles.length === 0 \r\n                      ? 'bg-gray-400 cursor-not-allowed' \r\n                      : 'bg-blue-600 hover:bg-blue-700'}\r\n                  `}\r\n                >\r\n                  {isUploading ? 'Uploading...' : isProcessing ? 'Processing...' : 'Upload and Process'}\r\n                </button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} shadow rounded-lg p-6 max-w-4xl mx-auto`}>\r\n          <div className=\"space-y-6\">\r\n            <h2 className={`text-xl font-semibold ${darkMode ? 'text-white' : 'text-gray-900'}`}>\r\n              Review Scan Results\r\n            </h2>\r\n            \r\n            <div className={`${darkMode ? 'bg-blue-900' : 'bg-blue-50'} p-4 rounded-md mb-4`}>\r\n              <div className=\"flex\">\r\n                <InformationCircleIcon className={`h-5 w-5 ${darkMode ? 'text-blue-300' : 'text-blue-400'}`} />\r\n                <div className={`ml-3 text-sm ${darkMode ? 'text-blue-200' : 'text-blue-700'}`}>\r\n                  <p>Please review the results below. Use the interactive visualization to examine detected nodules. You can save the results to your records or discard them if not satisfied.</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Visualization section */}\r\n            <div className={`${darkMode ? 'bg-gray-700' : 'bg-gray-100'} rounded-lg overflow-hidden`}>\r\n              <div className={`px-4 py-3 border-b ${darkMode ? 'border-gray-600' : 'border-gray-200'} sm:px-6`}>\r\n                <h3 className={`text-lg font-medium ${darkMode ? 'text-white' : 'text-gray-900'}`}>Interactive Visualization</h3>\r\n              </div>\r\n              \r\n              {/* Interactive viewer */}\r\n              <div className=\"p-4\">\r\n                <InteractiveViewer \r\n                  caseId={previewResult.case_name} \r\n                  selectedNoduleId={selectedNoduleId}\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Nodule table for interactive navigation */}\r\n            {previewResult.details && previewResult.details.includes('Nodule ') && (\r\n              <div className={`${darkMode ? 'bg-gray-700' : 'bg-gray-100'} p-4 rounded-md`}>\r\n                <h3 className={`text-md font-medium ${darkMode ? 'text-white' : 'text-gray-900'} mb-2`}>\r\n                  Detected Nodules:\r\n                </h3>\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className={`min-w-full divide-y ${darkMode ? 'divide-gray-600' : 'divide-gray-200'}`}>\r\n                    <thead className={`${darkMode ? 'bg-gray-800' : 'bg-gray-50'}`}>\r\n                      <tr>\r\n                        <th scope=\"col\" className={`px-6 py-3 text-left text-xs font-medium ${darkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>\r\n                          Nodule\r\n                        </th>\r\n                        <th scope=\"col\" className={`px-6 py-3 text-left text-xs font-medium ${darkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>\r\n                          Coordinates (z,y,x)\r\n                        </th>\r\n                        <th scope=\"col\" className={`px-6 py-3 text-left text-xs font-medium ${darkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>\r\n                          Radius (mm)\r\n                        </th>\r\n                        <th scope=\"col\" className={`px-6 py-3 text-left text-xs font-medium ${darkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>\r\n                          Confidence\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className={`${darkMode ? 'bg-gray-700 divide-y divide-gray-600' : 'bg-white divide-y divide-gray-200'}`}>\r\n                      {extractNodulesFromDetails(previewResult.details).map((nodule, index) => (\r\n                        <tr \r\n                          key={index} \r\n                          className={`${index % 2 === 0 ? (darkMode ? 'bg-gray-800' : 'bg-gray-50') : ''} \r\n                            cursor-pointer hover:${darkMode ? 'bg-gray-600' : 'bg-gray-100'} ${selectedNoduleId === nodule.id ? (darkMode ? 'bg-indigo-900' : 'bg-indigo-100') : ''}`}\r\n                          onClick={() => handleNoduleClick(nodule.id)}\r\n                        >\r\n                          <td className={`px-6 py-4 whitespace-nowrap text-sm ${darkMode ? 'text-white' : 'text-gray-900'}`}>\r\n                            {nodule.id}\r\n                          </td>\r\n                          <td className={`px-6 py-4 whitespace-nowrap text-sm ${darkMode ? 'text-gray-300' : 'text-gray-500'}`}>\r\n                            {nodule.coordinates}\r\n                          </td>\r\n                          <td className={`px-6 py-4 whitespace-nowrap text-sm ${darkMode ? 'text-gray-300' : 'text-gray-500'}`}>\r\n                            {nodule.radius}\r\n                          </td>\r\n                          <td className={`px-6 py-4 whitespace-nowrap text-sm ${darkMode ? 'text-gray-300' : 'text-gray-500'}`}>\r\n                            {nodule.confidence}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Details section */}\r\n            <div className={`${darkMode ? 'bg-gray-700' : 'bg-gray-100'} p-4 rounded-md`}>\r\n              <h3 className={`text-md font-medium ${darkMode ? 'text-white' : 'text-gray-900'} mb-2`}>\r\n                Analysis Details:\r\n              </h3>\r\n              <pre className={`text-sm whitespace-pre-wrap ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>\r\n                {previewResult.details || \"No detailed analysis available.\"}\r\n              </pre>\r\n            </div>\r\n            \r\n            {/* Action buttons */}\r\n            <div className=\"flex space-x-4 justify-center mt-6\">\r\n              <button\r\n                onClick={() => handleResultAction('discard')}\r\n                className={`px-4 py-2 rounded-md flex items-center ${\r\n                  darkMode \r\n                    ? 'bg-red-800 text-white hover:bg-red-700' \r\n                    : 'bg-red-600 text-white hover:bg-red-700'\r\n                }`}\r\n              >\r\n                <XCircleIcon className=\"h-5 w-5 mr-2\" />\r\n                Discard Results\r\n              </button>\r\n              \r\n              <button\r\n                onClick={() => handleResultAction('save')}\r\n                className={`px-4 py-2 rounded-md flex items-center ${\r\n                  darkMode \r\n                    ? 'bg-green-800 text-white hover:bg-green-700' \r\n                    : 'bg-green-600 text-white hover:bg-green-700'\r\n                }`}\r\n              >\r\n                <CheckCircleIcon className=\"h-5 w-5 mr-2\" />\r\n                Save to Records\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Leave confirmation dialog */}\r\n      {showLeaveConfirmation && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-xl p-6 max-w-md w-full`}>\r\n            <h3 className={`text-lg font-medium ${darkMode ? 'text-white' : 'text-gray-900'} mb-4`}>\r\n              Unsaved Results\r\n            </h3>\r\n            <p className={`${darkMode ? 'text-gray-300' : 'text-gray-600'} mb-6`}>\r\n              You have unsaved analysis results. What would you like to do?\r\n            </p>\r\n            <div className=\"flex justify-end space-x-4\">\r\n              <button\r\n                onClick={() => handleLeaveConfirmation('stay')}\r\n                className={`px-4 py-2 rounded-md ${\r\n                  darkMode \r\n                    ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' \r\n                    : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\r\n                }`}\r\n              >\r\n                Stay on Page\r\n              </button>\r\n              <button\r\n                onClick={() => handleLeaveConfirmation('discard')}\r\n                className={`px-4 py-2 rounded-md ${\r\n                  darkMode \r\n                    ? 'bg-red-800 text-white hover:bg-red-700' \r\n                    : 'bg-red-600 text-white hover:bg-red-700'\r\n                }`}\r\n              >\r\n                Discard & Leave\r\n              </button>\r\n              <button\r\n                onClick={() => handleLeaveConfirmation('save')}\r\n                className={`px-4 py-2 rounded-md ${\r\n                  darkMode \r\n                    ? 'bg-green-800 text-white hover:bg-green-700' \r\n                    : 'bg-green-600 text-white hover:bg-green-700'\r\n                }`}\r\n              >\r\n                Save Results\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Patient information form */}\r\n      {showPatientForm && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-xl p-6 max-w-md w-full`}>\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h3 className={`text-lg font-medium ${darkMode ? 'text-white' : 'text-gray-900'}`}>\r\n                Patient Information\r\n              </h3>\r\n              <button \r\n                onClick={() => setShowPatientForm(false)} \r\n                className={`rounded-full p-1 ${darkMode ? 'hover:bg-gray-700' : 'hover:bg-gray-200'}`}\r\n              >\r\n                <XMarkIcon className={`h-5 w-5 ${darkMode ? 'text-gray-400' : 'text-gray-500'}`} />\r\n              </button>\r\n            </div>\r\n            \r\n            <p className={`${darkMode ? 'text-gray-300' : 'text-gray-600'} mb-4`}>\r\n              Please enter the patient's information to save this result to their medical record.\r\n            </p>\r\n            \r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label htmlFor=\"name\" className={`block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\r\n                  Patient Name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  value={patientInfo.name}\r\n                  onChange={handlePatientInfoChange}\r\n                  required\r\n                  className={`w-full px-3 py-2 border ${darkMode ? 'bg-gray-700 border-gray-600 text-white' : 'bg-white border-gray-300 text-gray-900'} rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500`}\r\n                />\r\n              </div>\r\n              \r\n              <div>\r\n                <label htmlFor=\"age\" className={`block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\r\n                  Patient Age\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"age\"\r\n                  name=\"age\"\r\n                  value={patientInfo.age}\r\n                  onChange={handlePatientInfoChange}\r\n                  min=\"0\"\r\n                  max=\"120\"\r\n                  className={`w-full px-3 py-2 border ${darkMode ? 'bg-gray-700 border-gray-600 text-white' : 'bg-white border-gray-300 text-gray-900'} rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500`}\r\n                />\r\n              </div>\r\n              \r\n              <div>\r\n                <label htmlFor=\"description\" className={`block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\r\n                  Clinical Notes\r\n                </label>\r\n                <textarea\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  value={patientInfo.description}\r\n                  onChange={handlePatientInfoChange}\r\n                  rows=\"3\"\r\n                  className={`w-full px-3 py-2 border ${darkMode ? 'bg-gray-700 border-gray-600 text-white' : 'bg-white border-gray-300 text-gray-900'} rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500`}\r\n                  placeholder=\"Enter any relevant clinical notes about this scan...\"\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex justify-end space-x-4 mt-6\">\r\n              <button\r\n                onClick={() => setShowPatientForm(false)}\r\n                className={`px-4 py-2 rounded-md ${\r\n                  darkMode \r\n                    ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' \r\n                    : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\r\n                }`}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleSaveWithPatientInfo}\r\n                disabled={!patientInfo.name || !patientInfo.age}\r\n                className={`px-4 py-2 rounded-md ${\r\n                  !patientInfo.name || !patientInfo.age\r\n                    ? `${darkMode ? 'bg-green-900 text-gray-400' : 'bg-green-300 text-gray-600'} cursor-not-allowed`\r\n                    : darkMode \r\n                      ? 'bg-green-800 text-white hover:bg-green-700' \r\n                      : 'bg-green-600 text-white hover:bg-green-700'\r\n                }`}\r\n              >\r\n                Save to Records\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Helper function to extract nodule information from details text\r\nconst extractNodulesFromDetails = (details) => {\r\n  if (!details) return [];\r\n\r\n  const nodules = [];\r\n  const lines = details.split('\\n');\r\n  let currentNodule = null;\r\n  \r\n  for (const line of lines) {\r\n    // Skip segmentation information line\r\n    if (line.includes('Nodule segmentation performed:')) {\r\n      continue;\r\n    }\r\n    \r\n    if (line.startsWith('Nodule ')) {\r\n      if (currentNodule) {\r\n        nodules.push(currentNodule);\r\n      }\r\n      currentNodule = {\r\n        id: line.replace(':', '').trim(),\r\n        coordinates: '',\r\n        radius: '',\r\n        confidence: '',\r\n      };\r\n    } else if (currentNodule) {\r\n      if (line.includes('Coordinates')) {\r\n        currentNodule.coordinates = line.split(':')[1].trim();\r\n      } else if (line.includes('Radius')) {\r\n        currentNodule.radius = line.split(':')[1].trim();\r\n      } else if (line.includes('Confidence')) {\r\n        currentNodule.confidence = line.split(':')[1].trim();\r\n      }\r\n    }\r\n  }\r\n  \r\n  // Add the last nodule if present\r\n  if (currentNodule) {\r\n    nodules.push(currentNodule);\r\n  }\r\n  \r\n  return nodules;\r\n};\r\n\r\nexport default UploadPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}