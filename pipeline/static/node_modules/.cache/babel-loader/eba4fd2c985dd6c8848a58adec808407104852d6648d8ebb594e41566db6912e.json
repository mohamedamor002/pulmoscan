{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,PointElement,LineElement,Title,Tooltip,Legend,ArcElement,RadialLinearScale}from'chart.js';import{Bar,Line,Pie,Radar}from'react-chartjs-2';import{useTheme}from'../contexts/ThemeContext';import{useAuth}from'../contexts/AuthContext';import{ChartBarIcon,ArrowPathIcon,ExclamationCircleIcon,CalendarIcon,ClockIcon}from'@heroicons/react/24/outline';// Register ChartJS components\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,PointElement,LineElement,Title,Tooltip,Legend,ArcElement,RadialLinearScale);const AnalyticsPage=()=>{const[data,setData]=useState({scansByMonth:[],noduleLocationData:[],confidenceDistribution:[],scansByDoctor:[],noduleSize:[]});const[dateRange,setDateRange]=useState('6months');const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);const{darkMode}=useTheme();const{user}=useAuth();// Mock data generation\nuseEffect(()=>{const fetchAnalyticsData=async()=>{try{setIsLoading(true);// In a real implementation, this would be an API call to fetch analytics data\n// For now, we'll generate mock data that looks realistic\n// Fetch real scan results for reference\nconst resultsResponse=await axios.get('/api/results');const actualResults=resultsResponse.data||[];// Generate realistic mock data based on the actual results count\nconst mockData=generateMockAnalyticsData(actualResults.length,dateRange);setData(mockData);setIsLoading(false);}catch(error){console.error('Error fetching analytics data:',error);setError('Failed to load analytics data. Please try again later.');setIsLoading(false);}};fetchAnalyticsData();},[dateRange]);// Generate mock data for visualization\nconst generateMockAnalyticsData=(resultCount,range)=>{// Define date ranges\nconst now=new Date();let monthsToShow=6;switch(range){case'3months':monthsToShow=3;break;case'12months':monthsToShow=12;break;default:monthsToShow=6;}// Generate months labels\nconst monthLabels=[];for(let i=monthsToShow-1;i>=0;i--){const d=new Date();d.setMonth(now.getMonth()-i);monthLabels.push(d.toLocaleString('default',{month:'short',year:'numeric'}));}// Scans by month (with some randomization for realistic data)\nconst baseScanCount=Math.max(Math.floor(resultCount/monthsToShow),1);const scansByMonth=monthLabels.map((month,i)=>{// Make more recent months have slightly more scans for a realistic trend\nconst factor=0.5+(i+1)/monthsToShow*0.5;return{month,totalScans:Math.floor(baseScanCount*factor*(0.8+Math.random()*0.4)),withNodules:Math.floor(baseScanCount*factor*0.6*(0.7+Math.random()*0.5))};});// Nodule location data (distribution across lung areas)\nconst noduleLocationData=[{location:'Upper Right Lobe',count:Math.floor(10+Math.random()*20)},{location:'Middle Right Lobe',count:Math.floor(5+Math.random()*15)},{location:'Lower Right Lobe',count:Math.floor(15+Math.random()*25)},{location:'Upper Left Lobe',count:Math.floor(10+Math.random()*20)},{location:'Lower Left Lobe',count:Math.floor(15+Math.random()*25)}];// AI confidence distribution\nconst confidenceRanges=['90-100%','80-90%','70-80%','60-70%','<60%'];const confidenceDistribution=confidenceRanges.map(range=>({range,count:Math.floor(5+Math.random()*20)}));// Scans by doctor (top 5)\nconst doctorNames=['Dr. Smith','Dr. Johnson','Dr. Williams','Dr. Brown','Dr. Jones','Dr. Garcia','Dr. Miller','Dr. Davis','Dr. Rodriguez','Dr. Martinez'];// Select 5 random doctors\nconst selectedDoctors=doctorNames.sort(()=>0.5-Math.random()).slice(0,5);const scansByDoctor=selectedDoctors.map(doctor=>({doctor,scans:Math.floor(5+Math.random()*20)})).sort((a,b)=>b.scans-a.scans);// Nodule size distribution\nconst noduleSizeRanges=['<3mm','3-6mm','6-10mm','10-15mm','>15mm'];const noduleSize=noduleSizeRanges.map(range=>({range,count:Math.floor(5+Math.random()*15)}));return{scansByMonth,noduleLocationData,confidenceDistribution,scansByDoctor,noduleSize};};// Chart configuration and data preparation\nconst monthlyScansChartData={labels:data.scansByMonth.map(item=>item.month),datasets:[{label:'Total Scans',data:data.scansByMonth.map(item=>item.totalScans),backgroundColor:'rgba(79, 70, 229, 0.6)',borderColor:'rgba(79, 70, 229, 1)',borderWidth:1},{label:'Scans With Nodules',data:data.scansByMonth.map(item=>item.withNodules),backgroundColor:'rgba(236, 72, 153, 0.6)',borderColor:'rgba(236, 72, 153, 1)',borderWidth:1}]};const monthlyTrendChartData={labels:data.scansByMonth.map(item=>item.month),datasets:[{label:'Total Scans',data:data.scansByMonth.map(item=>item.totalScans),backgroundColor:'rgba(79, 70, 229, 0.1)',borderColor:'rgba(79, 70, 229, 1)',fill:true,tension:0.4},{label:'Scans With Nodules',data:data.scansByMonth.map(item=>item.withNodules),backgroundColor:'rgba(236, 72, 153, 0.1)',borderColor:'rgba(236, 72, 153, 1)',fill:true,tension:0.4}]};const noduleLocationChartData={labels:data.noduleLocationData.map(item=>item.location),datasets:[{label:'Nodule Distribution by Location',data:data.noduleLocationData.map(item=>item.count),backgroundColor:['rgba(79, 70, 229, 0.6)','rgba(16, 185, 129, 0.6)','rgba(245, 158, 11, 0.6)','rgba(236, 72, 153, 0.6)','rgba(99, 102, 241, 0.6)'],borderColor:['rgba(79, 70, 229, 1)','rgba(16, 185, 129, 1)','rgba(245, 158, 11, 1)','rgba(236, 72, 153, 1)','rgba(99, 102, 241, 1)'],borderWidth:1}]};const confidenceChartData={labels:data.confidenceDistribution.map(item=>item.range),datasets:[{label:'AI Confidence Distribution',data:data.confidenceDistribution.map(item=>item.count),backgroundColor:'rgba(16, 185, 129, 0.6)',borderColor:'rgba(16, 185, 129, 1)',borderWidth:1}]};const doctorScansChartData={labels:data.scansByDoctor.map(item=>item.doctor),datasets:[{label:'Scans by Doctor',data:data.scansByDoctor.map(item=>item.scans),backgroundColor:['rgba(79, 70, 229, 0.6)','rgba(16, 185, 129, 0.6)','rgba(245, 158, 11, 0.6)','rgba(236, 72, 153, 0.6)','rgba(99, 102, 241, 0.6)'],borderColor:['rgba(79, 70, 229, 1)','rgba(16, 185, 129, 1)','rgba(245, 158, 11, 1)','rgba(236, 72, 153, 1)','rgba(99, 102, 241, 1)'],borderWidth:1}]};const noduleSizeChartData={labels:data.noduleSize.map(item=>item.range),datasets:[{label:'Nodule Size Distribution',data:data.noduleSize.map(item=>item.count),backgroundColor:'rgba(245, 158, 11, 0.6)',borderColor:['rgba(245, 158, 11, 1)','rgba(245, 158, 11, 1)','rgba(245, 158, 11, 1)','rgba(245, 158, 11, 1)','rgba(245, 158, 11, 1)'],borderWidth:1}]};const chartOptions={responsive:true,maintainAspectRatio:false,plugins:{legend:{position:'top',labels:{color:darkMode?'#fff':'#000',font:{size:12}}},tooltip:{backgroundColor:darkMode?'rgba(0, 0, 0, 0.8)':'rgba(255, 255, 255, 0.8)',titleColor:darkMode?'#fff':'#000',bodyColor:darkMode?'#e5e7eb':'#374151',borderColor:darkMode?'rgba(255, 255, 255, 0.1)':'rgba(0, 0, 0, 0.1)',borderWidth:1}},scales:{y:{beginAtZero:true,ticks:{precision:0,color:darkMode?'#e5e7eb':'#374151'},grid:{color:darkMode?'rgba(255, 255, 255, 0.1)':'rgba(0, 0, 0, 0.1)'}},x:{ticks:{color:darkMode?'#e5e7eb':'#374151'},grid:{color:darkMode?'rgba(255, 255, 255, 0.1)':'rgba(0, 0, 0, 0.1)'}}}};// Special options for pie chart\nconst pieChartOptions={responsive:true,maintainAspectRatio:false,plugins:{legend:{position:'right',labels:{color:darkMode?'#fff':'#000',font:{size:12},padding:20}},tooltip:{backgroundColor:darkMode?'rgba(0, 0, 0, 0.8)':'rgba(255, 255, 255, 0.8)',titleColor:darkMode?'#fff':'#000',bodyColor:darkMode?'#e5e7eb':'#374151',borderColor:darkMode?'rgba(255, 255, 255, 0.1)':'rgba(0, 0, 0, 0.1)',borderWidth:1}}};if(isLoading){return/*#__PURE__*/_jsxs(\"div\",{className:`text-center py-12 ${darkMode?'text-white':''}`,children:[/*#__PURE__*/_jsx(\"div\",{className:\"inline-block h-8 w-8 animate-spin rounded-full border-4 border-solid border-indigo-600 border-r-transparent\"}),/*#__PURE__*/_jsx(\"p\",{className:`mt-4 ${darkMode?'text-gray-300':'text-gray-600'}`,children:\"Loading analytics data...\"})]});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:`${darkMode?'bg-red-900':'bg-red-50'} p-4 rounded-md`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(ExclamationCircleIcon,{className:`h-5 w-5 ${darkMode?'text-red-300':'text-red-400'}`,\"aria-hidden\":\"true\"}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-3\",children:/*#__PURE__*/_jsx(\"h3\",{className:`text-sm font-medium ${darkMode?'text-red-300':'text-red-800'}`,children:error})})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:darkMode?'text-white':'',children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:`text-2xl font-semibold ${darkMode?'text-white':'text-gray-900'}`,children:[/*#__PURE__*/_jsx(ChartBarIcon,{className:\"h-7 w-7 inline-block mr-2 mb-1\"}),\"Analytics Dashboard\"]}),/*#__PURE__*/_jsx(\"p\",{className:`mt-1 text-sm ${darkMode?'text-gray-300':'text-gray-500'}`,children:\"Comprehensive data visualization for scan results and nodule detection statistics\"})]}),/*#__PURE__*/_jsx(\"div\",{className:`${darkMode?'bg-gray-800':'bg-white'} p-4 rounded-lg shadow-sm mb-6`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(CalendarIcon,{className:`h-5 w-5 mr-2 ${darkMode?'text-gray-400':'text-gray-500'}`}),/*#__PURE__*/_jsx(\"span\",{className:`text-sm font-medium ${darkMode?'text-gray-300':'text-gray-700'}`,children:\"Time Period:\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setDateRange('3months'),className:`px-3 py-1.5 text-sm font-medium rounded-md transition-colors ${dateRange==='3months'?darkMode?'bg-indigo-600 text-white':'bg-indigo-50 text-indigo-700':darkMode?'bg-gray-700 text-gray-300 hover:bg-gray-600':'bg-gray-100 text-gray-700 hover:bg-gray-200'}`,children:\"Last 3 Months\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setDateRange('6months'),className:`px-3 py-1.5 text-sm font-medium rounded-md transition-colors ${dateRange==='6months'?darkMode?'bg-indigo-600 text-white':'bg-indigo-50 text-indigo-700':darkMode?'bg-gray-700 text-gray-300 hover:bg-gray-600':'bg-gray-100 text-gray-700 hover:bg-gray-200'}`,children:\"Last 6 Months\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setDateRange('12months'),className:`px-3 py-1.5 text-sm font-medium rounded-md transition-colors ${dateRange==='12months'?darkMode?'bg-indigo-600 text-white':'bg-indigo-50 text-indigo-700':darkMode?'bg-gray-700 text-gray-300 hover:bg-gray-600':'bg-gray-100 text-gray-700 hover:bg-gray-200'}`,children:\"Last 12 Months\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{setIsLoading(true);setTimeout(()=>{// Generate new mock data with the same date range\nconst mockData=generateMockAnalyticsData(data.scansByMonth.reduce((sum,item)=>sum+item.totalScans,0),dateRange);setData(mockData);setIsLoading(false);},500);},className:`flex items-center px-3 py-1.5 rounded-md text-sm font-medium ${darkMode?'bg-gray-700 text-gray-300 hover:bg-gray-600':'bg-gray-100 text-gray-700 hover:bg-gray-200'}`,children:[/*#__PURE__*/_jsx(ArrowPathIcon,{className:\"h-4 w-4 mr-1\"}),\"Refresh\"]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:`${darkMode?'bg-gray-800':'bg-white'} p-4 rounded-lg shadow-sm`,children:[/*#__PURE__*/_jsx(\"h2\",{className:`text-lg font-medium mb-4 ${darkMode?'text-white':'text-gray-900'}`,children:\"Monthly Scan Volume\"}),/*#__PURE__*/_jsx(\"div\",{className:\"h-72\",children:/*#__PURE__*/_jsx(Bar,{data:monthlyScansChartData,options:chartOptions})})]}),/*#__PURE__*/_jsxs(\"div\",{className:`${darkMode?'bg-gray-800':'bg-white'} p-4 rounded-lg shadow-sm`,children:[/*#__PURE__*/_jsx(\"h2\",{className:`text-lg font-medium mb-4 ${darkMode?'text-white':'text-gray-900'}`,children:\"Scan Volume Trends\"}),/*#__PURE__*/_jsx(\"div\",{className:\"h-72\",children:/*#__PURE__*/_jsx(Line,{data:monthlyTrendChartData,options:chartOptions})})]}),/*#__PURE__*/_jsxs(\"div\",{className:`${darkMode?'bg-gray-800':'bg-white'} p-4 rounded-lg shadow-sm`,children:[/*#__PURE__*/_jsx(\"h2\",{className:`text-lg font-medium mb-4 ${darkMode?'text-white':'text-gray-900'}`,children:\"Nodule Location Distribution\"}),/*#__PURE__*/_jsx(\"div\",{className:\"h-72\",children:/*#__PURE__*/_jsx(Pie,{data:noduleLocationChartData,options:pieChartOptions})})]}),/*#__PURE__*/_jsxs(\"div\",{className:`${darkMode?'bg-gray-800':'bg-white'} p-4 rounded-lg shadow-sm`,children:[/*#__PURE__*/_jsx(\"h2\",{className:`text-lg font-medium mb-4 ${darkMode?'text-white':'text-gray-900'}`,children:\"AI Confidence Distribution\"}),/*#__PURE__*/_jsx(\"div\",{className:\"h-72\",children:/*#__PURE__*/_jsx(Bar,{data:confidenceChartData,options:chartOptions})})]}),/*#__PURE__*/_jsxs(\"div\",{className:`${darkMode?'bg-gray-800':'bg-white'} p-4 rounded-lg shadow-sm`,children:[/*#__PURE__*/_jsx(\"h2\",{className:`text-lg font-medium mb-4 ${darkMode?'text-white':'text-gray-900'}`,children:\"Top Doctors by Scan Volume\"}),/*#__PURE__*/_jsx(\"div\",{className:\"h-72\",children:/*#__PURE__*/_jsx(Bar,{data:doctorScansChartData,options:{...chartOptions,indexAxis:'y'}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:`${darkMode?'bg-gray-800':'bg-white'} p-4 rounded-lg shadow-sm`,children:[/*#__PURE__*/_jsx(\"h2\",{className:`text-lg font-medium mb-4 ${darkMode?'text-white':'text-gray-900'}`,children:\"Nodule Size Distribution\"}),/*#__PURE__*/_jsx(\"div\",{className:\"h-72\",children:/*#__PURE__*/_jsx(Bar,{data:noduleSizeChartData,options:chartOptions})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:`${darkMode?'bg-indigo-900/30 border-indigo-800':'bg-indigo-50 border-indigo-100'} border rounded-lg p-4 mb-6`,children:[/*#__PURE__*/_jsx(\"h3\",{className:`text-base font-medium mb-2 ${darkMode?'text-indigo-300':'text-indigo-800'}`,children:\"Advanced Analytics\"}),/*#__PURE__*/_jsx(\"p\",{className:`text-sm ${darkMode?'text-indigo-200':'text-indigo-700'}`,children:\"This dashboard contains sample visualization data. In a production environment, these charts would be populated with real analytics data from your scan database. Contact your administrator for access to detailed reporting features.\"})]})]});};export default AnalyticsPage;","map":{"version":3,"names":["React","useState","useEffect","axios","Chart","ChartJS","CategoryScale","LinearScale","BarElement","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","RadialLinearScale","Bar","Line","Pie","Radar","useTheme","useAuth","ChartBarIcon","ArrowPathIcon","ExclamationCircleIcon","CalendarIcon","ClockIcon","jsx","_jsx","jsxs","_jsxs","register","AnalyticsPage","data","setData","scansByMonth","noduleLocationData","confidenceDistribution","scansByDoctor","noduleSize","dateRange","setDateRange","isLoading","setIsLoading","error","setError","darkMode","user","fetchAnalyticsData","resultsResponse","get","actualResults","mockData","generateMockAnalyticsData","length","console","resultCount","range","now","Date","monthsToShow","monthLabels","i","d","setMonth","getMonth","push","toLocaleString","month","year","baseScanCount","Math","max","floor","map","factor","totalScans","random","withNodules","location","count","confidenceRanges","doctorNames","selectedDoctors","sort","slice","doctor","scans","a","b","noduleSizeRanges","monthlyScansChartData","labels","item","datasets","label","backgroundColor","borderColor","borderWidth","monthlyTrendChartData","fill","tension","noduleLocationChartData","confidenceChartData","doctorScansChartData","noduleSizeChartData","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","color","font","size","tooltip","titleColor","bodyColor","scales","y","beginAtZero","ticks","precision","grid","x","pieChartOptions","padding","className","children","onClick","setTimeout","reduce","sum","options","indexAxis"],"sources":["C:/Users/kouss/Desktop/Cursor/Segmentation/pipeline/webapp/static/src/pages/AnalyticsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, PointElement, LineElement, Title, Tooltip, Legend, ArcElement, RadialLinearScale } from 'chart.js';\r\nimport { Bar, Line, Pie, Radar } from 'react-chartjs-2';\r\nimport { useTheme } from '../contexts/ThemeContext';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { ChartBarIcon, ArrowPathIcon, ExclamationCircleIcon, CalendarIcon, ClockIcon } from '@heroicons/react/24/outline';\r\n\r\n// Register ChartJS components\r\nChartJS.register(\r\n  CategoryScale, \r\n  LinearScale, \r\n  BarElement, \r\n  PointElement, \r\n  LineElement,\r\n  Title, \r\n  Tooltip, \r\n  Legend, \r\n  ArcElement,\r\n  RadialLinearScale\r\n);\r\n\r\nconst AnalyticsPage = () => {\r\n  const [data, setData] = useState({\r\n    scansByMonth: [],\r\n    noduleLocationData: [],\r\n    confidenceDistribution: [],\r\n    scansByDoctor: [],\r\n    noduleSize: []\r\n  });\r\n  const [dateRange, setDateRange] = useState('6months');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const { darkMode } = useTheme();\r\n  const { user } = useAuth();\r\n\r\n  // Mock data generation\r\n  useEffect(() => {\r\n    const fetchAnalyticsData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        \r\n        // In a real implementation, this would be an API call to fetch analytics data\r\n        // For now, we'll generate mock data that looks realistic\r\n        \r\n        // Fetch real scan results for reference\r\n        const resultsResponse = await axios.get('/api/results');\r\n        const actualResults = resultsResponse.data || [];\r\n        \r\n        // Generate realistic mock data based on the actual results count\r\n        const mockData = generateMockAnalyticsData(actualResults.length, dateRange);\r\n        setData(mockData);\r\n        \r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching analytics data:', error);\r\n        setError('Failed to load analytics data. Please try again later.');\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAnalyticsData();\r\n  }, [dateRange]);\r\n\r\n  // Generate mock data for visualization\r\n  const generateMockAnalyticsData = (resultCount, range) => {\r\n    // Define date ranges\r\n    const now = new Date();\r\n    let monthsToShow = 6;\r\n    \r\n    switch(range) {\r\n      case '3months':\r\n        monthsToShow = 3;\r\n        break;\r\n      case '12months':\r\n        monthsToShow = 12;\r\n        break;\r\n      default:\r\n        monthsToShow = 6;\r\n    }\r\n    \r\n    // Generate months labels\r\n    const monthLabels = [];\r\n    for (let i = monthsToShow - 1; i >= 0; i--) {\r\n      const d = new Date();\r\n      d.setMonth(now.getMonth() - i);\r\n      monthLabels.push(d.toLocaleString('default', { month: 'short', year: 'numeric' }));\r\n    }\r\n    \r\n    // Scans by month (with some randomization for realistic data)\r\n    const baseScanCount = Math.max(Math.floor(resultCount / monthsToShow), 1);\r\n    const scansByMonth = monthLabels.map((month, i) => {\r\n      // Make more recent months have slightly more scans for a realistic trend\r\n      const factor = 0.5 + ((i + 1) / monthsToShow) * 0.5;\r\n      return {\r\n        month,\r\n        totalScans: Math.floor(baseScanCount * factor * (0.8 + Math.random() * 0.4)),\r\n        withNodules: Math.floor(baseScanCount * factor * 0.6 * (0.7 + Math.random() * 0.5))\r\n      };\r\n    });\r\n    \r\n    // Nodule location data (distribution across lung areas)\r\n    const noduleLocationData = [\r\n      { location: 'Upper Right Lobe', count: Math.floor(10 + Math.random() * 20) },\r\n      { location: 'Middle Right Lobe', count: Math.floor(5 + Math.random() * 15) },\r\n      { location: 'Lower Right Lobe', count: Math.floor(15 + Math.random() * 25) },\r\n      { location: 'Upper Left Lobe', count: Math.floor(10 + Math.random() * 20) },\r\n      { location: 'Lower Left Lobe', count: Math.floor(15 + Math.random() * 25) },\r\n    ];\r\n    \r\n    // AI confidence distribution\r\n    const confidenceRanges = ['90-100%', '80-90%', '70-80%', '60-70%', '<60%'];\r\n    const confidenceDistribution = confidenceRanges.map(range => ({\r\n      range,\r\n      count: Math.floor(5 + Math.random() * 20)\r\n    }));\r\n    \r\n    // Scans by doctor (top 5)\r\n    const doctorNames = [\r\n      'Dr. Smith', 'Dr. Johnson', 'Dr. Williams', 'Dr. Brown', 'Dr. Jones', \r\n      'Dr. Garcia', 'Dr. Miller', 'Dr. Davis', 'Dr. Rodriguez', 'Dr. Martinez'\r\n    ];\r\n    \r\n    // Select 5 random doctors\r\n    const selectedDoctors = doctorNames.sort(() => 0.5 - Math.random()).slice(0, 5);\r\n    \r\n    const scansByDoctor = selectedDoctors.map(doctor => ({\r\n      doctor,\r\n      scans: Math.floor(5 + Math.random() * 20)\r\n    })).sort((a, b) => b.scans - a.scans);\r\n    \r\n    // Nodule size distribution\r\n    const noduleSizeRanges = ['<3mm', '3-6mm', '6-10mm', '10-15mm', '>15mm'];\r\n    const noduleSize = noduleSizeRanges.map(range => ({\r\n      range,\r\n      count: Math.floor(5 + Math.random() * 15)\r\n    }));\r\n    \r\n    return {\r\n      scansByMonth,\r\n      noduleLocationData,\r\n      confidenceDistribution,\r\n      scansByDoctor,\r\n      noduleSize\r\n    };\r\n  };\r\n\r\n  // Chart configuration and data preparation\r\n  const monthlyScansChartData = {\r\n    labels: data.scansByMonth.map(item => item.month),\r\n    datasets: [\r\n      {\r\n        label: 'Total Scans',\r\n        data: data.scansByMonth.map(item => item.totalScans),\r\n        backgroundColor: 'rgba(79, 70, 229, 0.6)',\r\n        borderColor: 'rgba(79, 70, 229, 1)',\r\n        borderWidth: 1,\r\n      },\r\n      {\r\n        label: 'Scans With Nodules',\r\n        data: data.scansByMonth.map(item => item.withNodules),\r\n        backgroundColor: 'rgba(236, 72, 153, 0.6)',\r\n        borderColor: 'rgba(236, 72, 153, 1)',\r\n        borderWidth: 1,\r\n      }\r\n    ],\r\n  };\r\n\r\n  const monthlyTrendChartData = {\r\n    labels: data.scansByMonth.map(item => item.month),\r\n    datasets: [\r\n      {\r\n        label: 'Total Scans',\r\n        data: data.scansByMonth.map(item => item.totalScans),\r\n        backgroundColor: 'rgba(79, 70, 229, 0.1)',\r\n        borderColor: 'rgba(79, 70, 229, 1)',\r\n        fill: true,\r\n        tension: 0.4,\r\n      },\r\n      {\r\n        label: 'Scans With Nodules',\r\n        data: data.scansByMonth.map(item => item.withNodules),\r\n        backgroundColor: 'rgba(236, 72, 153, 0.1)',\r\n        borderColor: 'rgba(236, 72, 153, 1)',\r\n        fill: true,\r\n        tension: 0.4,\r\n      }\r\n    ],\r\n  };\r\n\r\n  const noduleLocationChartData = {\r\n    labels: data.noduleLocationData.map(item => item.location),\r\n    datasets: [\r\n      {\r\n        label: 'Nodule Distribution by Location',\r\n        data: data.noduleLocationData.map(item => item.count),\r\n        backgroundColor: [\r\n          'rgba(79, 70, 229, 0.6)',\r\n          'rgba(16, 185, 129, 0.6)',\r\n          'rgba(245, 158, 11, 0.6)',\r\n          'rgba(236, 72, 153, 0.6)',\r\n          'rgba(99, 102, 241, 0.6)'\r\n        ],\r\n        borderColor: [\r\n          'rgba(79, 70, 229, 1)',\r\n          'rgba(16, 185, 129, 1)',\r\n          'rgba(245, 158, 11, 1)',\r\n          'rgba(236, 72, 153, 1)',\r\n          'rgba(99, 102, 241, 1)'\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const confidenceChartData = {\r\n    labels: data.confidenceDistribution.map(item => item.range),\r\n    datasets: [\r\n      {\r\n        label: 'AI Confidence Distribution',\r\n        data: data.confidenceDistribution.map(item => item.count),\r\n        backgroundColor: 'rgba(16, 185, 129, 0.6)',\r\n        borderColor: 'rgba(16, 185, 129, 1)',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const doctorScansChartData = {\r\n    labels: data.scansByDoctor.map(item => item.doctor),\r\n    datasets: [\r\n      {\r\n        label: 'Scans by Doctor',\r\n        data: data.scansByDoctor.map(item => item.scans),\r\n        backgroundColor: [\r\n          'rgba(79, 70, 229, 0.6)',\r\n          'rgba(16, 185, 129, 0.6)',\r\n          'rgba(245, 158, 11, 0.6)',\r\n          'rgba(236, 72, 153, 0.6)',\r\n          'rgba(99, 102, 241, 0.6)'\r\n        ],\r\n        borderColor: [\r\n          'rgba(79, 70, 229, 1)',\r\n          'rgba(16, 185, 129, 1)',\r\n          'rgba(245, 158, 11, 1)',\r\n          'rgba(236, 72, 153, 1)',\r\n          'rgba(99, 102, 241, 1)'\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const noduleSizeChartData = {\r\n    labels: data.noduleSize.map(item => item.range),\r\n    datasets: [\r\n      {\r\n        label: 'Nodule Size Distribution',\r\n        data: data.noduleSize.map(item => item.count),\r\n        backgroundColor: 'rgba(245, 158, 11, 0.6)',\r\n        borderColor: [\r\n          'rgba(245, 158, 11, 1)',\r\n          'rgba(245, 158, 11, 1)',\r\n          'rgba(245, 158, 11, 1)',\r\n          'rgba(245, 158, 11, 1)',\r\n          'rgba(245, 158, 11, 1)'\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n        labels: {\r\n          color: darkMode ? '#fff' : '#000',\r\n          font: {\r\n            size: 12\r\n          }\r\n        }\r\n      },\r\n      tooltip: {\r\n        backgroundColor: darkMode ? 'rgba(0, 0, 0, 0.8)' : 'rgba(255, 255, 255, 0.8)',\r\n        titleColor: darkMode ? '#fff' : '#000',\r\n        bodyColor: darkMode ? '#e5e7eb' : '#374151',\r\n        borderColor: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)',\r\n        borderWidth: 1\r\n      }\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        ticks: {\r\n          precision: 0,\r\n          color: darkMode ? '#e5e7eb' : '#374151',\r\n        },\r\n        grid: {\r\n          color: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)',\r\n        }\r\n      },\r\n      x: {\r\n        ticks: {\r\n          color: darkMode ? '#e5e7eb' : '#374151',\r\n        },\r\n        grid: {\r\n          color: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)',\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // Special options for pie chart\r\n  const pieChartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'right',\r\n        labels: {\r\n          color: darkMode ? '#fff' : '#000',\r\n          font: {\r\n            size: 12\r\n          },\r\n          padding: 20\r\n        }\r\n      },\r\n      tooltip: {\r\n        backgroundColor: darkMode ? 'rgba(0, 0, 0, 0.8)' : 'rgba(255, 255, 255, 0.8)',\r\n        titleColor: darkMode ? '#fff' : '#000',\r\n        bodyColor: darkMode ? '#e5e7eb' : '#374151',\r\n        borderColor: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)',\r\n        borderWidth: 1\r\n      }\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className={`text-center py-12 ${darkMode ? 'text-white' : ''}`}>\r\n        <div className=\"inline-block h-8 w-8 animate-spin rounded-full border-4 border-solid border-indigo-600 border-r-transparent\"></div>\r\n        <p className={`mt-4 ${darkMode ? 'text-gray-300' : 'text-gray-600'}`}>Loading analytics data...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className={`${darkMode ? 'bg-red-900' : 'bg-red-50'} p-4 rounded-md`}>\r\n        <div className=\"flex\">\r\n          <ExclamationCircleIcon className={`h-5 w-5 ${darkMode ? 'text-red-300' : 'text-red-400'}`} aria-hidden=\"true\" />\r\n          <div className=\"ml-3\">\r\n            <h3 className={`text-sm font-medium ${darkMode ? 'text-red-300' : 'text-red-800'}`}>{error}</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={darkMode ? 'text-white' : ''}>\r\n      <div className=\"mb-6\">\r\n        <h1 className={`text-2xl font-semibold ${darkMode ? 'text-white' : 'text-gray-900'}`}>\r\n          <ChartBarIcon className=\"h-7 w-7 inline-block mr-2 mb-1\" />\r\n          Analytics Dashboard\r\n        </h1>\r\n        <p className={`mt-1 text-sm ${darkMode ? 'text-gray-300' : 'text-gray-500'}`}>\r\n          Comprehensive data visualization for scan results and nodule detection statistics\r\n        </p>\r\n      </div>\r\n\r\n      {/* Date filter */}\r\n      <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} p-4 rounded-lg shadow-sm mb-6`}>\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center\">\r\n            <CalendarIcon className={`h-5 w-5 mr-2 ${darkMode ? 'text-gray-400' : 'text-gray-500'}`} />\r\n            <span className={`text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>\r\n              Time Period:\r\n            </span>\r\n          </div>\r\n          <div className=\"flex space-x-2\">\r\n            <button\r\n              onClick={() => setDateRange('3months')}\r\n              className={`px-3 py-1.5 text-sm font-medium rounded-md transition-colors ${\r\n                dateRange === '3months'\r\n                  ? darkMode\r\n                    ? 'bg-indigo-600 text-white'\r\n                    : 'bg-indigo-50 text-indigo-700'\r\n                  : darkMode\r\n                    ? 'bg-gray-700 text-gray-300 hover:bg-gray-600'\r\n                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n              }`}\r\n            >\r\n              Last 3 Months\r\n            </button>\r\n            <button\r\n              onClick={() => setDateRange('6months')}\r\n              className={`px-3 py-1.5 text-sm font-medium rounded-md transition-colors ${\r\n                dateRange === '6months'\r\n                  ? darkMode\r\n                    ? 'bg-indigo-600 text-white'\r\n                    : 'bg-indigo-50 text-indigo-700'\r\n                  : darkMode\r\n                    ? 'bg-gray-700 text-gray-300 hover:bg-gray-600'\r\n                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n              }`}\r\n            >\r\n              Last 6 Months\r\n            </button>\r\n            <button\r\n              onClick={() => setDateRange('12months')}\r\n              className={`px-3 py-1.5 text-sm font-medium rounded-md transition-colors ${\r\n                dateRange === '12months'\r\n                  ? darkMode\r\n                    ? 'bg-indigo-600 text-white'\r\n                    : 'bg-indigo-50 text-indigo-700'\r\n                  : darkMode\r\n                    ? 'bg-gray-700 text-gray-300 hover:bg-gray-600'\r\n                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n              }`}\r\n            >\r\n              Last 12 Months\r\n            </button>\r\n          </div>\r\n          <button\r\n            onClick={() => {\r\n              setIsLoading(true);\r\n              setTimeout(() => {\r\n                // Generate new mock data with the same date range\r\n                const mockData = generateMockAnalyticsData(data.scansByMonth.reduce((sum, item) => sum + item.totalScans, 0), dateRange);\r\n                setData(mockData);\r\n                setIsLoading(false);\r\n              }, 500);\r\n            }}\r\n            className={`flex items-center px-3 py-1.5 rounded-md text-sm font-medium ${\r\n              darkMode \r\n                ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' \r\n                : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n            }`}\r\n          >\r\n            <ArrowPathIcon className=\"h-4 w-4 mr-1\" />\r\n            Refresh\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Charts grid */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n        {/* Monthly scans chart */}\r\n        <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} p-4 rounded-lg shadow-sm`}>\r\n          <h2 className={`text-lg font-medium mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`}>\r\n            Monthly Scan Volume\r\n          </h2>\r\n          <div className=\"h-72\">\r\n            <Bar data={monthlyScansChartData} options={chartOptions} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Monthly trend chart */}\r\n        <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} p-4 rounded-lg shadow-sm`}>\r\n          <h2 className={`text-lg font-medium mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`}>\r\n            Scan Volume Trends\r\n          </h2>\r\n          <div className=\"h-72\">\r\n            <Line data={monthlyTrendChartData} options={chartOptions} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Nodule location chart */}\r\n        <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} p-4 rounded-lg shadow-sm`}>\r\n          <h2 className={`text-lg font-medium mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`}>\r\n            Nodule Location Distribution\r\n          </h2>\r\n          <div className=\"h-72\">\r\n            <Pie data={noduleLocationChartData} options={pieChartOptions} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* AI confidence distribution */}\r\n        <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} p-4 rounded-lg shadow-sm`}>\r\n          <h2 className={`text-lg font-medium mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`}>\r\n            AI Confidence Distribution\r\n          </h2>\r\n          <div className=\"h-72\">\r\n            <Bar data={confidenceChartData} options={chartOptions} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Scans by doctor */}\r\n        <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} p-4 rounded-lg shadow-sm`}>\r\n          <h2 className={`text-lg font-medium mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`}>\r\n            Top Doctors by Scan Volume\r\n          </h2>\r\n          <div className=\"h-72\">\r\n            <Bar \r\n              data={doctorScansChartData} \r\n              options={{\r\n                ...chartOptions,\r\n                indexAxis: 'y'\r\n              }} \r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Nodule size distribution */}\r\n        <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} p-4 rounded-lg shadow-sm`}>\r\n          <h2 className={`text-lg font-medium mb-4 ${darkMode ? 'text-white' : 'text-gray-900'}`}>\r\n            Nodule Size Distribution\r\n          </h2>\r\n          <div className=\"h-72\">\r\n            <Bar data={noduleSizeChartData} options={chartOptions} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Advanced analytics note */}\r\n      <div className={`${darkMode ? 'bg-indigo-900/30 border-indigo-800' : 'bg-indigo-50 border-indigo-100'} border rounded-lg p-4 mb-6`}>\r\n        <h3 className={`text-base font-medium mb-2 ${darkMode ? 'text-indigo-300' : 'text-indigo-800'}`}>\r\n          Advanced Analytics\r\n        </h3>\r\n        <p className={`text-sm ${darkMode ? 'text-indigo-200' : 'text-indigo-700'}`}>\r\n          This dashboard contains sample visualization data. In a production environment, these charts would be populated with real analytics data from your scan database. Contact your administrator for access to detailed reporting features.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnalyticsPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}