{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import axios from'axios';import{useDropzone}from'react-dropzone';import{CloudArrowUpIcon,ExclamationCircleIcon,InformationCircleIcon}from'@heroicons/react/24/outline';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UploadPage=()=>{const[files,setFiles]=useState([]);const[rawFile,setRawFile]=useState(null);const[confidence,setConfidence]=useState(0.5);const[lungsOnly,setLungsOnly]=useState(false);const[noSegmentation,setNoSegmentation]=useState(false);const[isUploading,setIsUploading]=useState(false);const[error,setError]=useState(null);const[progress,setProgress]=useState(0);const[showRawUpload,setShowRawUpload]=useState(false);const navigate=useNavigate();// Configure dropzone for CT scan files\nconst{getRootProps,getInputProps,isDragActive}=useDropzone({accept:{'application/octet-stream':['.mhd','.raw','.nii.gz','.nii'],'application/dicom':['.dcm']},multiple:true,// Allow multiple files to select both .mhd and .raw together\nonDrop:acceptedFiles=>{// Sort files to identify MHD and RAW files\nconst mhdFile=acceptedFiles.find(file=>file.name.toLowerCase().endsWith('.mhd'));const rawFile=acceptedFiles.find(file=>file.name.toLowerCase().endsWith('.raw'));if(mhdFile&&rawFile){// Both files uploaded together\nsetFiles([mhdFile]);setRawFile(rawFile);setShowRawUpload(false);setError(null);}else if(mhdFile){// Only MHD file uploaded\nsetFiles([mhdFile]);setShowRawUpload(true);setError(\"You've uploaded an MHD file. Please also upload the associated RAW file.\");}else if(rawFile){// Only RAW file uploaded\nsetRawFile(rawFile);setShowRawUpload(true);if(files.length===0||!files[0].name.toLowerCase().endsWith('.mhd')){setError(\"You've uploaded a RAW file. Please also upload the associated MHD file.\");}else{setError(null);}}else if(acceptedFiles.length>0){// Other valid file types (NIFTI, DICOM)\nsetFiles(acceptedFiles);setShowRawUpload(false);setError(null);}}});// Configure dropzone specifically for RAW files\nconst{getRootProps:getRawRootProps,getInputProps:getRawInputProps,isDragActive:isRawDragActive}=useDropzone({accept:{'application/octet-stream':['.raw']},multiple:false,onDrop:acceptedFiles=>{if(acceptedFiles.length>0){setRawFile(acceptedFiles[0]);setError(null);}}});const handleUpload=async()=>{if(files.length===0){setError('Please select a file to upload');return;}// If user selected an MHD file but no RAW file, show error\nif(files[0].name.toLowerCase().endsWith('.mhd')&&!rawFile){setError('Please upload the associated RAW file for your MHD file');return;}// Validate file sizes\nconst maxSizeInBytes=300*1024*1024;// 300MB\nif(files[0].size>maxSizeInBytes){setError(`File size exceeds the maximum limit of 300MB. Your file is ${(files[0].size/(1024*1024)).toFixed(2)}MB.`);return;}if(rawFile&&rawFile.size>maxSizeInBytes){setError(`RAW file size exceeds the maximum limit of 300MB. Your file is ${(rawFile.size/(1024*1024)).toFixed(2)}MB.`);return;}// Check file name patterns for MHD and RAW to ensure they match\nif(files[0].name.toLowerCase().endsWith('.mhd')&&rawFile){const mhdBaseName=files[0].name.toLowerCase().slice(0,-4);// Remove .mhd\nconst rawBaseName=rawFile.name.toLowerCase().slice(0,-4);// Remove .raw\nif(mhdBaseName!==rawBaseName&&!confirm(`The MHD file (${files[0].name}) and RAW file (${rawFile.name}) have different base names. Are you sure they belong together?`)){setError('Please make sure your MHD and RAW files have matching names');return;}}setIsUploading(true);setProgress(0);setError(null);const formData=new FormData();formData.append('file',files[0]);// Add RAW file if present\nif(rawFile){formData.append('raw_file',rawFile);}// Add processing options\nformData.append('confidence',confidence);formData.append('lungs_only',lungsOnly);formData.append('no_segmentation',noSegmentation);try{const response=await axios.post('/api/upload',formData,{headers:{'Content-Type':'multipart/form-data'},onUploadProgress:progressEvent=>{const percentCompleted=Math.round(progressEvent.loaded*100/progressEvent.total);setProgress(percentCompleted);}});if(response.data.success){// Navigate to results page for this scan\nnavigate(`/results/${response.data.job_id}`);}else{setError(response.data.error||'Unknown error occurred');setIsUploading(false);}}catch(error){console.error('Upload error:',error);// Provide more detailed error messages based on the error\nlet errorMessage='Error uploading file. Please try again.';if(error.response){// Server responded with an error\nconsole.error('Error response:',error.response.data);if(error.response.status===413){errorMessage='File too large. The maximum allowed size is 300MB.';}else if(error.response.data&&error.response.data.error){errorMessage=error.response.data.error;}else{errorMessage=`Server error (${error.response.status}). Please try again later.`;}}else if(error.request){// Request made but no response received\nerrorMessage='No response from server. Please check your network connection.';}setError(errorMessage);setIsUploading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-between items-center\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-semibold text-gray-900\",children:\"Upload CT Scan\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white shadow rounded-lg p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-blue-50 p-4 rounded-md mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(InformationCircleIcon,{className:\"h-5 w-5 text-blue-400\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-3 text-sm text-blue-700\",children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"File Formats:\"})}),/*#__PURE__*/_jsxs(\"ul\",{className:\"list-disc pl-5 mt-1\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"MetaImage (.mhd + .raw):\"}),\" Both files must be uploaded together\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"NIFTI (.nii.gz or .nii):\"}),\" Single file upload\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"DICOM (.dcm):\"}),\" Single file upload\"]})]})]})]})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:showRawUpload&&rawFile?\"MHD File\":\"CT Scan File\"}),/*#__PURE__*/_jsx(\"div\",{...getRootProps(),className:`mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-dashed rounded-md cursor-pointer ${isDragActive?'border-indigo-500 bg-indigo-50':'border-gray-300'}`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-1 text-center\",children:[/*#__PURE__*/_jsx(CloudArrowUpIcon,{className:\"mx-auto h-12 w-12 text-gray-400\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex text-sm text-gray-600\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"file-upload\",...getInputProps()}),/*#__PURE__*/_jsxs(\"p\",{className:\"pl-1\",children:[\"Drag and drop your CT scan file\",files.length===0&&rawFile?\" (MHD)\":\"\",\" here, or click to select\"]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500\",children:showRawUpload&&rawFile?\"Please upload the MHD file that matches your RAW file\":\"You can upload both MHD+RAW together by selecting both files\"})]})}),files.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500\",children:[\"Selected file: \",/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-indigo-600\",children:files[0].name}),\" (\",(files[0].size/(1024*1024)).toFixed(2),\" MB)\"]})})]}),(showRawUpload||files.length>0&&files[0].name.toLowerCase().endsWith('.mhd'))&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:[\"RAW File \",rawFile&&files.length===0?\"(Needs matching MHD file)\":\"(Required for MHD format)\"]}),/*#__PURE__*/_jsx(\"div\",{...getRawRootProps(),className:`mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-dashed rounded-md cursor-pointer ${isRawDragActive?'border-indigo-500 bg-indigo-50':'border-gray-300'}`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-1 text-center\",children:[/*#__PURE__*/_jsx(CloudArrowUpIcon,{className:\"mx-auto h-12 w-12 text-gray-400\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex text-sm text-gray-600\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"raw-file-upload\",...getRawInputProps()}),/*#__PURE__*/_jsx(\"p\",{className:\"pl-1\",children:\"Drag and drop the associated RAW file here, or click to select file\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500\",children:\"Required for MHD format\"})]})}),rawFile&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500\",children:[\"Selected RAW file: \",/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-indigo-600\",children:rawFile.name}),\" (\",(rawFile.size/(1024*1024)).toFixed(2),\" MB)\"]})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"Processing Options\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"confidence\",className:\"form-label\",children:[\"Confidence Threshold: \",confidence]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",id:\"confidence\",name:\"confidence\",min:\"0.1\",max:\"0.9\",step:\"0.1\",value:confidence,onChange:e=>setConfidence(parseFloat(e.target.value)),className:\"mt-1 w-full\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-gray-500\",children:\"Higher values are more selective (fewer false positives, might miss subtle nodules). Lower values detect more potential nodules (more false positives).\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center h-5\",children:/*#__PURE__*/_jsx(\"input\",{id:\"lungs-only\",name:\"lungs-only\",type:\"checkbox\",checked:lungsOnly,onChange:e=>setLungsOnly(e.target.checked),className:\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-3 text-sm\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"lungs-only\",className:\"font-medium text-gray-700\",children:\"Lungs Segmentation Only\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:\"Only perform lung segmentation without nodule detection\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center h-5\",children:/*#__PURE__*/_jsx(\"input\",{id:\"no-segmentation\",name:\"no-segmentation\",type:\"checkbox\",checked:noSegmentation,onChange:e=>setNoSegmentation(e.target.checked),className:\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-3 text-sm\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"no-segmentation\",className:\"font-medium text-gray-700\",children:\"Skip Nodule Segmentation\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:\"Detect nodules but skip the detailed segmentation step\"})]})]})]})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"rounded-md bg-red-50 p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(ExclamationCircleIcon,{className:\"h-5 w-5 text-red-400\"}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-3\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-medium text-red-800\",children:error})})]})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleUpload,disabled:isUploading||files.length===0&&!rawFile||files.length>0&&files[0].name.toLowerCase().endsWith('.mhd')&&!rawFile,className:`w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white ${isUploading||files.length===0&&!rawFile||files.length>0&&files[0].name.toLowerCase().endsWith('.mhd')&&!rawFile?'bg-indigo-300 cursor-not-allowed':'bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'}`,children:isUploading?'Processing...':'Upload and Process'}),isUploading&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"relative pt-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-center mb-1\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs font-semibold inline-block text-indigo-600\",children:[progress,\"% Complete\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-hidden h-2 mb-4 text-xs flex rounded bg-indigo-200\",children:/*#__PURE__*/_jsx(\"div\",{style:{width:`${progress}%`},className:\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-indigo-600\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 text-center\",children:\"Please wait while we process your CT scan. This may take several minutes.\"})]})})]})]})})]});};export default UploadPage;","map":{"version":3,"names":["React","useState","useNavigate","axios","useDropzone","CloudArrowUpIcon","ExclamationCircleIcon","InformationCircleIcon","jsx","_jsx","jsxs","_jsxs","UploadPage","files","setFiles","rawFile","setRawFile","confidence","setConfidence","lungsOnly","setLungsOnly","noSegmentation","setNoSegmentation","isUploading","setIsUploading","error","setError","progress","setProgress","showRawUpload","setShowRawUpload","navigate","getRootProps","getInputProps","isDragActive","accept","multiple","onDrop","acceptedFiles","mhdFile","find","file","name","toLowerCase","endsWith","length","getRawRootProps","getRawInputProps","isRawDragActive","handleUpload","maxSizeInBytes","size","toFixed","mhdBaseName","slice","rawBaseName","confirm","formData","FormData","append","response","post","headers","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","data","success","job_id","console","errorMessage","status","request","className","children","id","htmlFor","type","min","max","step","value","onChange","e","parseFloat","target","checked","onClick","disabled","style","width"],"sources":["D:/Segmentation/pipeline/webapp/static/src/pages/UploadPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { CloudArrowUpIcon, ExclamationCircleIcon, InformationCircleIcon } from '@heroicons/react/24/outline';\r\n\r\nconst UploadPage = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [rawFile, setRawFile] = useState(null);\r\n  const [confidence, setConfidence] = useState(0.5);\r\n  const [lungsOnly, setLungsOnly] = useState(false);\r\n  const [noSegmentation, setNoSegmentation] = useState(false);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const [showRawUpload, setShowRawUpload] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // Configure dropzone for CT scan files\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    accept: {\r\n      'application/octet-stream': ['.mhd', '.raw', '.nii.gz', '.nii'],\r\n      'application/dicom': ['.dcm'],\r\n    },\r\n    multiple: true, // Allow multiple files to select both .mhd and .raw together\r\n    onDrop: (acceptedFiles) => {\r\n      // Sort files to identify MHD and RAW files\r\n      const mhdFile = acceptedFiles.find(file => file.name.toLowerCase().endsWith('.mhd'));\r\n      const rawFile = acceptedFiles.find(file => file.name.toLowerCase().endsWith('.raw'));\r\n      \r\n      if (mhdFile && rawFile) {\r\n        // Both files uploaded together\r\n        setFiles([mhdFile]);\r\n        setRawFile(rawFile);\r\n        setShowRawUpload(false);\r\n        setError(null);\r\n      } else if (mhdFile) {\r\n        // Only MHD file uploaded\r\n        setFiles([mhdFile]);\r\n        setShowRawUpload(true);\r\n        setError(\"You've uploaded an MHD file. Please also upload the associated RAW file.\");\r\n      } else if (rawFile) {\r\n        // Only RAW file uploaded\r\n        setRawFile(rawFile);\r\n        setShowRawUpload(true);\r\n        if (files.length === 0 || !files[0].name.toLowerCase().endsWith('.mhd')) {\r\n          setError(\"You've uploaded a RAW file. Please also upload the associated MHD file.\");\r\n        } else {\r\n          setError(null);\r\n        }\r\n      } else if (acceptedFiles.length > 0) {\r\n        // Other valid file types (NIFTI, DICOM)\r\n        setFiles(acceptedFiles);\r\n        setShowRawUpload(false);\r\n        setError(null);\r\n      }\r\n    },\r\n  });\r\n\r\n  // Configure dropzone specifically for RAW files\r\n  const { getRootProps: getRawRootProps, getInputProps: getRawInputProps, isDragActive: isRawDragActive } = useDropzone({\r\n    accept: {\r\n      'application/octet-stream': ['.raw'],\r\n    },\r\n    multiple: false,\r\n    onDrop: (acceptedFiles) => {\r\n      if (acceptedFiles.length > 0) {\r\n        setRawFile(acceptedFiles[0]);\r\n        setError(null);\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleUpload = async () => {\r\n    if (files.length === 0) {\r\n      setError('Please select a file to upload');\r\n      return;\r\n    }\r\n\r\n    // If user selected an MHD file but no RAW file, show error\r\n    if (files[0].name.toLowerCase().endsWith('.mhd') && !rawFile) {\r\n      setError('Please upload the associated RAW file for your MHD file');\r\n      return;\r\n    }\r\n\r\n    // Validate file sizes\r\n    const maxSizeInBytes = 300 * 1024 * 1024; // 300MB\r\n    if (files[0].size > maxSizeInBytes) {\r\n      setError(`File size exceeds the maximum limit of 300MB. Your file is ${(files[0].size / (1024 * 1024)).toFixed(2)}MB.`);\r\n      return;\r\n    }\r\n    \r\n    if (rawFile && rawFile.size > maxSizeInBytes) {\r\n      setError(`RAW file size exceeds the maximum limit of 300MB. Your file is ${(rawFile.size / (1024 * 1024)).toFixed(2)}MB.`);\r\n      return;\r\n    }\r\n\r\n    // Check file name patterns for MHD and RAW to ensure they match\r\n    if (files[0].name.toLowerCase().endsWith('.mhd') && rawFile) {\r\n      const mhdBaseName = files[0].name.toLowerCase().slice(0, -4); // Remove .mhd\r\n      const rawBaseName = rawFile.name.toLowerCase().slice(0, -4);  // Remove .raw\r\n      \r\n      if (mhdBaseName !== rawBaseName && !confirm(`The MHD file (${files[0].name}) and RAW file (${rawFile.name}) have different base names. Are you sure they belong together?`)) {\r\n        setError('Please make sure your MHD and RAW files have matching names');\r\n        return;\r\n      }\r\n    }\r\n\r\n    setIsUploading(true);\r\n    setProgress(0);\r\n    setError(null);\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', files[0]);\r\n    \r\n    // Add RAW file if present\r\n    if (rawFile) {\r\n      formData.append('raw_file', rawFile);\r\n    }\r\n    \r\n    // Add processing options\r\n    formData.append('confidence', confidence);\r\n    formData.append('lungs_only', lungsOnly);\r\n    formData.append('no_segmentation', noSegmentation);\r\n\r\n    try {\r\n      const response = await axios.post('/api/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setProgress(percentCompleted);\r\n        },\r\n      });\r\n\r\n      if (response.data.success) {\r\n        // Navigate to results page for this scan\r\n        navigate(`/results/${response.data.job_id}`);\r\n      } else {\r\n        setError(response.data.error || 'Unknown error occurred');\r\n        setIsUploading(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Upload error:', error);\r\n      \r\n      // Provide more detailed error messages based on the error\r\n      let errorMessage = 'Error uploading file. Please try again.';\r\n      \r\n      if (error.response) {\r\n        // Server responded with an error\r\n        console.error('Error response:', error.response.data);\r\n        if (error.response.status === 413) {\r\n          errorMessage = 'File too large. The maximum allowed size is 300MB.';\r\n        } else if (error.response.data && error.response.data.error) {\r\n          errorMessage = error.response.data.error;\r\n        } else {\r\n          errorMessage = `Server error (${error.response.status}). Please try again later.`;\r\n        }\r\n      } else if (error.request) {\r\n        // Request made but no response received\r\n        errorMessage = 'No response from server. Please check your network connection.';\r\n      }\r\n      \r\n      setError(errorMessage);\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h1 className=\"text-2xl font-semibold text-gray-900\">Upload CT Scan</h1>\r\n      </div>\r\n\r\n      <div className=\"bg-white shadow rounded-lg p-6\">\r\n        <div className=\"space-y-6\">\r\n          {/* MHD/NIFTI/DICOM file info box */}\r\n          <div className=\"bg-blue-50 p-4 rounded-md mb-4\">\r\n            <div className=\"flex\">\r\n              <InformationCircleIcon className=\"h-5 w-5 text-blue-400\" />\r\n              <div className=\"ml-3 text-sm text-blue-700\">\r\n                <p><strong>File Formats:</strong></p>\r\n                <ul className=\"list-disc pl-5 mt-1\">\r\n                  <li><strong>MetaImage (.mhd + .raw):</strong> Both files must be uploaded together</li>\r\n                  <li><strong>NIFTI (.nii.gz or .nii):</strong> Single file upload</li>\r\n                  <li><strong>DICOM (.dcm):</strong> Single file upload</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Main file dropzone */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              {showRawUpload && rawFile ? \"MHD File\" : \"CT Scan File\"}\r\n            </label>\r\n            <div\r\n              {...getRootProps()}\r\n              className={`mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-dashed rounded-md cursor-pointer ${\r\n                isDragActive ? 'border-indigo-500 bg-indigo-50' : 'border-gray-300'\r\n              }`}\r\n            >\r\n              <div className=\"space-y-1 text-center\">\r\n                <CloudArrowUpIcon className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n                <div className=\"flex text-sm text-gray-600\">\r\n                  <input id=\"file-upload\" {...getInputProps()} />\r\n                  <p className=\"pl-1\">\r\n                    Drag and drop your CT scan file{files.length === 0 && rawFile ? \" (MHD)\" : \"\"} here, or click to select\r\n                  </p>\r\n                </div>\r\n                <p className=\"text-xs text-gray-500\">\r\n                  {showRawUpload && rawFile \r\n                    ? \"Please upload the MHD file that matches your RAW file\" \r\n                    : \"You can upload both MHD+RAW together by selecting both files\"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            {files.length > 0 && (\r\n              <div className=\"mt-2\">\r\n                <p className=\"text-sm text-gray-500\">\r\n                  Selected file: <span className=\"font-medium text-indigo-600\">{files[0].name}</span> ({(files[0].size / (1024 * 1024)).toFixed(2)} MB)\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* RAW file dropzone (shown when MHD file is selected or when we want to show both) */}\r\n          {(showRawUpload || (files.length > 0 && files[0].name.toLowerCase().endsWith('.mhd'))) && (\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                RAW File {rawFile && files.length === 0 ? \"(Needs matching MHD file)\" : \"(Required for MHD format)\"}\r\n              </label>\r\n              <div\r\n                {...getRawRootProps()}\r\n                className={`mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-dashed rounded-md cursor-pointer ${\r\n                  isRawDragActive ? 'border-indigo-500 bg-indigo-50' : 'border-gray-300'\r\n                }`}\r\n              >\r\n                <div className=\"space-y-1 text-center\">\r\n                  <CloudArrowUpIcon className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n                  <div className=\"flex text-sm text-gray-600\">\r\n                    <input id=\"raw-file-upload\" {...getRawInputProps()} />\r\n                    <p className=\"pl-1\">\r\n                      Drag and drop the associated RAW file here, or click to select file\r\n                    </p>\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500\">Required for MHD format</p>\r\n                </div>\r\n              </div>\r\n              {rawFile && (\r\n                <div className=\"mt-2\">\r\n                  <p className=\"text-sm text-gray-500\">\r\n                    Selected RAW file: <span className=\"font-medium text-indigo-600\">{rawFile.name}</span> ({(rawFile.size / (1024 * 1024)).toFixed(2)} MB)\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {/* Processing options */}\r\n          <div>\r\n            <h3 className=\"text-lg font-medium text-gray-900\">Processing Options</h3>\r\n            <div className=\"mt-4 space-y-4\">\r\n              <div>\r\n                <label htmlFor=\"confidence\" className=\"form-label\">\r\n                  Confidence Threshold: {confidence}\r\n                </label>\r\n                <input\r\n                  type=\"range\"\r\n                  id=\"confidence\"\r\n                  name=\"confidence\"\r\n                  min=\"0.1\"\r\n                  max=\"0.9\"\r\n                  step=\"0.1\"\r\n                  value={confidence}\r\n                  onChange={(e) => setConfidence(parseFloat(e.target.value))}\r\n                  className=\"mt-1 w-full\"\r\n                />\r\n                <p className=\"mt-1 text-sm text-gray-500\">\r\n                  Higher values are more selective (fewer false positives, might miss subtle nodules).\r\n                  Lower values detect more potential nodules (more false positives).\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"flex items-start\">\r\n                <div className=\"flex items-center h-5\">\r\n                  <input\r\n                    id=\"lungs-only\"\r\n                    name=\"lungs-only\"\r\n                    type=\"checkbox\"\r\n                    checked={lungsOnly}\r\n                    onChange={(e) => setLungsOnly(e.target.checked)}\r\n                    className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\r\n                  />\r\n                </div>\r\n                <div className=\"ml-3 text-sm\">\r\n                  <label htmlFor=\"lungs-only\" className=\"font-medium text-gray-700\">\r\n                    Lungs Segmentation Only\r\n                  </label>\r\n                  <p className=\"text-gray-500\">\r\n                    Only perform lung segmentation without nodule detection\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-start\">\r\n                <div className=\"flex items-center h-5\">\r\n                  <input\r\n                    id=\"no-segmentation\"\r\n                    name=\"no-segmentation\"\r\n                    type=\"checkbox\"\r\n                    checked={noSegmentation}\r\n                    onChange={(e) => setNoSegmentation(e.target.checked)}\r\n                    className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\r\n                  />\r\n                </div>\r\n                <div className=\"ml-3 text-sm\">\r\n                  <label htmlFor=\"no-segmentation\" className=\"font-medium text-gray-700\">\r\n                    Skip Nodule Segmentation\r\n                  </label>\r\n                  <p className=\"text-gray-500\">\r\n                    Detect nodules but skip the detailed segmentation step\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Error message */}\r\n          {error && (\r\n            <div className=\"rounded-md bg-red-50 p-4\">\r\n              <div className=\"flex\">\r\n                <ExclamationCircleIcon className=\"h-5 w-5 text-red-400\" />\r\n                <div className=\"ml-3\">\r\n                  <h3 className=\"text-sm font-medium text-red-800\">{error}</h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Upload button and progress */}\r\n          <div>\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleUpload}\r\n              disabled={isUploading || (files.length === 0 && !rawFile) || (files.length > 0 && files[0].name.toLowerCase().endsWith('.mhd') && !rawFile)}\r\n              className={`w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white ${\r\n                isUploading || (files.length === 0 && !rawFile) || (files.length > 0 && files[0].name.toLowerCase().endsWith('.mhd') && !rawFile)\r\n                  ? 'bg-indigo-300 cursor-not-allowed'\r\n                  : 'bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\r\n              }`}\r\n            >\r\n              {isUploading ? 'Processing...' : 'Upload and Process'}\r\n            </button>\r\n            \r\n            {isUploading && (\r\n              <div className=\"mt-4\">\r\n                <div className=\"relative pt-1\">\r\n                  <div className=\"text-center mb-1\">\r\n                    <span className=\"text-xs font-semibold inline-block text-indigo-600\">\r\n                      {progress}% Complete\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"overflow-hidden h-2 mb-4 text-xs flex rounded bg-indigo-200\">\r\n                    <div\r\n                      style={{ width: `${progress}%` }}\r\n                      className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-indigo-600\"\r\n                    ></div>\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500 text-center\">\r\n                    Please wait while we process your CT scan. This may take several minutes.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}