{"ast":null,"code":"var _jsxFileName = \"D:\\\\Segmentation\\\\pipeline\\\\webapp\\\\static\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Create auth context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// Role hierarchy definition\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ROLES = {\n  SUPERADMIN: 'superadmin',\n  ADMIN: 'admin',\n  DOCTOR: 'doctor'\n};\n\n// Role permissions check helpers\nexport const canManageAdmins = role => role === ROLES.SUPERADMIN;\nexport const canManageDoctors = role => [ROLES.SUPERADMIN, ROLES.ADMIN].includes(role);\nexport const canAccessAdminArea = role => [ROLES.SUPERADMIN, ROLES.ADMIN].includes(role);\n\n// Auth provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Initialize auth state from local storage\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    if (token && userData) {\n      setUser(JSON.parse(userData));\n      setIsAuthenticated(true);\n\n      // Set the authorization header for all requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    }\n    setIsLoading(false);\n  }, []);\n\n  // Login function\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', {\n        username,\n        password\n      });\n      const {\n        access_token,\n        username: user,\n        role\n      } = response.data;\n\n      // Build user object with all available data\n      const userObject = {\n        username,\n        role,\n        // Include any other fields from the response\n        firstName: response.data.first_name || '',\n        lastName: response.data.last_name || '',\n        email: response.data.email || ''\n      };\n\n      // Store token and user data\n      localStorage.setItem('token', access_token);\n      localStorage.setItem('user', JSON.stringify(userObject));\n\n      // Set the authorization header for all requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n\n      // Update state\n      setUser(userObject);\n      setIsAuthenticated(true);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.msg) || 'Login failed. Please check your credentials.'\n      };\n    }\n  };\n\n  // Function to update the user context after profile changes\n  const updateUserContext = updatedFields => {\n    if (!user) return false;\n    try {\n      // Get current user data\n      const userData = JSON.parse(localStorage.getItem('user') || '{}');\n\n      // Update with new fields\n      const updatedUser = {\n        ...userData,\n        ...updatedFields\n      };\n\n      // Save to localStorage\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n\n      // Update state\n      setUser(updatedUser);\n      return true;\n    } catch (error) {\n      console.error(\"Error updating user context:\", error);\n      return false;\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    // Remove token and user data\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    // Remove the authorization header\n    delete axios.defaults.headers.common['Authorization'];\n\n    // Update state\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Check if user has specific role\n  const hasRole = requiredRole => {\n    if (!user) return false;\n\n    // If required role is an array, check if user has any of the roles\n    if (Array.isArray(requiredRole)) {\n      return requiredRole.includes(user.role);\n    }\n\n    // Otherwise check for specific role\n    return user.role === requiredRole;\n  };\n\n  // Value to be provided to consumers\n  const value = {\n    user,\n    isAuthenticated,\n    isLoading,\n    login,\n    logout,\n    updateUserContext,\n    hasRole,\n    canManageAdmins: user ? canManageAdmins(user.role) : false,\n    canManageDoctors: user ? canManageDoctors(user.role) : false,\n    canAccessAdminArea: user ? canAccessAdminArea(user.role) : false\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !isLoading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"v1LRzRO747hYRtRdhUIJv9BiM4M=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","ROLES","SUPERADMIN","ADMIN","DOCTOR","canManageAdmins","role","canManageDoctors","includes","canAccessAdminArea","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","token","localStorage","getItem","userData","JSON","parse","defaults","headers","common","login","username","password","response","post","access_token","data","userObject","firstName","first_name","lastName","last_name","email","setItem","stringify","success","error","_error$response","_error$response$data","message","msg","updateUserContext","updatedFields","updatedUser","console","logout","removeItem","hasRole","requiredRole","Array","isArray","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Segmentation/pipeline/webapp/static/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Create auth context\r\nconst AuthContext = createContext();\r\n\r\n// Custom hook to use the auth context\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n// Role hierarchy definition\r\nexport const ROLES = {\r\n  SUPERADMIN: 'superadmin',\r\n  ADMIN: 'admin',\r\n  DOCTOR: 'doctor'\r\n};\r\n\r\n// Role permissions check helpers\r\nexport const canManageAdmins = (role) => role === ROLES.SUPERADMIN;\r\nexport const canManageDoctors = (role) => [ROLES.SUPERADMIN, ROLES.ADMIN].includes(role);\r\nexport const canAccessAdminArea = (role) => [ROLES.SUPERADMIN, ROLES.ADMIN].includes(role);\r\n\r\n// Auth provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Initialize auth state from local storage\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const userData = localStorage.getItem('user');\r\n    \r\n    if (token && userData) {\r\n      setUser(JSON.parse(userData));\r\n      setIsAuthenticated(true);\r\n      \r\n      // Set the authorization header for all requests\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    \r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (username, password) => {\r\n    try {\r\n      const response = await axios.post('/api/auth/login', { username, password });\r\n      const { access_token, username: user, role } = response.data;\r\n      \r\n      // Build user object with all available data\r\n      const userObject = {\r\n        username,\r\n        role,\r\n        // Include any other fields from the response\r\n        firstName: response.data.first_name || '',\r\n        lastName: response.data.last_name || '',\r\n        email: response.data.email || ''\r\n      };\r\n      \r\n      // Store token and user data\r\n      localStorage.setItem('token', access_token);\r\n      localStorage.setItem('user', JSON.stringify(userObject));\r\n      \r\n      // Set the authorization header for all requests\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\r\n      \r\n      // Update state\r\n      setUser(userObject);\r\n      setIsAuthenticated(true);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.response?.data?.msg || 'Login failed. Please check your credentials.'\r\n      };\r\n    }\r\n  };\r\n\r\n  // Function to update the user context after profile changes\r\n  const updateUserContext = (updatedFields) => {\r\n    if (!user) return false;\r\n    \r\n    try {\r\n      // Get current user data\r\n      const userData = JSON.parse(localStorage.getItem('user') || '{}');\r\n      \r\n      // Update with new fields\r\n      const updatedUser = {\r\n        ...userData,\r\n        ...updatedFields\r\n      };\r\n      \r\n      // Save to localStorage\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      \r\n      // Update state\r\n      setUser(updatedUser);\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"Error updating user context:\", error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    // Remove token and user data\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    \r\n    // Remove the authorization header\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    \r\n    // Update state\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  // Check if user has specific role\r\n  const hasRole = (requiredRole) => {\r\n    if (!user) return false;\r\n    \r\n    // If required role is an array, check if user has any of the roles\r\n    if (Array.isArray(requiredRole)) {\r\n      return requiredRole.includes(user.role);\r\n    }\r\n    \r\n    // Otherwise check for specific role\r\n    return user.role === requiredRole;\r\n  };\r\n\r\n  // Value to be provided to consumers\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    isLoading,\r\n    login,\r\n    logout,\r\n    updateUserContext,\r\n    hasRole,\r\n    canManageAdmins: user ? canManageAdmins(user.role) : false,\r\n    canManageDoctors: user ? canManageDoctors(user.role) : false,\r\n    canAccessAdminArea: user ? canAccessAdminArea(user.role) : false\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!isLoading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}