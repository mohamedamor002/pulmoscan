{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{useNavigate,useLocation}from'react-router-dom';import axios from'axios';import{useDropzone}from'react-dropzone';import{CloudArrowUpIcon,ExclamationCircleIcon,InformationCircleIcon,CheckCircleIcon,XCircleIcon,ViewfinderCircleIcon,XMarkIcon}from'@heroicons/react/24/outline';import{useTheme}from'../contexts/ThemeContext';import InteractiveViewer from'../components/InteractiveViewer';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const UploadPage=()=>{const[files,setFiles]=useState([]);const[rawFile,setRawFile]=useState(null);const[confidence,setConfidence]=useState(0.5);const[isUploading,setIsUploading]=useState(false);const[isProcessing,setIsProcessing]=useState(false);const[error,setError]=useState(null);const[uploadProgress,setUploadProgress]=useState(0);const[processingProgress,setProcessingProgress]=useState(0);const[showRawUpload,setShowRawUpload]=useState(false);const[previewResult,setPreviewResult]=useState(null);const[showPreview,setShowPreview]=useState(false);const[selectedNoduleId,setSelectedNoduleId]=useState(null);const[showLeaveConfirmation,setShowLeaveConfirmation]=useState(false);const[showPatientForm,setShowPatientForm]=useState(false);const[patientInfo,setPatientInfo]=useState({name:'',age:'',description:''});const[isNavigating,setIsNavigating]=useState(false);const[pendingNavigation,setPendingNavigation]=useState(null);const[uploadMode,setUploadMode]=useState('single');// 'single' or 'dicom-volume'\nconst[dicomFiles,setDicomFiles]=useState([]);const navigate=useNavigate();const location=useLocation();const{darkMode}=useTheme();// Track current location to detect changes\nconst[prevLocation,setPrevLocation]=useState(null);// Add processingMessage to state variables\nconst[processingMessage,setProcessingMessage]=useState(null);// Handle location changes to detect navigation attempts\nuseEffect(()=>{// Skip on first render\nif(prevLocation===null){setPrevLocation(location);return;}// If the location has changed and we haven't explicitly allowed navigation\nif(location!==prevLocation&&!isNavigating&&showPreview&&previewResult){// Block navigation by going back to previous location\n// This happens synchronously, before the confirmation dialog\nnavigate(-1);// Show confirmation dialog\nsetShowLeaveConfirmation(true);setPendingNavigation(location.pathname+location.search);return;}// Update the previous location\nsetPrevLocation(location);},[location,prevLocation,isNavigating,showPreview,previewResult,navigate]);// Browser back/refresh confirmation\nuseEffect(()=>{const handleBeforeUnload=e=>{if(showPreview&&previewResult){e.preventDefault();e.returnValue='';return'';}};window.addEventListener('beforeunload',handleBeforeUnload);return()=>{window.removeEventListener('beforeunload',handleBeforeUnload);};},[showPreview,previewResult]);// Custom navigation function (can be used for in-app links that need confirmation)\nconst customNavigate=to=>{if(showPreview&&previewResult){// Store pending navigation and show confirmation\nsetPendingNavigation(to);setShowLeaveConfirmation(true);}else{// If no unsaved changes, navigate directly\nnavigate(to);}};// Configure dropzone for CT scan files\nconst{getRootProps,getInputProps,isDragActive}=useDropzone({accept:{'application/octet-stream':['.mhd','.raw','.nii.gz','.nii'],'application/dicom':['.dcm']},multiple:true,// Allow multiple files to select both .mhd and .raw together\nonDrop:acceptedFiles=>{// Reset preview state when new files are dropped\nsetPreviewResult(null);setShowPreview(false);// Sort files to identify MHD and RAW files\nconst mhdFile=acceptedFiles.find(file=>file.name.toLowerCase().endsWith('.mhd'));const rawFile=acceptedFiles.find(file=>file.name.toLowerCase().endsWith('.raw'));if(mhdFile&&rawFile){// Both files uploaded together\nsetFiles([mhdFile]);setRawFile(rawFile);setShowRawUpload(false);setError(null);}else if(mhdFile){// Only MHD file uploaded\nsetFiles([mhdFile]);setShowRawUpload(true);setError(\"You've uploaded an MHD file. Please also upload the associated RAW file.\");}else if(rawFile){// Only RAW file uploaded\nsetRawFile(rawFile);setShowRawUpload(true);if(files.length===0||!files[0].name.toLowerCase().endsWith('.mhd')){setError(\"You've uploaded a RAW file. Please also upload the associated MHD file.\");}else{setError(null);}}else if(acceptedFiles.length>0){// Other valid file types (NIFTI, DICOM)\nsetFiles(acceptedFiles);setShowRawUpload(false);setError(null);}}});// Configure dropzone specifically for RAW files\nconst{getRootProps:getRawRootProps,getInputProps:getRawInputProps,isDragActive:isRawDragActive}=useDropzone({accept:{'application/octet-stream':['.raw']},multiple:false,onDrop:acceptedFiles=>{if(acceptedFiles.length>0){setRawFile(acceptedFiles[0]);setError(null);}}});// Configure dropzone for DICOM series upload\nconst{getRootProps:getDicomVolumeRootProps,getInputProps:getDicomVolumeInputProps,isDragActive:isDicomVolumeDragActive}=useDropzone({accept:{'application/dicom':['.dcm'],'application/zip':['.zip']},multiple:true,onDrop:acceptedFiles=>{// Reset preview state when new files are dropped\nsetPreviewResult(null);setShowPreview(false);// Check if there's a single zip file\nconst zipFile=acceptedFiles.find(file=>file.name.toLowerCase().endsWith('.zip'));if(zipFile){setDicomFiles([zipFile]);setError(null);return;}// Filter only DICOM files\nconst dicomFilesOnly=acceptedFiles.filter(file=>file.name.toLowerCase().endsWith('.dcm'));if(dicomFilesOnly.length===0){setError(\"Please upload DICOM (.dcm) files or a ZIP file containing DICOM files.\");return;}if(dicomFilesOnly.length<3){setError(\"Please upload at least 3 DICOM slices to create a 3D volume.\");return;}setDicomFiles(dicomFilesOnly);setError(null);}});const handleUpload=async()=>{if(files.length===0){setError('Please select a file to upload');return;}// If user selected an MHD file but no RAW file, show error\nif(files[0].name.toLowerCase().endsWith('.mhd')&&!rawFile){setError('Please upload the associated RAW file for your MHD file');return;}// Validate file sizes\nconst maxSizeInBytes=300*1024*1024;// 300MB\nif(files[0].size>maxSizeInBytes){setError(`File size exceeds the maximum limit of 300MB. Your file is ${(files[0].size/(1024*1024)).toFixed(2)}MB.`);return;}if(rawFile&&rawFile.size>maxSizeInBytes){setError(`RAW file size exceeds the maximum limit of 300MB. Your file is ${(rawFile.size/(1024*1024)).toFixed(2)}MB.`);return;}// Check file name patterns for MHD and RAW to ensure they match\nif(files[0].name.toLowerCase().endsWith('.mhd')&&rawFile){const mhdBaseName=files[0].name.toLowerCase().slice(0,-4);// Remove .mhd\nconst rawBaseName=rawFile.name.toLowerCase().slice(0,-4);// Remove .raw\nif(mhdBaseName!==rawBaseName&&!window.confirm(`The MHD file (${files[0].name}) and RAW file (${rawFile.name}) have different base names. Are you sure they belong together?`)){setError('Please make sure your MHD and RAW files have matching names');return;}}setIsUploading(true);setUploadProgress(0);setProcessingProgress(0);setError(null);const formData=new FormData();formData.append('file',files[0]);// Add RAW file if present\nif(rawFile){formData.append('raw_file',rawFile);}// Ensure confidence value is a string with proper format\nconst confidenceValue=confidence.toString();console.log(\"Uploading with confidence value:\",confidenceValue);formData.append('confidence',confidenceValue);// Debug the form data being sent\nfor(let pair of formData.entries()){console.log(pair[0]+': '+pair[1]);}// Always set no_segmentation to true to disable nodule segmentation completely\nformData.append('lungs_only','false');formData.append('no_segmentation','true');try{// Upload phase\nconst response=await axios.post('/api/upload',formData,{headers:{'Content-Type':'multipart/form-data'},onUploadProgress:progressEvent=>{const percentCompleted=Math.round(progressEvent.loaded*100/progressEvent.total);setUploadProgress(percentCompleted);// When upload is complete (100%), start the processing progress simulation\nif(percentCompleted===100){setIsUploading(false);setIsProcessing(true);// Simulate processing progress\n// This is just a visual indicator since we don't have real-time backend progress updates\nlet currentProgress=0;const processingInterval=setInterval(()=>{// Increment progress in a non-linear way to simulate real processing\n// Start slower, then speed up, then slow down again at the end\nif(currentProgress<30){currentProgress+=1;}else if(currentProgress<70){currentProgress+=2;}else if(currentProgress<90){currentProgress+=0.5;}else if(currentProgress<98){currentProgress+=0.2;}if(currentProgress>=99){clearInterval(processingInterval);currentProgress=99;// Let the final 100% happen when we get the response\n}setProcessingProgress(Math.min(99,currentProgress));},300);}}});if(response.data.success){// Set processing to complete\nsetProcessingProgress(100);setIsProcessing(false);// Now fetch the preview result to display\nconst jobId=response.data.job_id;try{const previewResponse=await axios.get(`/api/results/preview/${jobId}`);setPreviewResult(previewResponse.data);setShowPreview(true);}catch(previewError){var _previewError$respons,_previewError$respons2;console.error('Preview error:',previewError);setError(((_previewError$respons=previewError.response)===null||_previewError$respons===void 0?void 0:(_previewError$respons2=_previewError$respons.data)===null||_previewError$respons2===void 0?void 0:_previewError$respons2.error)||'Error retrieving result preview');}}else{setError(response.data.error||'Unknown error occurred');setIsUploading(false);setIsProcessing(false);}}catch(error){console.error('Upload error:',error);// Provide more detailed error messages based on the error\nlet errorMessage='Error uploading file. Please try again.';if(error.response){// Server responded with an error\nconsole.error('Error response:',error.response.data);if(error.response.status===413){errorMessage='File too large. The maximum allowed size is 300MB.';}else if(error.response.data&&error.response.data.error){errorMessage=error.response.data.error;}else{errorMessage=`Server error (${error.response.status}). Please try again later.`;}}else if(error.request){// Request made but no response received\nerrorMessage='No response from server. Please check your network connection.';}setError(errorMessage);setIsUploading(false);setIsProcessing(false);}};const handleDicomVolumeUpload=async()=>{if(dicomFiles.length===0){setError('Please select DICOM files for upload');return;}try{setIsProcessing(true);setUploadProgress(0);setError(null);// Create form data for the upload\nconst formData=new FormData();dicomFiles.forEach(file=>{formData.append('files[]',file);});// Add processing options\nformData.append('confidence',confidence);formData.append('lungs_only','false');// Upload the files\nconst response=await axios.post('/api/upload/dicom-volume',formData,{headers:{'Content-Type':'multipart/form-data'},onUploadProgress:progressEvent=>{const progress=Math.round(progressEvent.loaded*100/progressEvent.total);setUploadProgress(progress);}});// Reset upload progress after completed\nsetUploadProgress(100);if(response.data&&response.data.job_id){// Start polling for the processing status\nconst jobId=response.data.job_id;let pollCount=0;const maxPolls=120;// Poll for up to 2 minutes (120 x 1s)\nconst pollDelay=1000;// 1 second between polls\nlet foundResult=false;setProcessingMessage(\"Processing DICOM volume. This may take a few minutes...\");const pollInterval=setInterval(async()=>{try{pollCount++;const statusResponse=await axios.get(`/api/results/preview/${jobId}`);console.log(`Poll status check ${pollCount}:`,statusResponse.data);// Check if we have a status field\nif(statusResponse.data.status==='completed'){clearInterval(pollInterval);foundResult=true;setIsProcessing(false);setPreviewResult(statusResponse.data);setShowPreview(true);setProcessingMessage(null);}else if(statusResponse.data.status==='error'){clearInterval(pollInterval);foundResult=true;setIsProcessing(false);setError(`Processing error: ${statusResponse.data.error||'Unknown error'}`);setProcessingMessage(null);}else if(pollCount>=maxPolls){// If we've polled too many times, still show the result page but with a notice\nclearInterval(pollInterval);setIsProcessing(false);setProcessingMessage(\"Processing is continuing in the background. You may need to check Results page later.\");try{// Try one more time to get the result\nconst finalCheck=await axios.get(`/api/results/preview/${jobId}`);if(finalCheck.data){setPreviewResult(finalCheck.data);setShowPreview(true);foundResult=true;}}catch(e){console.error(\"Final check failed:\",e);}}else{// Still processing, update message with time elapsed\nconst minutesElapsed=Math.floor(pollCount*pollDelay/60000);const secondsElapsed=Math.floor(pollCount*pollDelay/1000%60);setProcessingMessage(`Processing DICOM volume... (${minutesElapsed}m ${secondsElapsed}s elapsed)`);}}catch(error){console.log(`Poll error (attempt ${pollCount}):`,error);// Don't give up on first error, try a few more times\nif(pollCount>=maxPolls){clearInterval(pollInterval);if(!foundResult){setIsProcessing(false);setError('Failed to retrieve processing result. Please check the Results page later.');setProcessingMessage(\"Processing is continuing in the background.\");}}}},pollDelay);}else{setIsProcessing(false);setError('Failed to start processing. Please try again.');}}catch(error){var _error$response,_error$response$data;setIsProcessing(false);console.error('Error uploading DICOM volume:',error);setError(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Failed to upload DICOM volume. Please try again.');}};// Handle patient info form inputs\nconst handlePatientInfoChange=e=>{const{name,value}=e.target;setPatientInfo(prev=>({...prev,[name]:value}));};// Handle saving with patient info\nconst handleSaveWithPatientInfo=async()=>{if(!previewResult||!previewResult.job_id){setError('No result to save');return;}try{const response=await axios.post(`/api/results/action/${previewResult.job_id}`,{action:'save',patient_info:patientInfo});if(response.data.success){// Hide the form\nsetShowPatientForm(false);// Set navigating flag to allow navigation\nsetIsNavigating(true);// If we have a pending navigation, go there\nif(pendingNavigation){navigate(pendingNavigation);setPendingNavigation(null);}else{// Navigate to the result page using the path provided in the response\nconst resultPath=response.data.result_path||`/results/${response.data.job_id||response.data.case_name}`;// Log the navigation\nconsole.log(`Navigating to result path: ${resultPath}`);// Navigate to the result page\nnavigate(resultPath.replace('/api',''));}}else{setError(response.data.error||'Failed to save results');}}catch(error){var _error$response2,_error$response2$data;console.error('Error saving result:',error);setError(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||'Error saving result');}};// Handle result actions (save/discard)\nconst handleResultAction=async action=>{if(!previewResult||!previewResult.job_id){setError('No result to save or discard');return;}if(action==='save'){// Show patient information form\nsetShowPatientForm(true);}else{try{const response=await axios.post(`/api/results/action/${previewResult.job_id}`,{action:action});if(response.data.success){// Reset the form on discard\nsetFiles([]);setRawFile(null);setPreviewResult(null);setShowPreview(false);// Allow navigation after discarding\nsetIsNavigating(true);// If we were trying to navigate somewhere when discarding, navigate there\nif(pendingNavigation){navigate(pendingNavigation);setPendingNavigation(null);}}else{setError(response.data.error||`Failed to ${action} results`);}}catch(error){var _error$response3,_error$response3$data;console.error(`Error ${action}ing result:`,error);setError(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||`Error ${action}ing result`);}}};// Handle action on leave confirmation\nconst handleLeaveConfirmation=shouldSave=>{if(shouldSave==='save'){// Show patient form\nsetShowPatientForm(true);setShowLeaveConfirmation(false);}else if(shouldSave==='discard'){// Discard and continue navigation\nhandleResultAction('discard');setShowLeaveConfirmation(false);// Set navigating flag to allow navigation\nsetIsNavigating(true);// If we have a pending navigation, go there\nif(pendingNavigation){navigate(pendingNavigation);setPendingNavigation(null);}}else{// Stay on page\nsetShowLeaveConfirmation(false);setPendingNavigation(null);}};// Handle nodule selection\nconst handleNoduleClick=noduleId=>{setSelectedNoduleId(noduleId);};return/*#__PURE__*/_jsxs(\"div\",{className:`container mx-auto px-4 py-8 ${darkMode?'text-gray-200':'text-gray-800'}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold mb-4\",children:\"Upload CT Scan\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-4 mb-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setUploadMode('single'),className:`px-4 py-2 rounded-lg ${uploadMode==='single'?darkMode?'bg-indigo-600 text-white':'bg-indigo-100 text-indigo-700':darkMode?'bg-gray-700 text-gray-300':'bg-gray-100 text-gray-700'}`,children:\"Single CT Scan\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setUploadMode('dicom-volume'),className:`px-4 py-2 rounded-lg ${uploadMode==='dicom-volume'?darkMode?'bg-indigo-600 text-white':'bg-indigo-100 text-indigo-700':darkMode?'bg-gray-700 text-gray-300':'bg-gray-100 text-gray-700'}`,children:\"DICOM Volume\"})]})]}),!showPreview?/*#__PURE__*/_jsx(\"div\",{className:`p-6 rounded-lg shadow-md ${darkMode?'bg-gray-800':'bg-white'}`,children:uploadMode==='single'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-4\",children:\"Upload Single CT Scan\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-6 text-sm\",children:\"Supported file formats: .mhd/.raw pair, .nii, .nii.gz, or single .dcm\"}),/*#__PURE__*/_jsxs(\"div\",{...getRootProps(),className:`border-2 border-dashed rounded-lg p-8 cursor-pointer transition-colors ${isDragActive?darkMode?'border-indigo-400 bg-indigo-900 bg-opacity-20':'border-indigo-500 bg-indigo-50':darkMode?'border-gray-600 hover:border-gray-500':'border-gray-300 hover:border-gray-400'}`,children:[/*#__PURE__*/_jsx(\"input\",{...getInputProps()}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center justify-center\",children:[/*#__PURE__*/_jsx(CloudArrowUpIcon,{className:`h-12 w-12 mb-3 ${isDragActive?'text-indigo-500':'text-gray-400'}`}),isDragActive?/*#__PURE__*/_jsx(\"p\",{children:\"Drop the file here...\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-center\",children:\"Drag & drop your CT scan file here, or click to select file\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-center text-xs mt-2 text-gray-500\",children:\"For MHD files, you can upload the RAW file separately in the next step\"})]})]})]}),files.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:`mt-4 p-4 rounded-md ${darkMode?'bg-gray-700':'bg-gray-50'}`,children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium mb-2\",children:\"Selected File:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"truncate\",children:[files[0].name,\" (\",(files[0].size/(1024*1024)).toFixed(2),\" MB)\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.stopPropagation();setFiles([]);setShowRawUpload(false);setError(null);},className:\"text-red-500 hover:text-red-700\",children:/*#__PURE__*/_jsx(XMarkIcon,{className:\"h-5 w-5\"})})]})]}),showRawUpload&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium mb-2\",children:\"Upload associated RAW file:\"}),/*#__PURE__*/_jsxs(\"div\",{...getRawRootProps(),className:`border-2 border-dashed rounded-lg p-6 cursor-pointer transition-colors ${isRawDragActive?darkMode?'border-indigo-400 bg-indigo-900 bg-opacity-20':'border-indigo-500 bg-indigo-50':darkMode?'border-gray-600 hover:border-gray-500':'border-gray-300 hover:border-gray-400'}`,children:[/*#__PURE__*/_jsx(\"input\",{...getRawInputProps()}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center justify-center\",children:[/*#__PURE__*/_jsx(CloudArrowUpIcon,{className:`h-8 w-8 mb-2 ${isRawDragActive?'text-indigo-500':'text-gray-400'}`}),isRawDragActive?/*#__PURE__*/_jsx(\"p\",{children:\"Drop the RAW file here...\"}):/*#__PURE__*/_jsx(\"p\",{className:\"text-center text-sm\",children:\"Drag & drop your RAW file here, or click to select file\"})]})]}),rawFile&&/*#__PURE__*/_jsx(\"div\",{className:`mt-2 p-3 rounded-md ${darkMode?'bg-gray-700':'bg-gray-50'}`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"truncate\",children:[rawFile.name,\" (\",(rawFile.size/(1024*1024)).toFixed(2),\" MB)\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.stopPropagation();setRawFile(null);},className:\"text-red-500 hover:text-red-700\",children:/*#__PURE__*/_jsx(XMarkIcon,{className:\"h-5 w-5\"})})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-6\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleUpload,disabled:isUploading||isProcessing||files.length===0,className:`px-4 py-2 rounded-md text-white font-medium \n                    ${isUploading||isProcessing||files.length===0?'bg-gray-400 cursor-not-allowed':'bg-blue-600 hover:bg-blue-700'}\n                  `,children:isUploading?'Uploading...':isProcessing?'Processing...':'Upload and Process'})})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-4\",children:\"Upload DICOM Volume\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-6 text-sm\",children:\"Upload multiple DICOM (.dcm) files to create a 3D volume, or a single .zip file containing DICOM files\"}),/*#__PURE__*/_jsxs(\"div\",{...getDicomVolumeRootProps(),className:`border-2 border-dashed rounded-lg p-8 cursor-pointer transition-colors ${isDicomVolumeDragActive?darkMode?'border-indigo-400 bg-indigo-900 bg-opacity-20':'border-indigo-500 bg-indigo-50':darkMode?'border-gray-600 hover:border-gray-500':'border-gray-300 hover:border-gray-400'}`,children:[/*#__PURE__*/_jsx(\"input\",{...getDicomVolumeInputProps()}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center justify-center\",children:[/*#__PURE__*/_jsx(CloudArrowUpIcon,{className:`h-12 w-12 mb-3 ${isDicomVolumeDragActive?'text-indigo-500':'text-gray-400'}`}),isDicomVolumeDragActive?/*#__PURE__*/_jsx(\"p\",{children:\"Drop the files here...\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-center\",children:\"Drag & drop multiple DICOM files or a ZIP file here, or click to select files\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-center text-xs mt-2 text-gray-500\",children:\"All slices from the same DICOM series will be combined into a 3D volume\"})]})]})]}),dicomFiles.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:`mt-4 p-4 rounded-md ${darkMode?'bg-gray-700':'bg-gray-50'}`,children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"font-medium mb-2\",children:[\"Selected Files: \",dicomFiles.length]}),/*#__PURE__*/_jsx(\"div\",{className:\"max-h-40 overflow-y-auto pr-2\",children:dicomFiles.length===1&&dicomFiles[0].name.toLowerCase().endsWith('.zip')?/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"truncate\",children:[dicomFiles[0].name,\" (\",(dicomFiles[0].size/(1024*1024)).toFixed(2),\" MB)\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.stopPropagation();setDicomFiles([]);setError(null);},className:\"text-red-500 hover:text-red-700\",children:/*#__PURE__*/_jsx(XMarkIcon,{className:\"h-5 w-5\"})})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between mb-2\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[dicomFiles.length,\" DICOM files selected (\",(dicomFiles.reduce((sum,file)=>sum+file.size,0)/(1024*1024)).toFixed(2),\" MB total)\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.stopPropagation();setDicomFiles([]);setError(null);},className:\"text-red-500 hover:text-red-700\",children:/*#__PURE__*/_jsx(XMarkIcon,{className:\"h-5 w-5\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-400\",children:[\"Files: \",dicomFiles.slice(0,3).map(f=>f.name).join(', '),dicomFiles.length>3?` ... and ${dicomFiles.length-3} more`:'']})]})})]}),uploadMode==='dicom-volume'&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:[\"Confidence Threshold: \",confidence]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0.1\",max:\"0.9\",step:\"0.1\",value:confidence,onChange:e=>setConfidence(parseFloat(e.target.value)),className:\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-xs text-gray-500 px-1\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Less strict (0.1)\"}),/*#__PURE__*/_jsx(\"span\",{children:\"More strict (0.9)\"})]})]}),isUploading&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-sm mb-1\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Uploading...\"}),/*#__PURE__*/_jsxs(\"span\",{children:[uploadProgress,\"%\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-2.5\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-blue-600 h-2.5 rounded-full\",style:{width:`${uploadProgress}%`}})})]}),uploadMode==='dicom-volume'&&isProcessing&&!processingMessage&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-sm mb-1\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Processing...\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Please wait\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-2.5\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-500 h-2.5 rounded-full animate-pulse\",style:{width:'100%'}})})]}),isProcessing&&processingMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 p-3 bg-blue-50 border border-blue-200 rounded\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsxs(\"svg\",{className:\"animate-spin -ml-1 mr-3 h-5 w-5 text-blue-500\",xmlns:\"http://www.w3.org/2000/svg\",fill:\"none\",viewBox:\"0 0 24 24\",children:[/*#__PURE__*/_jsx(\"circle\",{className:\"opacity-25\",cx:\"12\",cy:\"12\",r:\"10\",stroke:\"currentColor\",strokeWidth:\"4\"}),/*#__PURE__*/_jsx(\"path\",{className:\"opacity-75\",fill:\"currentColor\",d:\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"})]}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-blue-700\",children:processingMessage})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-6\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleDicomVolumeUpload,disabled:isUploading||isProcessing||dicomFiles.length===0,className:`px-4 py-2 rounded-md text-white font-medium \n                    ${isUploading||isProcessing||dicomFiles.length===0?'bg-gray-400 cursor-not-allowed':'bg-blue-600 hover:bg-blue-700'}\n                  `,children:isUploading?'Uploading...':isProcessing?'Processing...':'Upload and Process'})})]})}):/*#__PURE__*/_jsx(\"div\",{className:`${darkMode?'bg-gray-800':'bg-white'} shadow rounded-lg p-6 max-w-4xl mx-auto`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:`text-xl font-semibold ${darkMode?'text-white':'text-gray-900'}`,children:\"Review Scan Results\"}),/*#__PURE__*/_jsx(\"div\",{className:`${darkMode?'bg-blue-900':'bg-blue-50'} p-4 rounded-md mb-4`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(InformationCircleIcon,{className:`h-5 w-5 ${darkMode?'text-blue-300':'text-blue-400'}`}),/*#__PURE__*/_jsx(\"div\",{className:`ml-3 text-sm ${darkMode?'text-blue-200':'text-blue-700'}`,children:/*#__PURE__*/_jsx(\"p\",{children:\"Please review the results below. Use the interactive visualization to examine detected nodules. You can save the results to your records or discard them if not satisfied.\"})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:`${darkMode?'bg-gray-700':'bg-gray-100'} rounded-lg overflow-hidden`,children:[/*#__PURE__*/_jsx(\"div\",{className:`px-4 py-3 border-b ${darkMode?'border-gray-600':'border-gray-200'} sm:px-6`,children:/*#__PURE__*/_jsx(\"h3\",{className:`text-lg font-medium ${darkMode?'text-white':'text-gray-900'}`,children:\"Interactive Visualization\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-4\",children:/*#__PURE__*/_jsx(InteractiveViewer,{caseId:previewResult.case_name,selectedNoduleId:selectedNoduleId})})]}),previewResult.details&&previewResult.details.includes('Nodule ')&&/*#__PURE__*/_jsxs(\"div\",{className:`${darkMode?'bg-gray-700':'bg-gray-100'} p-4 rounded-md`,children:[/*#__PURE__*/_jsx(\"h3\",{className:`text-md font-medium ${darkMode?'text-white':'text-gray-900'} mb-2`,children:\"Detected Nodules:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:`min-w-full divide-y ${darkMode?'divide-gray-600':'divide-gray-200'}`,children:[/*#__PURE__*/_jsx(\"thead\",{className:`${darkMode?'bg-gray-800':'bg-gray-50'}`,children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{scope:\"col\",className:`px-6 py-3 text-left text-xs font-medium ${darkMode?'text-gray-300':'text-gray-500'} uppercase tracking-wider`,children:\"Nodule\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",className:`px-6 py-3 text-left text-xs font-medium ${darkMode?'text-gray-300':'text-gray-500'} uppercase tracking-wider`,children:\"Coordinates (z,y,x)\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",className:`px-6 py-3 text-left text-xs font-medium ${darkMode?'text-gray-300':'text-gray-500'} uppercase tracking-wider`,children:\"Radius (mm)\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",className:`px-6 py-3 text-left text-xs font-medium ${darkMode?'text-gray-300':'text-gray-500'} uppercase tracking-wider`,children:\"Confidence\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:`${darkMode?'bg-gray-700 divide-y divide-gray-600':'bg-white divide-y divide-gray-200'}`,children:extractNodulesFromDetails(previewResult.details).map((nodule,index)=>/*#__PURE__*/_jsxs(\"tr\",{className:`${index%2===0?darkMode?'bg-gray-800':'bg-gray-50':''} \n                            cursor-pointer hover:${darkMode?'bg-gray-600':'bg-gray-100'} ${selectedNoduleId===nodule.id?darkMode?'bg-indigo-900':'bg-indigo-100':''}`,onClick:()=>handleNoduleClick(nodule.id),children:[/*#__PURE__*/_jsx(\"td\",{className:`px-6 py-4 whitespace-nowrap text-sm ${darkMode?'text-white':'text-gray-900'}`,children:nodule.id}),/*#__PURE__*/_jsx(\"td\",{className:`px-6 py-4 whitespace-nowrap text-sm ${darkMode?'text-gray-300':'text-gray-500'}`,children:nodule.coordinates}),/*#__PURE__*/_jsx(\"td\",{className:`px-6 py-4 whitespace-nowrap text-sm ${darkMode?'text-gray-300':'text-gray-500'}`,children:nodule.radius}),/*#__PURE__*/_jsx(\"td\",{className:`px-6 py-4 whitespace-nowrap text-sm ${darkMode?'text-gray-300':'text-gray-500'}`,children:nodule.confidence})]},index))})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:`${darkMode?'bg-gray-700':'bg-gray-100'} p-4 rounded-md`,children:[/*#__PURE__*/_jsx(\"h3\",{className:`text-md font-medium ${darkMode?'text-white':'text-gray-900'} mb-2`,children:\"Analysis Details:\"}),/*#__PURE__*/_jsx(\"pre\",{className:`text-sm whitespace-pre-wrap ${darkMode?'text-gray-300':'text-gray-700'}`,children:previewResult.details||\"No detailed analysis available.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-4 justify-center mt-6\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleResultAction('discard'),className:`px-4 py-2 rounded-md flex items-center ${darkMode?'bg-red-800 text-white hover:bg-red-700':'bg-red-600 text-white hover:bg-red-700'}`,children:[/*#__PURE__*/_jsx(XCircleIcon,{className:\"h-5 w-5 mr-2\"}),\"Discard Results\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleResultAction('save'),className:`px-4 py-2 rounded-md flex items-center ${darkMode?'bg-green-800 text-white hover:bg-green-700':'bg-green-600 text-white hover:bg-green-700'}`,children:[/*#__PURE__*/_jsx(CheckCircleIcon,{className:\"h-5 w-5 mr-2\"}),\"Save to Records\"]})]})]})}),showLeaveConfirmation&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:`${darkMode?'bg-gray-800':'bg-white'} rounded-lg shadow-xl p-6 max-w-md w-full`,children:[/*#__PURE__*/_jsx(\"h3\",{className:`text-lg font-medium ${darkMode?'text-white':'text-gray-900'} mb-4`,children:\"Unsaved Results\"}),/*#__PURE__*/_jsx(\"p\",{className:`${darkMode?'text-gray-300':'text-gray-600'} mb-6`,children:\"You have unsaved analysis results. What would you like to do?\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end space-x-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleLeaveConfirmation('stay'),className:`px-4 py-2 rounded-md ${darkMode?'bg-gray-700 text-gray-300 hover:bg-gray-600':'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,children:\"Stay on Page\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleLeaveConfirmation('discard'),className:`px-4 py-2 rounded-md ${darkMode?'bg-red-800 text-white hover:bg-red-700':'bg-red-600 text-white hover:bg-red-700'}`,children:\"Discard & Leave\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleLeaveConfirmation('save'),className:`px-4 py-2 rounded-md ${darkMode?'bg-green-800 text-white hover:bg-green-700':'bg-green-600 text-white hover:bg-green-700'}`,children:\"Save Results\"})]})]})}),showPatientForm&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:`${darkMode?'bg-gray-800':'bg-white'} rounded-lg shadow-xl p-6 max-w-md w-full`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:`text-lg font-medium ${darkMode?'text-white':'text-gray-900'}`,children:\"Patient Information\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowPatientForm(false),className:`rounded-full p-1 ${darkMode?'hover:bg-gray-700':'hover:bg-gray-200'}`,children:/*#__PURE__*/_jsx(XMarkIcon,{className:`h-5 w-5 ${darkMode?'text-gray-400':'text-gray-500'}`})})]}),/*#__PURE__*/_jsx(\"p\",{className:`${darkMode?'text-gray-300':'text-gray-600'} mb-4`,children:\"Please enter the patient's information to save this result to their medical record.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",className:`block text-sm font-medium ${darkMode?'text-gray-300':'text-gray-700'} mb-1`,children:\"Patient Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",name:\"name\",value:patientInfo.name,onChange:handlePatientInfoChange,required:true,className:`w-full px-3 py-2 border ${darkMode?'bg-gray-700 border-gray-600 text-white':'bg-white border-gray-300 text-gray-900'} rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500`})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"age\",className:`block text-sm font-medium ${darkMode?'text-gray-300':'text-gray-700'} mb-1`,children:\"Patient Age\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"age\",name:\"age\",value:patientInfo.age,onChange:handlePatientInfoChange,min:\"0\",max:\"120\",className:`w-full px-3 py-2 border ${darkMode?'bg-gray-700 border-gray-600 text-white':'bg-white border-gray-300 text-gray-900'} rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500`})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"description\",className:`block text-sm font-medium ${darkMode?'text-gray-300':'text-gray-700'} mb-1`,children:\"Clinical Notes\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"description\",name:\"description\",value:patientInfo.description,onChange:handlePatientInfoChange,rows:\"3\",className:`w-full px-3 py-2 border ${darkMode?'bg-gray-700 border-gray-600 text-white':'bg-white border-gray-300 text-gray-900'} rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500`,placeholder:\"Enter any relevant clinical notes about this scan...\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end space-x-4 mt-6\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowPatientForm(false),className:`px-4 py-2 rounded-md ${darkMode?'bg-gray-700 text-gray-300 hover:bg-gray-600':'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveWithPatientInfo,disabled:!patientInfo.name||!patientInfo.age,className:`px-4 py-2 rounded-md ${!patientInfo.name||!patientInfo.age?`${darkMode?'bg-green-900 text-gray-400':'bg-green-300 text-gray-600'} cursor-not-allowed`:darkMode?'bg-green-800 text-white hover:bg-green-700':'bg-green-600 text-white hover:bg-green-700'}`,children:\"Save to Records\"})]})]})})]});};// Helper function to extract nodule information from details text\nconst extractNodulesFromDetails=details=>{if(!details)return[];const nodules=[];const lines=details.split('\\n');let currentNodule=null;for(const line of lines){// Skip segmentation information line\nif(line.includes('Nodule segmentation performed:')){continue;}if(line.startsWith('Nodule ')){if(currentNodule){nodules.push(currentNodule);}currentNodule={id:line.replace(':','').trim(),coordinates:'',radius:'',confidence:''};}else if(currentNodule){if(line.includes('Coordinates')){currentNodule.coordinates=line.split(':')[1].trim();}else if(line.includes('Radius')){currentNodule.radius=line.split(':')[1].trim();}else if(line.includes('Confidence')){currentNodule.confidence=line.split(':')[1].trim();}}}// Add the last nodule if present\nif(currentNodule){nodules.push(currentNodule);}return nodules;};export default UploadPage;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","useLocation","axios","useDropzone","CloudArrowUpIcon","ExclamationCircleIcon","InformationCircleIcon","CheckCircleIcon","XCircleIcon","ViewfinderCircleIcon","XMarkIcon","useTheme","InteractiveViewer","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","UploadPage","files","setFiles","rawFile","setRawFile","confidence","setConfidence","isUploading","setIsUploading","isProcessing","setIsProcessing","error","setError","uploadProgress","setUploadProgress","processingProgress","setProcessingProgress","showRawUpload","setShowRawUpload","previewResult","setPreviewResult","showPreview","setShowPreview","selectedNoduleId","setSelectedNoduleId","showLeaveConfirmation","setShowLeaveConfirmation","showPatientForm","setShowPatientForm","patientInfo","setPatientInfo","name","age","description","isNavigating","setIsNavigating","pendingNavigation","setPendingNavigation","uploadMode","setUploadMode","dicomFiles","setDicomFiles","navigate","location","darkMode","prevLocation","setPrevLocation","processingMessage","setProcessingMessage","pathname","search","handleBeforeUnload","e","preventDefault","returnValue","window","addEventListener","removeEventListener","customNavigate","to","getRootProps","getInputProps","isDragActive","accept","multiple","onDrop","acceptedFiles","mhdFile","find","file","toLowerCase","endsWith","length","getRawRootProps","getRawInputProps","isRawDragActive","getDicomVolumeRootProps","getDicomVolumeInputProps","isDicomVolumeDragActive","zipFile","dicomFilesOnly","filter","handleUpload","maxSizeInBytes","size","toFixed","mhdBaseName","slice","rawBaseName","confirm","formData","FormData","append","confidenceValue","toString","console","log","pair","entries","response","post","headers","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","currentProgress","processingInterval","setInterval","clearInterval","min","data","success","jobId","job_id","previewResponse","get","previewError","_previewError$respons","_previewError$respons2","errorMessage","status","request","handleDicomVolumeUpload","forEach","progress","pollCount","maxPolls","pollDelay","foundResult","pollInterval","statusResponse","finalCheck","minutesElapsed","floor","secondsElapsed","_error$response","_error$response$data","handlePatientInfoChange","value","target","prev","handleSaveWithPatientInfo","action","patient_info","resultPath","result_path","case_name","replace","_error$response2","_error$response2$data","handleResultAction","_error$response3","_error$response3$data","handleLeaveConfirmation","shouldSave","handleNoduleClick","noduleId","className","children","onClick","stopPropagation","disabled","reduce","sum","map","f","join","type","max","step","onChange","parseFloat","style","width","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","caseId","details","includes","scope","extractNodulesFromDetails","nodule","index","id","coordinates","radius","htmlFor","required","rows","placeholder","nodules","lines","split","currentNodule","line","startsWith","push","trim"],"sources":["C:/Users/kouss/Desktop/Cursor/Segmentation/pipeline/webapp/static/src/pages/UploadPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { CloudArrowUpIcon, ExclamationCircleIcon, InformationCircleIcon, CheckCircleIcon, XCircleIcon, ViewfinderCircleIcon, XMarkIcon } from '@heroicons/react/24/outline';\r\nimport { useTheme } from '../contexts/ThemeContext';\r\nimport InteractiveViewer from '../components/InteractiveViewer';\r\n\r\nconst UploadPage = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [rawFile, setRawFile] = useState(null);\r\n  const [confidence, setConfidence] = useState(0.5);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [processingProgress, setProcessingProgress] = useState(0);\r\n  const [showRawUpload, setShowRawUpload] = useState(false);\r\n  const [previewResult, setPreviewResult] = useState(null);\r\n  const [showPreview, setShowPreview] = useState(false);\r\n  const [selectedNoduleId, setSelectedNoduleId] = useState(null);\r\n  const [showLeaveConfirmation, setShowLeaveConfirmation] = useState(false);\r\n  const [showPatientForm, setShowPatientForm] = useState(false);\r\n  const [patientInfo, setPatientInfo] = useState({\r\n    name: '',\r\n    age: '',\r\n    description: ''\r\n  });\r\n  const [isNavigating, setIsNavigating] = useState(false);\r\n  const [pendingNavigation, setPendingNavigation] = useState(null);\r\n  const [uploadMode, setUploadMode] = useState('single'); // 'single' or 'dicom-volume'\r\n  const [dicomFiles, setDicomFiles] = useState([]);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { darkMode } = useTheme();\r\n  \r\n  // Track current location to detect changes\r\n  const [prevLocation, setPrevLocation] = useState(null);\r\n  \r\n  // Add processingMessage to state variables\r\n  const [processingMessage, setProcessingMessage] = useState(null);\r\n  \r\n  // Handle location changes to detect navigation attempts\r\n  useEffect(() => {\r\n    // Skip on first render\r\n    if (prevLocation === null) {\r\n      setPrevLocation(location);\r\n      return;\r\n    }\r\n    \r\n    // If the location has changed and we haven't explicitly allowed navigation\r\n    if (\r\n      location !== prevLocation && \r\n      !isNavigating && \r\n      showPreview && \r\n      previewResult\r\n    ) {\r\n      // Block navigation by going back to previous location\r\n      // This happens synchronously, before the confirmation dialog\r\n      navigate(-1);\r\n      \r\n      // Show confirmation dialog\r\n      setShowLeaveConfirmation(true);\r\n      setPendingNavigation(location.pathname + location.search);\r\n      \r\n      return;\r\n    }\r\n    \r\n    // Update the previous location\r\n    setPrevLocation(location);\r\n  }, [location, prevLocation, isNavigating, showPreview, previewResult, navigate]);\r\n\r\n  // Browser back/refresh confirmation\r\n  useEffect(() => {\r\n    const handleBeforeUnload = (e) => {\r\n      if (showPreview && previewResult) {\r\n        e.preventDefault();\r\n        e.returnValue = '';\r\n        return '';\r\n      }\r\n    };\r\n\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n    \r\n    return () => {\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    };\r\n  }, [showPreview, previewResult]);\r\n\r\n  // Custom navigation function (can be used for in-app links that need confirmation)\r\n  const customNavigate = (to) => {\r\n    if (showPreview && previewResult) {\r\n      // Store pending navigation and show confirmation\r\n      setPendingNavigation(to);\r\n      setShowLeaveConfirmation(true);\r\n    } else {\r\n      // If no unsaved changes, navigate directly\r\n      navigate(to);\r\n    }\r\n  };\r\n\r\n  // Configure dropzone for CT scan files\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    accept: {\r\n      'application/octet-stream': ['.mhd', '.raw', '.nii.gz', '.nii'],\r\n      'application/dicom': ['.dcm'],\r\n    },\r\n    multiple: true, // Allow multiple files to select both .mhd and .raw together\r\n    onDrop: (acceptedFiles) => {\r\n      // Reset preview state when new files are dropped\r\n      setPreviewResult(null);\r\n      setShowPreview(false);\r\n      \r\n      // Sort files to identify MHD and RAW files\r\n      const mhdFile = acceptedFiles.find(file => file.name.toLowerCase().endsWith('.mhd'));\r\n      const rawFile = acceptedFiles.find(file => file.name.toLowerCase().endsWith('.raw'));\r\n      \r\n      if (mhdFile && rawFile) {\r\n        // Both files uploaded together\r\n        setFiles([mhdFile]);\r\n        setRawFile(rawFile);\r\n        setShowRawUpload(false);\r\n        setError(null);\r\n      } else if (mhdFile) {\r\n        // Only MHD file uploaded\r\n        setFiles([mhdFile]);\r\n        setShowRawUpload(true);\r\n        setError(\"You've uploaded an MHD file. Please also upload the associated RAW file.\");\r\n      } else if (rawFile) {\r\n        // Only RAW file uploaded\r\n        setRawFile(rawFile);\r\n        setShowRawUpload(true);\r\n        if (files.length === 0 || !files[0].name.toLowerCase().endsWith('.mhd')) {\r\n          setError(\"You've uploaded a RAW file. Please also upload the associated MHD file.\");\r\n        } else {\r\n          setError(null);\r\n        }\r\n      } else if (acceptedFiles.length > 0) {\r\n        // Other valid file types (NIFTI, DICOM)\r\n        setFiles(acceptedFiles);\r\n        setShowRawUpload(false);\r\n        setError(null);\r\n      }\r\n    },\r\n  });\r\n\r\n  // Configure dropzone specifically for RAW files\r\n  const { getRootProps: getRawRootProps, getInputProps: getRawInputProps, isDragActive: isRawDragActive } = useDropzone({\r\n    accept: {\r\n      'application/octet-stream': ['.raw'],\r\n    },\r\n    multiple: false,\r\n    onDrop: (acceptedFiles) => {\r\n      if (acceptedFiles.length > 0) {\r\n        setRawFile(acceptedFiles[0]);\r\n        setError(null);\r\n      }\r\n    },\r\n  });\r\n\r\n  // Configure dropzone for DICOM series upload\r\n  const { getRootProps: getDicomVolumeRootProps, getInputProps: getDicomVolumeInputProps, isDragActive: isDicomVolumeDragActive } = useDropzone({\r\n    accept: {\r\n      'application/dicom': ['.dcm'],\r\n      'application/zip': ['.zip'],\r\n    },\r\n    multiple: true,\r\n    onDrop: (acceptedFiles) => {\r\n      // Reset preview state when new files are dropped\r\n      setPreviewResult(null);\r\n      setShowPreview(false);\r\n      \r\n      // Check if there's a single zip file\r\n      const zipFile = acceptedFiles.find(file => file.name.toLowerCase().endsWith('.zip'));\r\n      if (zipFile) {\r\n        setDicomFiles([zipFile]);\r\n        setError(null);\r\n        return;\r\n      }\r\n      \r\n      // Filter only DICOM files\r\n      const dicomFilesOnly = acceptedFiles.filter(file => file.name.toLowerCase().endsWith('.dcm'));\r\n      \r\n      if (dicomFilesOnly.length === 0) {\r\n        setError(\"Please upload DICOM (.dcm) files or a ZIP file containing DICOM files.\");\r\n        return;\r\n      }\r\n      \r\n      if (dicomFilesOnly.length < 3) {\r\n        setError(\"Please upload at least 3 DICOM slices to create a 3D volume.\");\r\n        return;\r\n      }\r\n      \r\n      setDicomFiles(dicomFilesOnly);\r\n      setError(null);\r\n    },\r\n  });\r\n\r\n  const handleUpload = async () => {\r\n    if (files.length === 0) {\r\n      setError('Please select a file to upload');\r\n      return;\r\n    }\r\n\r\n    // If user selected an MHD file but no RAW file, show error\r\n    if (files[0].name.toLowerCase().endsWith('.mhd') && !rawFile) {\r\n      setError('Please upload the associated RAW file for your MHD file');\r\n      return;\r\n    }\r\n\r\n    // Validate file sizes\r\n    const maxSizeInBytes = 300 * 1024 * 1024; // 300MB\r\n    if (files[0].size > maxSizeInBytes) {\r\n      setError(`File size exceeds the maximum limit of 300MB. Your file is ${(files[0].size / (1024 * 1024)).toFixed(2)}MB.`);\r\n      return;\r\n    }\r\n    \r\n    if (rawFile && rawFile.size > maxSizeInBytes) {\r\n      setError(`RAW file size exceeds the maximum limit of 300MB. Your file is ${(rawFile.size / (1024 * 1024)).toFixed(2)}MB.`);\r\n      return;\r\n    }\r\n\r\n    // Check file name patterns for MHD and RAW to ensure they match\r\n    if (files[0].name.toLowerCase().endsWith('.mhd') && rawFile) {\r\n      const mhdBaseName = files[0].name.toLowerCase().slice(0, -4); // Remove .mhd\r\n      const rawBaseName = rawFile.name.toLowerCase().slice(0, -4);  // Remove .raw\r\n      \r\n      if (mhdBaseName !== rawBaseName && !window.confirm(`The MHD file (${files[0].name}) and RAW file (${rawFile.name}) have different base names. Are you sure they belong together?`)) {\r\n        setError('Please make sure your MHD and RAW files have matching names');\r\n        return;\r\n      }\r\n    }\r\n\r\n    setIsUploading(true);\r\n    setUploadProgress(0);\r\n    setProcessingProgress(0);\r\n    setError(null);\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', files[0]);\r\n    \r\n    // Add RAW file if present\r\n    if (rawFile) {\r\n      formData.append('raw_file', rawFile);\r\n    }\r\n    \r\n    // Ensure confidence value is a string with proper format\r\n    const confidenceValue = confidence.toString();\r\n    console.log(\"Uploading with confidence value:\", confidenceValue);\r\n    formData.append('confidence', confidenceValue);\r\n    \r\n    // Debug the form data being sent\r\n    for (let pair of formData.entries()) {\r\n      console.log(pair[0] + ': ' + pair[1]);\r\n    }\r\n    \r\n    // Always set no_segmentation to true to disable nodule segmentation completely\r\n    formData.append('lungs_only', 'false');\r\n    formData.append('no_segmentation', 'true');\r\n\r\n    try {\r\n      // Upload phase\r\n      const response = await axios.post('/api/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setUploadProgress(percentCompleted);\r\n          \r\n          // When upload is complete (100%), start the processing progress simulation\r\n          if (percentCompleted === 100) {\r\n            setIsUploading(false);\r\n            setIsProcessing(true);\r\n            \r\n            // Simulate processing progress\r\n            // This is just a visual indicator since we don't have real-time backend progress updates\r\n            let currentProgress = 0;\r\n            const processingInterval = setInterval(() => {\r\n              // Increment progress in a non-linear way to simulate real processing\r\n              // Start slower, then speed up, then slow down again at the end\r\n              if (currentProgress < 30) {\r\n                currentProgress += 1;\r\n              } else if (currentProgress < 70) {\r\n                currentProgress += 2;\r\n              } else if (currentProgress < 90) {\r\n                currentProgress += 0.5;\r\n              } else if (currentProgress < 98) {\r\n                currentProgress += 0.2;\r\n              }\r\n              \r\n              if (currentProgress >= 99) {\r\n                clearInterval(processingInterval);\r\n                currentProgress = 99; // Let the final 100% happen when we get the response\r\n              }\r\n              \r\n              setProcessingProgress(Math.min(99, currentProgress));\r\n            }, 300);\r\n          }\r\n        },\r\n      });\r\n\r\n      if (response.data.success) {\r\n        // Set processing to complete\r\n        setProcessingProgress(100);\r\n        setIsProcessing(false);\r\n        \r\n        // Now fetch the preview result to display\r\n        const jobId = response.data.job_id;\r\n        try {\r\n          const previewResponse = await axios.get(`/api/results/preview/${jobId}`);\r\n          setPreviewResult(previewResponse.data);\r\n          setShowPreview(true);\r\n        } catch (previewError) {\r\n          console.error('Preview error:', previewError);\r\n          setError(previewError.response?.data?.error || 'Error retrieving result preview');\r\n        }\r\n      } else {\r\n        setError(response.data.error || 'Unknown error occurred');\r\n        setIsUploading(false);\r\n        setIsProcessing(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Upload error:', error);\r\n      \r\n      // Provide more detailed error messages based on the error\r\n      let errorMessage = 'Error uploading file. Please try again.';\r\n      \r\n      if (error.response) {\r\n        // Server responded with an error\r\n        console.error('Error response:', error.response.data);\r\n        if (error.response.status === 413) {\r\n          errorMessage = 'File too large. The maximum allowed size is 300MB.';\r\n        } else if (error.response.data && error.response.data.error) {\r\n          errorMessage = error.response.data.error;\r\n        } else {\r\n          errorMessage = `Server error (${error.response.status}). Please try again later.`;\r\n        }\r\n      } else if (error.request) {\r\n        // Request made but no response received\r\n        errorMessage = 'No response from server. Please check your network connection.';\r\n      }\r\n      \r\n      setError(errorMessage);\r\n      setIsUploading(false);\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const handleDicomVolumeUpload = async () => {\r\n    if (dicomFiles.length === 0) {\r\n      setError('Please select DICOM files for upload');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsProcessing(true);\r\n      setUploadProgress(0);\r\n      setError(null);\r\n      \r\n      // Create form data for the upload\r\n      const formData = new FormData();\r\n      dicomFiles.forEach(file => {\r\n        formData.append('files[]', file);\r\n      });\r\n      \r\n      // Add processing options\r\n      formData.append('confidence', confidence);\r\n      formData.append('lungs_only', 'false');\r\n      \r\n      // Upload the files\r\n      const response = await axios.post('/api/upload/dicom-volume', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          const progress = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setUploadProgress(progress);\r\n        }\r\n      });\r\n      \r\n      // Reset upload progress after completed\r\n      setUploadProgress(100);\r\n      \r\n      if (response.data && response.data.job_id) {\r\n        // Start polling for the processing status\r\n        const jobId = response.data.job_id;\r\n        let pollCount = 0;\r\n        const maxPolls = 120; // Poll for up to 2 minutes (120 x 1s)\r\n        const pollDelay = 1000; // 1 second between polls\r\n        let foundResult = false;\r\n        \r\n        setProcessingMessage(\"Processing DICOM volume. This may take a few minutes...\");\r\n        \r\n        const pollInterval = setInterval(async () => {\r\n          try {\r\n            pollCount++;\r\n            const statusResponse = await axios.get(`/api/results/preview/${jobId}`);\r\n            console.log(`Poll status check ${pollCount}:`, statusResponse.data);\r\n            \r\n            // Check if we have a status field\r\n            if (statusResponse.data.status === 'completed') {\r\n              clearInterval(pollInterval);\r\n              foundResult = true;\r\n              setIsProcessing(false);\r\n              setPreviewResult(statusResponse.data);\r\n              setShowPreview(true);\r\n              setProcessingMessage(null);\r\n            } else if (statusResponse.data.status === 'error') {\r\n              clearInterval(pollInterval);\r\n              foundResult = true;\r\n              setIsProcessing(false);\r\n              setError(`Processing error: ${statusResponse.data.error || 'Unknown error'}`);\r\n              setProcessingMessage(null);\r\n            } else if (pollCount >= maxPolls) {\r\n              // If we've polled too many times, still show the result page but with a notice\r\n              clearInterval(pollInterval);\r\n              setIsProcessing(false);\r\n              setProcessingMessage(\"Processing is continuing in the background. You may need to check Results page later.\");\r\n              try {\r\n                // Try one more time to get the result\r\n                const finalCheck = await axios.get(`/api/results/preview/${jobId}`);\r\n                if (finalCheck.data) {\r\n                  setPreviewResult(finalCheck.data);\r\n                  setShowPreview(true);\r\n                  foundResult = true;\r\n                }\r\n              } catch (e) {\r\n                console.error(\"Final check failed:\", e);\r\n              }\r\n            } else {\r\n              // Still processing, update message with time elapsed\r\n              const minutesElapsed = Math.floor(pollCount * pollDelay / 60000);\r\n              const secondsElapsed = Math.floor((pollCount * pollDelay / 1000) % 60);\r\n              setProcessingMessage(`Processing DICOM volume... (${minutesElapsed}m ${secondsElapsed}s elapsed)`);\r\n            }\r\n          } catch (error) {\r\n            console.log(`Poll error (attempt ${pollCount}):`, error);\r\n            \r\n            // Don't give up on first error, try a few more times\r\n            if (pollCount >= maxPolls) {\r\n              clearInterval(pollInterval);\r\n              if (!foundResult) {\r\n                setIsProcessing(false);\r\n                setError('Failed to retrieve processing result. Please check the Results page later.');\r\n                setProcessingMessage(\"Processing is continuing in the background.\");\r\n              }\r\n            }\r\n          }\r\n        }, pollDelay);\r\n      } else {\r\n        setIsProcessing(false);\r\n        setError('Failed to start processing. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      setIsProcessing(false);\r\n      console.error('Error uploading DICOM volume:', error);\r\n      setError(error.response?.data?.error || 'Failed to upload DICOM volume. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Handle patient info form inputs\r\n  const handlePatientInfoChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPatientInfo(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  // Handle saving with patient info\r\n  const handleSaveWithPatientInfo = async () => {\r\n    if (!previewResult || !previewResult.job_id) {\r\n      setError('No result to save');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(`/api/results/action/${previewResult.job_id}`, {\r\n        action: 'save',\r\n        patient_info: patientInfo\r\n      });\r\n\r\n      if (response.data.success) {\r\n        // Hide the form\r\n        setShowPatientForm(false);\r\n        \r\n        // Set navigating flag to allow navigation\r\n        setIsNavigating(true);\r\n        \r\n        // If we have a pending navigation, go there\r\n        if (pendingNavigation) {\r\n          navigate(pendingNavigation);\r\n          setPendingNavigation(null);\r\n        } else {\r\n          // Navigate to the result page using the path provided in the response\r\n          const resultPath = response.data.result_path || `/results/${response.data.job_id || response.data.case_name}`;\r\n          \r\n          // Log the navigation\r\n          console.log(`Navigating to result path: ${resultPath}`);\r\n          \r\n          // Navigate to the result page\r\n          navigate(resultPath.replace('/api', ''));\r\n        }\r\n      } else {\r\n        setError(response.data.error || 'Failed to save results');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving result:', error);\r\n      setError(error.response?.data?.error || 'Error saving result');\r\n    }\r\n  };\r\n\r\n  // Handle result actions (save/discard)\r\n  const handleResultAction = async (action) => {\r\n    if (!previewResult || !previewResult.job_id) {\r\n      setError('No result to save or discard');\r\n      return;\r\n    }\r\n\r\n    if (action === 'save') {\r\n      // Show patient information form\r\n      setShowPatientForm(true);\r\n    } else {\r\n      try {\r\n        const response = await axios.post(`/api/results/action/${previewResult.job_id}`, {\r\n          action: action\r\n        });\r\n\r\n        if (response.data.success) {\r\n          // Reset the form on discard\r\n          setFiles([]);\r\n          setRawFile(null);\r\n          setPreviewResult(null);\r\n          setShowPreview(false);\r\n          \r\n          // Allow navigation after discarding\r\n          setIsNavigating(true);\r\n          \r\n          // If we were trying to navigate somewhere when discarding, navigate there\r\n          if (pendingNavigation) {\r\n            navigate(pendingNavigation);\r\n            setPendingNavigation(null);\r\n          }\r\n        } else {\r\n          setError(response.data.error || `Failed to ${action} results`);\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error ${action}ing result:`, error);\r\n        setError(error.response?.data?.error || `Error ${action}ing result`);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle action on leave confirmation\r\n  const handleLeaveConfirmation = (shouldSave) => {\r\n    if (shouldSave === 'save') {\r\n      // Show patient form\r\n      setShowPatientForm(true);\r\n      setShowLeaveConfirmation(false);\r\n    } else if (shouldSave === 'discard') {\r\n      // Discard and continue navigation\r\n      handleResultAction('discard');\r\n      setShowLeaveConfirmation(false);\r\n      \r\n      // Set navigating flag to allow navigation\r\n      setIsNavigating(true);\r\n      \r\n      // If we have a pending navigation, go there\r\n      if (pendingNavigation) {\r\n        navigate(pendingNavigation);\r\n        setPendingNavigation(null);\r\n      }\r\n    } else {\r\n      // Stay on page\r\n      setShowLeaveConfirmation(false);\r\n      setPendingNavigation(null);\r\n    }\r\n  };\r\n\r\n  // Handle nodule selection\r\n  const handleNoduleClick = (noduleId) => {\r\n    setSelectedNoduleId(noduleId);\r\n  };\r\n\r\n  return (\r\n    <div className={`container mx-auto px-4 py-8 ${darkMode ? 'text-gray-200' : 'text-gray-800'}`}>\r\n      {/* Add this section for mode switching */}\r\n      <div className=\"mb-6\">\r\n        <h1 className=\"text-2xl font-bold mb-4\">Upload CT Scan</h1>\r\n        \r\n        <div className=\"flex space-x-4 mb-4\">\r\n          <button\r\n            onClick={() => setUploadMode('single')}\r\n            className={`px-4 py-2 rounded-lg ${uploadMode === 'single' \r\n              ? (darkMode ? 'bg-indigo-600 text-white' : 'bg-indigo-100 text-indigo-700') \r\n              : (darkMode ? 'bg-gray-700 text-gray-300' : 'bg-gray-100 text-gray-700')\r\n            }`}\r\n          >\r\n            Single CT Scan\r\n          </button>\r\n          <button\r\n            onClick={() => setUploadMode('dicom-volume')}\r\n            className={`px-4 py-2 rounded-lg ${uploadMode === 'dicom-volume' \r\n              ? (darkMode ? 'bg-indigo-600 text-white' : 'bg-indigo-100 text-indigo-700') \r\n              : (darkMode ? 'bg-gray-700 text-gray-300' : 'bg-gray-100 text-gray-700')\r\n            }`}\r\n          >\r\n            DICOM Volume\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {!showPreview ? (\r\n        <div className={`p-6 rounded-lg shadow-md ${darkMode ? 'bg-gray-800' : 'bg-white'}`}>\r\n          {/* Show different upload interface based on mode */}\r\n          {uploadMode === 'single' ? (\r\n            <>\r\n              <h2 className=\"text-xl font-semibold mb-4\">Upload Single CT Scan</h2>\r\n              <p className=\"mb-6 text-sm\">\r\n                Supported file formats: .mhd/.raw pair, .nii, .nii.gz, or single .dcm\r\n              </p>\r\n              \r\n              {/* Original single file upload section */}\r\n              <div \r\n                {...getRootProps()} \r\n                className={`border-2 border-dashed rounded-lg p-8 cursor-pointer transition-colors ${\r\n                  isDragActive \r\n                    ? (darkMode ? 'border-indigo-400 bg-indigo-900 bg-opacity-20' : 'border-indigo-500 bg-indigo-50') \r\n                    : (darkMode ? 'border-gray-600 hover:border-gray-500' : 'border-gray-300 hover:border-gray-400')\r\n                }`}\r\n              >\r\n                <input {...getInputProps()} />\r\n                <div className=\"flex flex-col items-center justify-center\">\r\n                  <CloudArrowUpIcon className={`h-12 w-12 mb-3 ${isDragActive ? 'text-indigo-500' : 'text-gray-400'}`} />\r\n                  {isDragActive ? (\r\n                    <p>Drop the file here...</p>\r\n                  ) : (\r\n                    <>\r\n                      <p className=\"text-center\">Drag & drop your CT scan file here, or click to select file</p>\r\n                      <p className=\"text-center text-xs mt-2 text-gray-500\">\r\n                        For MHD files, you can upload the RAW file separately in the next step\r\n                      </p>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Display selected files */}\r\n              {files.length > 0 && (\r\n                <div className={`mt-4 p-4 rounded-md ${darkMode ? 'bg-gray-700' : 'bg-gray-50'}`}>\r\n                  <h3 className=\"font-medium mb-2\">Selected File:</h3>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"truncate\">{files[0].name} ({(files[0].size / (1024 * 1024)).toFixed(2)} MB)</span>\r\n                    <button \r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        setFiles([]);\r\n                        setShowRawUpload(false);\r\n                        setError(null);\r\n                      }}\r\n                      className=\"text-red-500 hover:text-red-700\"\r\n                    >\r\n                      <XMarkIcon className=\"h-5 w-5\" />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Raw file upload section for MHD files */}\r\n              {showRawUpload && (\r\n                <div className=\"mt-4\">\r\n                  <h3 className=\"font-medium mb-2\">Upload associated RAW file:</h3>\r\n                  <div \r\n                    {...getRawRootProps()} \r\n                    className={`border-2 border-dashed rounded-lg p-6 cursor-pointer transition-colors ${\r\n                      isRawDragActive \r\n                        ? (darkMode ? 'border-indigo-400 bg-indigo-900 bg-opacity-20' : 'border-indigo-500 bg-indigo-50') \r\n                        : (darkMode ? 'border-gray-600 hover:border-gray-500' : 'border-gray-300 hover:border-gray-400')\r\n                    }`}\r\n                  >\r\n                    <input {...getRawInputProps()} />\r\n                    <div className=\"flex flex-col items-center justify-center\">\r\n                      <CloudArrowUpIcon className={`h-8 w-8 mb-2 ${isRawDragActive ? 'text-indigo-500' : 'text-gray-400'}`} />\r\n                      {isRawDragActive ? (\r\n                        <p>Drop the RAW file here...</p>\r\n                      ) : (\r\n                        <p className=\"text-center text-sm\">Drag & drop your RAW file here, or click to select file</p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {/* Display selected RAW file */}\r\n                  {rawFile && (\r\n                    <div className={`mt-2 p-3 rounded-md ${darkMode ? 'bg-gray-700' : 'bg-gray-50'}`}>\r\n                      <div className=\"flex justify-between items-center\">\r\n                        <span className=\"truncate\">{rawFile.name} ({(rawFile.size / (1024 * 1024)).toFixed(2)} MB)</span>\r\n                        <button \r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            setRawFile(null);\r\n                          }}\r\n                          className=\"text-red-500 hover:text-red-700\"\r\n                        >\r\n                          <XMarkIcon className=\"h-5 w-5\" />\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n              \r\n              {/* Original upload button */}\r\n              <div className=\"mt-6\">\r\n                <button \r\n                  onClick={handleUpload}\r\n                  disabled={isUploading || isProcessing || files.length === 0}\r\n                  className={`px-4 py-2 rounded-md text-white font-medium \r\n                    ${isUploading || isProcessing || files.length === 0 \r\n                      ? 'bg-gray-400 cursor-not-allowed' \r\n                      : 'bg-blue-600 hover:bg-blue-700'}\r\n                  `}\r\n                >\r\n                  {isUploading ? 'Uploading...' : isProcessing ? 'Processing...' : 'Upload and Process'}\r\n                </button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <h2 className=\"text-xl font-semibold mb-4\">Upload DICOM Volume</h2>\r\n              <p className=\"mb-6 text-sm\">\r\n                Upload multiple DICOM (.dcm) files to create a 3D volume, or a single .zip file containing DICOM files\r\n              </p>\r\n              \r\n              {/* DICOM Volume file upload section */}\r\n              <div \r\n                {...getDicomVolumeRootProps()} \r\n                className={`border-2 border-dashed rounded-lg p-8 cursor-pointer transition-colors ${\r\n                  isDicomVolumeDragActive \r\n                    ? (darkMode ? 'border-indigo-400 bg-indigo-900 bg-opacity-20' : 'border-indigo-500 bg-indigo-50') \r\n                    : (darkMode ? 'border-gray-600 hover:border-gray-500' : 'border-gray-300 hover:border-gray-400')\r\n                }`}\r\n              >\r\n                <input {...getDicomVolumeInputProps()} />\r\n                <div className=\"flex flex-col items-center justify-center\">\r\n                  <CloudArrowUpIcon className={`h-12 w-12 mb-3 ${isDicomVolumeDragActive ? 'text-indigo-500' : 'text-gray-400'}`} />\r\n                  {isDicomVolumeDragActive ? (\r\n                    <p>Drop the files here...</p>\r\n                  ) : (\r\n                    <>\r\n                      <p className=\"text-center\">Drag & drop multiple DICOM files or a ZIP file here, or click to select files</p>\r\n                      <p className=\"text-center text-xs mt-2 text-gray-500\">\r\n                        All slices from the same DICOM series will be combined into a 3D volume\r\n                      </p>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Display selected DICOM files */}\r\n              {dicomFiles.length > 0 && (\r\n                <div className={`mt-4 p-4 rounded-md ${darkMode ? 'bg-gray-700' : 'bg-gray-50'}`}>\r\n                  <h3 className=\"font-medium mb-2\">Selected Files: {dicomFiles.length}</h3>\r\n                  <div className=\"max-h-40 overflow-y-auto pr-2\">\r\n                    {dicomFiles.length === 1 && dicomFiles[0].name.toLowerCase().endsWith('.zip') ? (\r\n                      <div className=\"flex justify-between items-center\">\r\n                        <span className=\"truncate\">{dicomFiles[0].name} ({(dicomFiles[0].size / (1024 * 1024)).toFixed(2)} MB)</span>\r\n                        <button \r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            setDicomFiles([]);\r\n                            setError(null);\r\n                          }}\r\n                          className=\"text-red-500 hover:text-red-700\"\r\n                        >\r\n                          <XMarkIcon className=\"h-5 w-5\" />\r\n                        </button>\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        <div className=\"flex justify-between mb-2\">\r\n                          <span>{dicomFiles.length} DICOM files selected ({(dicomFiles.reduce((sum, file) => sum + file.size, 0) / (1024 * 1024)).toFixed(2)} MB total)</span>\r\n                          <button \r\n                            onClick={(e) => {\r\n                              e.stopPropagation();\r\n                              setDicomFiles([]);\r\n                              setError(null);\r\n                            }}\r\n                            className=\"text-red-500 hover:text-red-700\"\r\n                          >\r\n                            <XMarkIcon className=\"h-5 w-5\" />\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"text-xs text-gray-400\">Files: {dicomFiles.slice(0, 3).map(f => f.name).join(', ')}{dicomFiles.length > 3 ? ` ... and ${dicomFiles.length - 3} more` : ''}</div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {/* DICOM Volume confidence settings */}\r\n              {uploadMode === 'dicom-volume' && (\r\n                <div className=\"mt-4\">\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Confidence Threshold: {confidence}\r\n                  </label>\r\n                  <input\r\n                    type=\"range\"\r\n                    min=\"0.1\"\r\n                    max=\"0.9\"\r\n                    step=\"0.1\"\r\n                    value={confidence}\r\n                    onChange={(e) => setConfidence(parseFloat(e.target.value))}\r\n                    className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\r\n                  />\r\n                  <div className=\"flex justify-between text-xs text-gray-500 px-1\">\r\n                    <span>Less strict (0.1)</span>\r\n                    <span>More strict (0.9)</span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Upload progress */}\r\n              {isUploading && (\r\n                <div className=\"mt-4\">\r\n                  <div className=\"flex justify-between text-sm mb-1\">\r\n                    <span>Uploading...</span>\r\n                    <span>{uploadProgress}%</span>\r\n                  </div>\r\n                  <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\r\n                    <div className=\"bg-blue-600 h-2.5 rounded-full\" style={{ width: `${uploadProgress}%` }}></div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Processing progress (only shown for DICOM volume) */}\r\n              {uploadMode === 'dicom-volume' && isProcessing && !processingMessage && (\r\n                <div className=\"mt-4\">\r\n                  <div className=\"flex justify-between text-sm mb-1\">\r\n                    <span>Processing...</span>\r\n                    <span>Please wait</span>\r\n                  </div>\r\n                  <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\r\n                    <div className=\"bg-green-500 h-2.5 rounded-full animate-pulse\" style={{ width: '100%' }}></div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Processing message */}\r\n              {isProcessing && processingMessage && (\r\n                <div className=\"mt-4 p-3 bg-blue-50 border border-blue-200 rounded\">\r\n                  <div className=\"flex items-center\">\r\n                    <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-blue-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                    </svg>\r\n                    <span className=\"text-sm text-blue-700\">{processingMessage}</span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Upload button */}\r\n              <div className=\"mt-6\">\r\n                <button \r\n                  onClick={handleDicomVolumeUpload}\r\n                  disabled={isUploading || isProcessing || dicomFiles.length === 0}\r\n                  className={`px-4 py-2 rounded-md text-white font-medium \r\n                    ${isUploading || isProcessing || dicomFiles.length === 0 \r\n                      ? 'bg-gray-400 cursor-not-allowed' \r\n                      : 'bg-blue-600 hover:bg-blue-700'}\r\n                  `}\r\n                >\r\n                  {isUploading ? 'Uploading...' : isProcessing ? 'Processing...' : 'Upload and Process'}\r\n                </button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} shadow rounded-lg p-6 max-w-4xl mx-auto`}>\r\n          <div className=\"space-y-6\">\r\n            <h2 className={`text-xl font-semibold ${darkMode ? 'text-white' : 'text-gray-900'}`}>\r\n              Review Scan Results\r\n            </h2>\r\n            \r\n            <div className={`${darkMode ? 'bg-blue-900' : 'bg-blue-50'} p-4 rounded-md mb-4`}>\r\n              <div className=\"flex\">\r\n                <InformationCircleIcon className={`h-5 w-5 ${darkMode ? 'text-blue-300' : 'text-blue-400'}`} />\r\n                <div className={`ml-3 text-sm ${darkMode ? 'text-blue-200' : 'text-blue-700'}`}>\r\n                  <p>Please review the results below. Use the interactive visualization to examine detected nodules. You can save the results to your records or discard them if not satisfied.</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Visualization section */}\r\n            <div className={`${darkMode ? 'bg-gray-700' : 'bg-gray-100'} rounded-lg overflow-hidden`}>\r\n              <div className={`px-4 py-3 border-b ${darkMode ? 'border-gray-600' : 'border-gray-200'} sm:px-6`}>\r\n                <h3 className={`text-lg font-medium ${darkMode ? 'text-white' : 'text-gray-900'}`}>Interactive Visualization</h3>\r\n              </div>\r\n              \r\n              {/* Interactive viewer */}\r\n              <div className=\"p-4\">\r\n                <InteractiveViewer \r\n                  caseId={previewResult.case_name} \r\n                  selectedNoduleId={selectedNoduleId}\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Nodule table for interactive navigation */}\r\n            {previewResult.details && previewResult.details.includes('Nodule ') && (\r\n              <div className={`${darkMode ? 'bg-gray-700' : 'bg-gray-100'} p-4 rounded-md`}>\r\n                <h3 className={`text-md font-medium ${darkMode ? 'text-white' : 'text-gray-900'} mb-2`}>\r\n                  Detected Nodules:\r\n                </h3>\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className={`min-w-full divide-y ${darkMode ? 'divide-gray-600' : 'divide-gray-200'}`}>\r\n                    <thead className={`${darkMode ? 'bg-gray-800' : 'bg-gray-50'}`}>\r\n                      <tr>\r\n                        <th scope=\"col\" className={`px-6 py-3 text-left text-xs font-medium ${darkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>\r\n                          Nodule\r\n                        </th>\r\n                        <th scope=\"col\" className={`px-6 py-3 text-left text-xs font-medium ${darkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>\r\n                          Coordinates (z,y,x)\r\n                        </th>\r\n                        <th scope=\"col\" className={`px-6 py-3 text-left text-xs font-medium ${darkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>\r\n                          Radius (mm)\r\n                        </th>\r\n                        <th scope=\"col\" className={`px-6 py-3 text-left text-xs font-medium ${darkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>\r\n                          Confidence\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className={`${darkMode ? 'bg-gray-700 divide-y divide-gray-600' : 'bg-white divide-y divide-gray-200'}`}>\r\n                      {extractNodulesFromDetails(previewResult.details).map((nodule, index) => (\r\n                        <tr \r\n                          key={index} \r\n                          className={`${index % 2 === 0 ? (darkMode ? 'bg-gray-800' : 'bg-gray-50') : ''} \r\n                            cursor-pointer hover:${darkMode ? 'bg-gray-600' : 'bg-gray-100'} ${selectedNoduleId === nodule.id ? (darkMode ? 'bg-indigo-900' : 'bg-indigo-100') : ''}`}\r\n                          onClick={() => handleNoduleClick(nodule.id)}\r\n                        >\r\n                          <td className={`px-6 py-4 whitespace-nowrap text-sm ${darkMode ? 'text-white' : 'text-gray-900'}`}>\r\n                            {nodule.id}\r\n                          </td>\r\n                          <td className={`px-6 py-4 whitespace-nowrap text-sm ${darkMode ? 'text-gray-300' : 'text-gray-500'}`}>\r\n                            {nodule.coordinates}\r\n                          </td>\r\n                          <td className={`px-6 py-4 whitespace-nowrap text-sm ${darkMode ? 'text-gray-300' : 'text-gray-500'}`}>\r\n                            {nodule.radius}\r\n                          </td>\r\n                          <td className={`px-6 py-4 whitespace-nowrap text-sm ${darkMode ? 'text-gray-300' : 'text-gray-500'}`}>\r\n                            {nodule.confidence}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Details section */}\r\n            <div className={`${darkMode ? 'bg-gray-700' : 'bg-gray-100'} p-4 rounded-md`}>\r\n              <h3 className={`text-md font-medium ${darkMode ? 'text-white' : 'text-gray-900'} mb-2`}>\r\n                Analysis Details:\r\n              </h3>\r\n              <pre className={`text-sm whitespace-pre-wrap ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>\r\n                {previewResult.details || \"No detailed analysis available.\"}\r\n              </pre>\r\n            </div>\r\n            \r\n            {/* Action buttons */}\r\n            <div className=\"flex space-x-4 justify-center mt-6\">\r\n              <button\r\n                onClick={() => handleResultAction('discard')}\r\n                className={`px-4 py-2 rounded-md flex items-center ${\r\n                  darkMode \r\n                    ? 'bg-red-800 text-white hover:bg-red-700' \r\n                    : 'bg-red-600 text-white hover:bg-red-700'\r\n                }`}\r\n              >\r\n                <XCircleIcon className=\"h-5 w-5 mr-2\" />\r\n                Discard Results\r\n              </button>\r\n              \r\n              <button\r\n                onClick={() => handleResultAction('save')}\r\n                className={`px-4 py-2 rounded-md flex items-center ${\r\n                  darkMode \r\n                    ? 'bg-green-800 text-white hover:bg-green-700' \r\n                    : 'bg-green-600 text-white hover:bg-green-700'\r\n                }`}\r\n              >\r\n                <CheckCircleIcon className=\"h-5 w-5 mr-2\" />\r\n                Save to Records\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Leave confirmation dialog */}\r\n      {showLeaveConfirmation && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-xl p-6 max-w-md w-full`}>\r\n            <h3 className={`text-lg font-medium ${darkMode ? 'text-white' : 'text-gray-900'} mb-4`}>\r\n              Unsaved Results\r\n            </h3>\r\n            <p className={`${darkMode ? 'text-gray-300' : 'text-gray-600'} mb-6`}>\r\n              You have unsaved analysis results. What would you like to do?\r\n            </p>\r\n            <div className=\"flex justify-end space-x-4\">\r\n              <button\r\n                onClick={() => handleLeaveConfirmation('stay')}\r\n                className={`px-4 py-2 rounded-md ${\r\n                  darkMode \r\n                    ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' \r\n                    : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\r\n                }`}\r\n              >\r\n                Stay on Page\r\n              </button>\r\n              <button\r\n                onClick={() => handleLeaveConfirmation('discard')}\r\n                className={`px-4 py-2 rounded-md ${\r\n                  darkMode \r\n                    ? 'bg-red-800 text-white hover:bg-red-700' \r\n                    : 'bg-red-600 text-white hover:bg-red-700'\r\n                }`}\r\n              >\r\n                Discard & Leave\r\n              </button>\r\n              <button\r\n                onClick={() => handleLeaveConfirmation('save')}\r\n                className={`px-4 py-2 rounded-md ${\r\n                  darkMode \r\n                    ? 'bg-green-800 text-white hover:bg-green-700' \r\n                    : 'bg-green-600 text-white hover:bg-green-700'\r\n                }`}\r\n              >\r\n                Save Results\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Patient information form */}\r\n      {showPatientForm && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-xl p-6 max-w-md w-full`}>\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h3 className={`text-lg font-medium ${darkMode ? 'text-white' : 'text-gray-900'}`}>\r\n                Patient Information\r\n              </h3>\r\n              <button \r\n                onClick={() => setShowPatientForm(false)} \r\n                className={`rounded-full p-1 ${darkMode ? 'hover:bg-gray-700' : 'hover:bg-gray-200'}`}\r\n              >\r\n                <XMarkIcon className={`h-5 w-5 ${darkMode ? 'text-gray-400' : 'text-gray-500'}`} />\r\n              </button>\r\n            </div>\r\n            \r\n            <p className={`${darkMode ? 'text-gray-300' : 'text-gray-600'} mb-4`}>\r\n              Please enter the patient's information to save this result to their medical record.\r\n            </p>\r\n            \r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label htmlFor=\"name\" className={`block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\r\n                  Patient Name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  value={patientInfo.name}\r\n                  onChange={handlePatientInfoChange}\r\n                  required\r\n                  className={`w-full px-3 py-2 border ${darkMode ? 'bg-gray-700 border-gray-600 text-white' : 'bg-white border-gray-300 text-gray-900'} rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500`}\r\n                />\r\n              </div>\r\n              \r\n              <div>\r\n                <label htmlFor=\"age\" className={`block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\r\n                  Patient Age\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"age\"\r\n                  name=\"age\"\r\n                  value={patientInfo.age}\r\n                  onChange={handlePatientInfoChange}\r\n                  min=\"0\"\r\n                  max=\"120\"\r\n                  className={`w-full px-3 py-2 border ${darkMode ? 'bg-gray-700 border-gray-600 text-white' : 'bg-white border-gray-300 text-gray-900'} rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500`}\r\n                />\r\n              </div>\r\n              \r\n              <div>\r\n                <label htmlFor=\"description\" className={`block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\r\n                  Clinical Notes\r\n                </label>\r\n                <textarea\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  value={patientInfo.description}\r\n                  onChange={handlePatientInfoChange}\r\n                  rows=\"3\"\r\n                  className={`w-full px-3 py-2 border ${darkMode ? 'bg-gray-700 border-gray-600 text-white' : 'bg-white border-gray-300 text-gray-900'} rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500`}\r\n                  placeholder=\"Enter any relevant clinical notes about this scan...\"\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex justify-end space-x-4 mt-6\">\r\n              <button\r\n                onClick={() => setShowPatientForm(false)}\r\n                className={`px-4 py-2 rounded-md ${\r\n                  darkMode \r\n                    ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' \r\n                    : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\r\n                }`}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleSaveWithPatientInfo}\r\n                disabled={!patientInfo.name || !patientInfo.age}\r\n                className={`px-4 py-2 rounded-md ${\r\n                  !patientInfo.name || !patientInfo.age\r\n                    ? `${darkMode ? 'bg-green-900 text-gray-400' : 'bg-green-300 text-gray-600'} cursor-not-allowed`\r\n                    : darkMode \r\n                      ? 'bg-green-800 text-white hover:bg-green-700' \r\n                      : 'bg-green-600 text-white hover:bg-green-700'\r\n                }`}\r\n              >\r\n                Save to Records\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Helper function to extract nodule information from details text\r\nconst extractNodulesFromDetails = (details) => {\r\n  if (!details) return [];\r\n\r\n  const nodules = [];\r\n  const lines = details.split('\\n');\r\n  let currentNodule = null;\r\n  \r\n  for (const line of lines) {\r\n    // Skip segmentation information line\r\n    if (line.includes('Nodule segmentation performed:')) {\r\n      continue;\r\n    }\r\n    \r\n    if (line.startsWith('Nodule ')) {\r\n      if (currentNodule) {\r\n        nodules.push(currentNodule);\r\n      }\r\n      currentNodule = {\r\n        id: line.replace(':', '').trim(),\r\n        coordinates: '',\r\n        radius: '',\r\n        confidence: '',\r\n      };\r\n    } else if (currentNodule) {\r\n      if (line.includes('Coordinates')) {\r\n        currentNodule.coordinates = line.split(':')[1].trim();\r\n      } else if (line.includes('Radius')) {\r\n        currentNodule.radius = line.split(':')[1].trim();\r\n      } else if (line.includes('Confidence')) {\r\n        currentNodule.confidence = line.split(':')[1].trim();\r\n      }\r\n    }\r\n  }\r\n  \r\n  // Add the last nodule if present\r\n  if (currentNodule) {\r\n    nodules.push(currentNodule);\r\n  }\r\n  \r\n  return nodules;\r\n};\r\n\r\nexport default UploadPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}