{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import axios from'axios';import{useDropzone}from'react-dropzone';import{CloudArrowUpIcon,ExclamationCircleIcon}from'@heroicons/react/24/outline';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UploadPage=()=>{const[files,setFiles]=useState([]);const[rawFile,setRawFile]=useState(null);const[confidence,setConfidence]=useState(0.5);const[lungsOnly,setLungsOnly]=useState(false);const[noSegmentation,setNoSegmentation]=useState(false);const[isUploading,setIsUploading]=useState(false);const[error,setError]=useState(null);const[progress,setProgress]=useState(0);const navigate=useNavigate();// Configure dropzone for CT scan files\nconst{getRootProps,getInputProps,isDragActive}=useDropzone({accept:{'application/octet-stream':['.mhd','.raw','.nii.gz','.nii'],'application/dicom':['.dcm']},multiple:false,onDrop:acceptedFiles=>{// First check if we're dealing with an MHD file\nconst mhdFile=acceptedFiles.find(file=>file.name.endsWith('.mhd'));if(mhdFile){setFiles([mhdFile]);// Let the user know they need to upload the associated RAW file\nsetError(\"You've uploaded an MHD file. Please also upload the associated RAW file.\");}else{setFiles(acceptedFiles);setError(null);}}});// Configure dropzone for RAW files (only needed when an MHD file is selected)\nconst{getRootProps:getRawRootProps,getInputProps:getRawInputProps,isDragActive:isRawDragActive}=useDropzone({accept:{'application/octet-stream':['.raw']},multiple:false,onDrop:acceptedFiles=>{if(acceptedFiles.length>0){setRawFile(acceptedFiles[0]);setError(null);}}});const handleUpload=async()=>{if(files.length===0){setError('Please select a file to upload');return;}// If user selected an MHD file but no RAW file, show error\nif(files[0].name.endsWith('.mhd')&&!rawFile){setError('Please upload the associated RAW file for your MHD file');return;}setIsUploading(true);setProgress(0);setError(null);const formData=new FormData();formData.append('file',files[0]);// Add RAW file if present\nif(rawFile){formData.append('raw_file',rawFile);}// Add processing options\nformData.append('confidence',confidence);formData.append('lungs_only',lungsOnly);formData.append('no_segmentation',noSegmentation);try{const response=await axios.post('/api/upload',formData,{headers:{'Content-Type':'multipart/form-data'},onUploadProgress:progressEvent=>{const percentCompleted=Math.round(progressEvent.loaded*100/progressEvent.total);setProgress(percentCompleted);}});if(response.data.success){// Navigate to results page for this scan\nnavigate(`/results/${response.data.job_id}`);}else{setError(response.data.error||'Unknown error occurred');setIsUploading(false);}}catch(error){var _error$response,_error$response$data;console.error('Upload error:',error);setError(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Error uploading file. Please try again.');setIsUploading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-between items-center\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-semibold text-gray-900\",children:\"Upload CT Scan\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white shadow rounded-lg p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"CT Scan File (MHD, NIFTI, DICOM)\"}),/*#__PURE__*/_jsx(\"div\",{...getRootProps(),className:`mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-dashed rounded-md cursor-pointer ${isDragActive?'border-indigo-500 bg-indigo-50':'border-gray-300'}`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-1 text-center\",children:[/*#__PURE__*/_jsx(CloudArrowUpIcon,{className:\"mx-auto h-12 w-12 text-gray-400\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex text-sm text-gray-600\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"file-upload\",...getInputProps()}),/*#__PURE__*/_jsx(\"p\",{className:\"pl-1\",children:\"Drag and drop your CT scan file here, or click to select file\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500\",children:\"MHD, NIFTI (.nii.gz, .nii), or DICOM files\"})]})}),files.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500\",children:[\"Selected file: \",/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-indigo-600\",children:files[0].name}),\" (\",(files[0].size/(1024*1024)).toFixed(2),\" MB)\"]})})]}),files.length>0&&files[0].name.endsWith('.mhd')&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"RAW File (required for MHD format)\"}),/*#__PURE__*/_jsx(\"div\",{...getRawRootProps(),className:`mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-dashed rounded-md cursor-pointer ${isRawDragActive?'border-indigo-500 bg-indigo-50':'border-gray-300'}`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-1 text-center\",children:[/*#__PURE__*/_jsx(CloudArrowUpIcon,{className:\"mx-auto h-12 w-12 text-gray-400\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex text-sm text-gray-600\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"raw-file-upload\",...getRawInputProps()}),/*#__PURE__*/_jsx(\"p\",{className:\"pl-1\",children:\"Drag and drop the associated RAW file here, or click to select file\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500\",children:\"Required for MHD format\"})]})}),rawFile&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500\",children:[\"Selected RAW file: \",/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-indigo-600\",children:rawFile.name}),\" (\",(rawFile.size/(1024*1024)).toFixed(2),\" MB)\"]})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"Processing Options\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"confidence\",className:\"form-label\",children:[\"Confidence Threshold: \",confidence]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",id:\"confidence\",name:\"confidence\",min:\"0.1\",max:\"0.9\",step:\"0.1\",value:confidence,onChange:e=>setConfidence(parseFloat(e.target.value)),className:\"mt-1 w-full\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-gray-500\",children:\"Higher values are more selective (fewer false positives, might miss subtle nodules). Lower values detect more potential nodules (more false positives).\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center h-5\",children:/*#__PURE__*/_jsx(\"input\",{id:\"lungs-only\",name:\"lungs-only\",type:\"checkbox\",checked:lungsOnly,onChange:e=>setLungsOnly(e.target.checked),className:\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-3 text-sm\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"lungs-only\",className:\"font-medium text-gray-700\",children:\"Lungs Segmentation Only\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:\"Only perform lung segmentation without nodule detection\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center h-5\",children:/*#__PURE__*/_jsx(\"input\",{id:\"no-segmentation\",name:\"no-segmentation\",type:\"checkbox\",checked:noSegmentation,onChange:e=>setNoSegmentation(e.target.checked),className:\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-3 text-sm\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"no-segmentation\",className:\"font-medium text-gray-700\",children:\"Skip Nodule Segmentation\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:\"Detect nodules but skip the detailed segmentation step\"})]})]})]})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"rounded-md bg-red-50 p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(ExclamationCircleIcon,{className:\"h-5 w-5 text-red-400\"}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-3\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-medium text-red-800\",children:error})})]})}),isUploading&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-medium text-gray-700\",children:\"Uploading and processing...\"}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-2.5 mt-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-indigo-600 h-2.5 rounded-full transition-all duration-300\",style:{width:`${progress}%`}})}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:progress<100?'Uploading...':'Processing scan... This may take several minutes'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-end\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleUpload,disabled:isUploading||files.length===0,className:`btn-primary ${isUploading||files.length===0?'opacity-50 cursor-not-allowed':''}`,children:isUploading?'Processing...':'Upload and Process'})})]})})]});};export default UploadPage;","map":{"version":3,"names":["React","useState","useNavigate","axios","useDropzone","CloudArrowUpIcon","ExclamationCircleIcon","jsx","_jsx","jsxs","_jsxs","UploadPage","files","setFiles","rawFile","setRawFile","confidence","setConfidence","lungsOnly","setLungsOnly","noSegmentation","setNoSegmentation","isUploading","setIsUploading","error","setError","progress","setProgress","navigate","getRootProps","getInputProps","isDragActive","accept","multiple","onDrop","acceptedFiles","mhdFile","find","file","name","endsWith","getRawRootProps","getRawInputProps","isRawDragActive","length","handleUpload","formData","FormData","append","response","post","headers","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","data","success","job_id","_error$response","_error$response$data","console","className","children","id","size","toFixed","htmlFor","type","min","max","step","value","onChange","e","parseFloat","target","checked","style","width","onClick","disabled"],"sources":["D:/Segmentation/pipeline/webapp/static/src/pages/UploadPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { CloudArrowUpIcon, ExclamationCircleIcon } from '@heroicons/react/24/outline';\r\n\r\nconst UploadPage = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [rawFile, setRawFile] = useState(null);\r\n  const [confidence, setConfidence] = useState(0.5);\r\n  const [lungsOnly, setLungsOnly] = useState(false);\r\n  const [noSegmentation, setNoSegmentation] = useState(false);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const navigate = useNavigate();\r\n\r\n  // Configure dropzone for CT scan files\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    accept: {\r\n      'application/octet-stream': ['.mhd', '.raw', '.nii.gz', '.nii'],\r\n      'application/dicom': ['.dcm'],\r\n    },\r\n    multiple: false,\r\n    onDrop: (acceptedFiles) => {\r\n      // First check if we're dealing with an MHD file\r\n      const mhdFile = acceptedFiles.find(file => file.name.endsWith('.mhd'));\r\n      \r\n      if (mhdFile) {\r\n        setFiles([mhdFile]);\r\n        // Let the user know they need to upload the associated RAW file\r\n        setError(\"You've uploaded an MHD file. Please also upload the associated RAW file.\");\r\n      } else {\r\n        setFiles(acceptedFiles);\r\n        setError(null);\r\n      }\r\n    },\r\n  });\r\n\r\n  // Configure dropzone for RAW files (only needed when an MHD file is selected)\r\n  const { getRootProps: getRawRootProps, getInputProps: getRawInputProps, isDragActive: isRawDragActive } = useDropzone({\r\n    accept: {\r\n      'application/octet-stream': ['.raw'],\r\n    },\r\n    multiple: false,\r\n    onDrop: (acceptedFiles) => {\r\n      if (acceptedFiles.length > 0) {\r\n        setRawFile(acceptedFiles[0]);\r\n        setError(null);\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleUpload = async () => {\r\n    if (files.length === 0) {\r\n      setError('Please select a file to upload');\r\n      return;\r\n    }\r\n\r\n    // If user selected an MHD file but no RAW file, show error\r\n    if (files[0].name.endsWith('.mhd') && !rawFile) {\r\n      setError('Please upload the associated RAW file for your MHD file');\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    setProgress(0);\r\n    setError(null);\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', files[0]);\r\n    \r\n    // Add RAW file if present\r\n    if (rawFile) {\r\n      formData.append('raw_file', rawFile);\r\n    }\r\n    \r\n    // Add processing options\r\n    formData.append('confidence', confidence);\r\n    formData.append('lungs_only', lungsOnly);\r\n    formData.append('no_segmentation', noSegmentation);\r\n\r\n    try {\r\n      const response = await axios.post('/api/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setProgress(percentCompleted);\r\n        },\r\n      });\r\n\r\n      if (response.data.success) {\r\n        // Navigate to results page for this scan\r\n        navigate(`/results/${response.data.job_id}`);\r\n      } else {\r\n        setError(response.data.error || 'Unknown error occurred');\r\n        setIsUploading(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Upload error:', error);\r\n      setError(error.response?.data?.error || 'Error uploading file. Please try again.');\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h1 className=\"text-2xl font-semibold text-gray-900\">Upload CT Scan</h1>\r\n      </div>\r\n\r\n      <div className=\"bg-white shadow rounded-lg p-6\">\r\n        <div className=\"space-y-6\">\r\n          {/* Main file dropzone */}\r\n          <div>\r\n            <label className=\"form-label\">CT Scan File (MHD, NIFTI, DICOM)</label>\r\n            <div\r\n              {...getRootProps()}\r\n              className={`mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-dashed rounded-md cursor-pointer ${\r\n                isDragActive ? 'border-indigo-500 bg-indigo-50' : 'border-gray-300'\r\n              }`}\r\n            >\r\n              <div className=\"space-y-1 text-center\">\r\n                <CloudArrowUpIcon className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n                <div className=\"flex text-sm text-gray-600\">\r\n                  <input id=\"file-upload\" {...getInputProps()} />\r\n                  <p className=\"pl-1\">\r\n                    Drag and drop your CT scan file here, or click to select file\r\n                  </p>\r\n                </div>\r\n                <p className=\"text-xs text-gray-500\">MHD, NIFTI (.nii.gz, .nii), or DICOM files</p>\r\n              </div>\r\n            </div>\r\n            {files.length > 0 && (\r\n              <div className=\"mt-2\">\r\n                <p className=\"text-sm text-gray-500\">\r\n                  Selected file: <span className=\"font-medium text-indigo-600\">{files[0].name}</span> ({(files[0].size / (1024 * 1024)).toFixed(2)} MB)\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* RAW file dropzone (only shown when MHD file is selected) */}\r\n          {files.length > 0 && files[0].name.endsWith('.mhd') && (\r\n            <div>\r\n              <label className=\"form-label\">RAW File (required for MHD format)</label>\r\n              <div\r\n                {...getRawRootProps()}\r\n                className={`mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-dashed rounded-md cursor-pointer ${\r\n                  isRawDragActive ? 'border-indigo-500 bg-indigo-50' : 'border-gray-300'\r\n                }`}\r\n              >\r\n                <div className=\"space-y-1 text-center\">\r\n                  <CloudArrowUpIcon className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n                  <div className=\"flex text-sm text-gray-600\">\r\n                    <input id=\"raw-file-upload\" {...getRawInputProps()} />\r\n                    <p className=\"pl-1\">\r\n                      Drag and drop the associated RAW file here, or click to select file\r\n                    </p>\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500\">Required for MHD format</p>\r\n                </div>\r\n              </div>\r\n              {rawFile && (\r\n                <div className=\"mt-2\">\r\n                  <p className=\"text-sm text-gray-500\">\r\n                    Selected RAW file: <span className=\"font-medium text-indigo-600\">{rawFile.name}</span> ({(rawFile.size / (1024 * 1024)).toFixed(2)} MB)\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {/* Processing options */}\r\n          <div>\r\n            <h3 className=\"text-lg font-medium text-gray-900\">Processing Options</h3>\r\n            <div className=\"mt-4 space-y-4\">\r\n              <div>\r\n                <label htmlFor=\"confidence\" className=\"form-label\">\r\n                  Confidence Threshold: {confidence}\r\n                </label>\r\n                <input\r\n                  type=\"range\"\r\n                  id=\"confidence\"\r\n                  name=\"confidence\"\r\n                  min=\"0.1\"\r\n                  max=\"0.9\"\r\n                  step=\"0.1\"\r\n                  value={confidence}\r\n                  onChange={(e) => setConfidence(parseFloat(e.target.value))}\r\n                  className=\"mt-1 w-full\"\r\n                />\r\n                <p className=\"mt-1 text-sm text-gray-500\">\r\n                  Higher values are more selective (fewer false positives, might miss subtle nodules).\r\n                  Lower values detect more potential nodules (more false positives).\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"flex items-start\">\r\n                <div className=\"flex items-center h-5\">\r\n                  <input\r\n                    id=\"lungs-only\"\r\n                    name=\"lungs-only\"\r\n                    type=\"checkbox\"\r\n                    checked={lungsOnly}\r\n                    onChange={(e) => setLungsOnly(e.target.checked)}\r\n                    className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\r\n                  />\r\n                </div>\r\n                <div className=\"ml-3 text-sm\">\r\n                  <label htmlFor=\"lungs-only\" className=\"font-medium text-gray-700\">\r\n                    Lungs Segmentation Only\r\n                  </label>\r\n                  <p className=\"text-gray-500\">\r\n                    Only perform lung segmentation without nodule detection\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-start\">\r\n                <div className=\"flex items-center h-5\">\r\n                  <input\r\n                    id=\"no-segmentation\"\r\n                    name=\"no-segmentation\"\r\n                    type=\"checkbox\"\r\n                    checked={noSegmentation}\r\n                    onChange={(e) => setNoSegmentation(e.target.checked)}\r\n                    className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\r\n                  />\r\n                </div>\r\n                <div className=\"ml-3 text-sm\">\r\n                  <label htmlFor=\"no-segmentation\" className=\"font-medium text-gray-700\">\r\n                    Skip Nodule Segmentation\r\n                  </label>\r\n                  <p className=\"text-gray-500\">\r\n                    Detect nodules but skip the detailed segmentation step\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Error message */}\r\n          {error && (\r\n            <div className=\"rounded-md bg-red-50 p-4\">\r\n              <div className=\"flex\">\r\n                <ExclamationCircleIcon className=\"h-5 w-5 text-red-400\" />\r\n                <div className=\"ml-3\">\r\n                  <h3 className=\"text-sm font-medium text-red-800\">{error}</h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Upload progress */}\r\n          {isUploading && (\r\n            <div className=\"mt-4\">\r\n              <h4 className=\"text-sm font-medium text-gray-700\">Uploading and processing...</h4>\r\n              <div className=\"w-full bg-gray-200 rounded-full h-2.5 mt-2\">\r\n                <div \r\n                  className=\"bg-indigo-600 h-2.5 rounded-full transition-all duration-300\"\r\n                  style={{ width: `${progress}%` }}\r\n                ></div>\r\n              </div>\r\n              <p className=\"text-xs text-gray-500 mt-1\">\r\n                {progress < 100 ? 'Uploading...' : 'Processing scan... This may take several minutes'}\r\n              </p>\r\n            </div>\r\n          )}\r\n\r\n          {/* Submit button */}\r\n          <div className=\"flex justify-end\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleUpload}\r\n              disabled={isUploading || files.length === 0}\r\n              className={`btn-primary ${\r\n                isUploading || files.length === 0 ? 'opacity-50 cursor-not-allowed' : ''\r\n              }`}\r\n            >\r\n              {isUploading ? 'Processing...' : 'Upload and Process'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}