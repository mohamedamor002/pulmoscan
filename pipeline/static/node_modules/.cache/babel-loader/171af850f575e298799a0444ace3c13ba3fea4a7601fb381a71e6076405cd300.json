{"ast":null,"code":"var _jsxFileName = \"D:\\\\Segmentation\\\\pipeline\\\\webapp\\\\static\\\\src\\\\pages\\\\UploadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { useDropzone } from 'react-dropzone';\nimport { CloudArrowUpIcon, ExclamationCircleIcon, InformationCircleIcon } from '@heroicons/react/24/outline';\nimport { useTheme } from '../contexts/ThemeContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UploadPage = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [rawFile, setRawFile] = useState(null);\n  const [confidence, setConfidence] = useState(0.5);\n  const [noSegmentation, setNoSegmentation] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [processingProgress, setProcessingProgress] = useState(0);\n  const [showRawUpload, setShowRawUpload] = useState(false);\n  const navigate = useNavigate();\n  const {\n    darkMode\n  } = useTheme();\n\n  // Configure dropzone for CT scan files\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    accept: {\n      'application/octet-stream': ['.mhd', '.raw', '.nii.gz', '.nii'],\n      'application/dicom': ['.dcm']\n    },\n    multiple: true,\n    // Allow multiple files to select both .mhd and .raw together\n    onDrop: acceptedFiles => {\n      // Sort files to identify MHD and RAW files\n      const mhdFile = acceptedFiles.find(file => file.name.toLowerCase().endsWith('.mhd'));\n      const rawFile = acceptedFiles.find(file => file.name.toLowerCase().endsWith('.raw'));\n      if (mhdFile && rawFile) {\n        // Both files uploaded together\n        setFiles([mhdFile]);\n        setRawFile(rawFile);\n        setShowRawUpload(false);\n        setError(null);\n      } else if (mhdFile) {\n        // Only MHD file uploaded\n        setFiles([mhdFile]);\n        setShowRawUpload(true);\n        setError(\"You've uploaded an MHD file. Please also upload the associated RAW file.\");\n      } else if (rawFile) {\n        // Only RAW file uploaded\n        setRawFile(rawFile);\n        setShowRawUpload(true);\n        if (files.length === 0 || !files[0].name.toLowerCase().endsWith('.mhd')) {\n          setError(\"You've uploaded a RAW file. Please also upload the associated MHD file.\");\n        } else {\n          setError(null);\n        }\n      } else if (acceptedFiles.length > 0) {\n        // Other valid file types (NIFTI, DICOM)\n        setFiles(acceptedFiles);\n        setShowRawUpload(false);\n        setError(null);\n      }\n    }\n  });\n\n  // Configure dropzone specifically for RAW files\n  const {\n    getRootProps: getRawRootProps,\n    getInputProps: getRawInputProps,\n    isDragActive: isRawDragActive\n  } = useDropzone({\n    accept: {\n      'application/octet-stream': ['.raw']\n    },\n    multiple: false,\n    onDrop: acceptedFiles => {\n      if (acceptedFiles.length > 0) {\n        setRawFile(acceptedFiles[0]);\n        setError(null);\n      }\n    }\n  });\n  const handleUpload = async () => {\n    if (files.length === 0) {\n      setError('Please select a file to upload');\n      return;\n    }\n\n    // If user selected an MHD file but no RAW file, show error\n    if (files[0].name.toLowerCase().endsWith('.mhd') && !rawFile) {\n      setError('Please upload the associated RAW file for your MHD file');\n      return;\n    }\n\n    // Validate file sizes\n    const maxSizeInBytes = 300 * 1024 * 1024; // 300MB\n    if (files[0].size > maxSizeInBytes) {\n      setError(`File size exceeds the maximum limit of 300MB. Your file is ${(files[0].size / (1024 * 1024)).toFixed(2)}MB.`);\n      return;\n    }\n    if (rawFile && rawFile.size > maxSizeInBytes) {\n      setError(`RAW file size exceeds the maximum limit of 300MB. Your file is ${(rawFile.size / (1024 * 1024)).toFixed(2)}MB.`);\n      return;\n    }\n\n    // Check file name patterns for MHD and RAW to ensure they match\n    if (files[0].name.toLowerCase().endsWith('.mhd') && rawFile) {\n      const mhdBaseName = files[0].name.toLowerCase().slice(0, -4); // Remove .mhd\n      const rawBaseName = rawFile.name.toLowerCase().slice(0, -4); // Remove .raw\n\n      if (mhdBaseName !== rawBaseName && !window.confirm(`The MHD file (${files[0].name}) and RAW file (${rawFile.name}) have different base names. Are you sure they belong together?`)) {\n        setError('Please make sure your MHD and RAW files have matching names');\n        return;\n      }\n    }\n    setIsUploading(true);\n    setProgress(0);\n    setProcessingProgress(0);\n    setError(null);\n    const formData = new FormData();\n    formData.append('file', files[0]);\n\n    // Add RAW file if present\n    if (rawFile) {\n      formData.append('raw_file', rawFile);\n    }\n\n    // Ensure confidence value is a string with proper format\n    const confidenceValue = confidence.toString();\n    console.log(\"Uploading with confidence value:\", confidenceValue);\n    formData.append('confidence', confidenceValue);\n\n    // Debug the form data being sent\n    for (let pair of formData.entries()) {\n      console.log(pair[0] + ': ' + pair[1]);\n    }\n\n    // Remove lungs_only option and only send no_segmentation\n    formData.append('lungs_only', 'false');\n    formData.append('no_segmentation', noSegmentation.toString());\n    try {\n      // Upload phase\n      const response = await axios.post('/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setProgress(percentCompleted);\n\n          // When upload is complete (100%), start the processing progress simulation\n          if (percentCompleted === 100) {\n            setIsUploading(false);\n            setIsProcessing(true);\n\n            // Simulate processing progress\n            // This is just a visual indicator since we don't have real-time backend progress updates\n            let currentProgress = 0;\n            const processingInterval = setInterval(() => {\n              // Increment progress in a non-linear way to simulate real processing\n              // Start slower, then speed up, then slow down again at the end\n              if (currentProgress < 30) {\n                currentProgress += 1;\n              } else if (currentProgress < 70) {\n                currentProgress += 2;\n              } else if (currentProgress < 90) {\n                currentProgress += 0.5;\n              } else if (currentProgress < 98) {\n                currentProgress += 0.2;\n              }\n              if (currentProgress >= 99) {\n                clearInterval(processingInterval);\n                currentProgress = 99; // Let the final 100% happen when we get the response\n              }\n              setProcessingProgress(Math.min(99, currentProgress));\n            }, 300); // Update every 300ms\n          }\n        }\n      });\n      if (response.data.success) {\n        // Set processing to complete\n        setProcessingProgress(100);\n        setIsProcessing(false);\n\n        // Navigate to results page for this scan\n        setTimeout(() => {\n          navigate(`/results/${response.data.job_id}`);\n        }, 500); // Short delay to show 100% before navigating\n      } else {\n        setError(response.data.error || 'Unknown error occurred');\n        setIsUploading(false);\n        setIsProcessing(false);\n      }\n    } catch (error) {\n      console.error('Upload error:', error);\n\n      // Provide more detailed error messages based on the error\n      let errorMessage = 'Error uploading file. Please try again.';\n      if (error.response) {\n        // Server responded with an error\n        console.error('Error response:', error.response.data);\n        if (error.response.status === 413) {\n          errorMessage = 'File too large. The maximum allowed size is 300MB.';\n        } else if (error.response.data && error.response.data.error) {\n          errorMessage = error.response.data.error;\n        } else {\n          errorMessage = `Server error (${error.response.status}). Please try again later.`;\n        }\n      } else if (error.request) {\n        // Request made but no response received\n        errorMessage = 'No response from server. Please check your network connection.';\n      }\n      setError(errorMessage);\n      setIsUploading(false);\n      setIsProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `space-y-6 ${darkMode ? 'text-white' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: `text-2xl font-semibold ${darkMode ? 'text-white' : 'text-gray-900'}`,\n        children: \"Upload CT Scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${darkMode ? 'bg-gray-800' : 'bg-white'} shadow rounded-lg p-6 max-w-4xl mx-auto`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${darkMode ? 'bg-blue-900' : 'bg-blue-50'} p-4 rounded-md mb-4`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(InformationCircleIcon, {\n              className: `h-5 w-5 ${darkMode ? 'text-blue-300' : 'text-blue-400'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `ml-3 text-sm ${darkMode ? 'text-blue-200' : 'text-blue-700'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"File Formats:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 20\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-disc pl-5 mt-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"MetaImage (.mhd + .raw):\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 23\n                  }, this), \" Both files must be uploaded together\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"NIFTI (.nii.gz or .nii):\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 23\n                  }, this), \" Single file upload\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"DICOM (.dcm):\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 23\n                  }, this), \" Single file upload\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: `block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`,\n            children: showRawUpload && rawFile ? \"MHD File\" : \"CT Scan File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ...getRootProps(),\n            className: `mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-dashed rounded-md cursor-pointer ${isDragActive ? 'border-indigo-500 bg-indigo-50' : darkMode ? 'border-gray-600 hover:border-gray-500' : 'border-gray-300'} ${darkMode ? 'bg-gray-700' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1 text-center\",\n              children: [/*#__PURE__*/_jsxDEV(CloudArrowUpIcon, {\n                className: `mx-auto h-12 w-12 ${darkMode ? 'text-gray-400' : 'text-gray-400'}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `flex text-sm ${darkMode ? 'text-gray-300' : 'text-gray-600'}`,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"file-upload\",\n                  ...getInputProps()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"pl-1\",\n                  children: [\"Drag and drop your CT scan file\", files.length === 0 && rawFile ? \" (MHD)\" : \"\", \" here, or click to select\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: `text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`,\n                children: showRawUpload && rawFile ? \"Please upload the MHD file that matches your RAW file\" : \"You can upload both MHD+RAW together by selecting both files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `text-sm ${darkMode ? 'text-gray-300' : 'text-gray-500'}`,\n              children: [\"Selected file: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `font-medium ${darkMode ? 'text-indigo-400' : 'text-indigo-600'}`,\n                children: files[0].name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 34\n              }, this), \" (\", (files[0].size / (1024 * 1024)).toFixed(2), \" MB)\", rawFile && files[0].name.toLowerCase().endsWith('.mhd') && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [\" + Selected RAW file: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `font-medium ${darkMode ? 'text-indigo-400' : 'text-indigo-600'}`,\n                  children: rawFile.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 45\n                }, this), \" (\", (rawFile.size / (1024 * 1024)).toFixed(2), \" MB)\"]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), (showRawUpload || files.length > 0 && files[0].name.toLowerCase().endsWith('.mhd') && !rawFile) && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: `block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`,\n            children: [\"RAW File \", rawFile && files.length === 0 ? \"(Needs matching MHD file)\" : \"(Required for MHD format)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ...getRawRootProps(),\n            className: `mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-dashed rounded-md cursor-pointer ${isRawDragActive ? 'border-indigo-500 bg-indigo-50' : darkMode ? 'border-gray-600 hover:border-gray-500' : 'border-gray-300'} ${darkMode ? 'bg-gray-700' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1 text-center\",\n              children: [/*#__PURE__*/_jsxDEV(CloudArrowUpIcon, {\n                className: `mx-auto h-12 w-12 ${darkMode ? 'text-gray-400' : 'text-gray-400'}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `flex text-sm ${darkMode ? 'text-gray-300' : 'text-gray-600'}`,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"raw-file-upload\",\n                  ...getRawInputProps()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"pl-1\",\n                  children: \"Drag and drop the associated RAW file here, or click to select file\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: `text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`,\n                children: \"Required for MHD format\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), rawFile && !files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `text-sm ${darkMode ? 'text-gray-300' : 'text-gray-500'}`,\n              children: [\"Selected RAW file: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `font-medium ${darkMode ? 'text-indigo-400' : 'text-indigo-600'}`,\n                children: rawFile.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 40\n              }, this), \" (\", (rawFile.size / (1024 * 1024)).toFixed(2), \" MB)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: `text-lg font-medium ${darkMode ? 'text-white' : 'text-gray-900'}`,\n            children: \"Processing Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"confidence\",\n                className: `block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`,\n                children: [\"Confidence Threshold: \", confidence.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`,\n                  children: \"0.0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"range\",\n                  id: \"confidence\",\n                  name: \"confidence\",\n                  min: \"0.01\",\n                  max: \"0.99\",\n                  step: \"0.01\",\n                  value: confidence,\n                  onChange: e => {\n                    const value = parseFloat(e.target.value);\n                    console.log(\"Confidence slider changed to:\", value);\n                    setConfidence(value);\n                  },\n                  className: `w-full h-2 ${darkMode ? 'bg-gray-600' : 'bg-gray-200'} rounded-lg appearance-none cursor-pointer`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`,\n                  children: \"1.0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: `mt-1 text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`,\n                children: \"Higher values result in fewer, more confident nodule detections. Lower values show more potential nodules with lower confidence.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-start\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center h-5\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"no-segmentation\",\n                  name: \"no-segmentation\",\n                  type: \"checkbox\",\n                  checked: noSegmentation,\n                  onChange: e => setNoSegmentation(e.target.checked),\n                  className: `focus:ring-indigo-500 h-4 w-4 text-indigo-600 ${darkMode ? 'bg-gray-700 border-gray-500' : 'border-gray-300'} rounded`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ml-3 text-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"no-segmentation\",\n                  className: `font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'}`,\n                  children: \"Skip Nodule Segmentation\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: `${darkMode ? 'text-gray-400' : 'text-gray-500'}`,\n                  children: \"Detect nodules but skip the detailed segmentation step\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `rounded-md ${darkMode ? 'bg-red-900' : 'bg-red-50'} p-4`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(ExclamationCircleIcon, {\n              className: `h-5 w-5 ${darkMode ? 'text-red-300' : 'text-red-400'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-3\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: `text-sm font-medium ${darkMode ? 'text-red-200' : 'text-red-800'}`,\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleUpload,\n            disabled: isUploading || isProcessing || files.length === 0 && !rawFile || files.length > 0 && files[0].name.toLowerCase().endsWith('.mhd') && !rawFile,\n            className: `w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white ${isUploading || isProcessing || files.length === 0 && !rawFile || files.length > 0 && files[0].name.toLowerCase().endsWith('.mhd') && !rawFile ? 'bg-indigo-300 dark:bg-indigo-900 cursor-not-allowed' : 'bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'}`,\n            children: isUploading ? 'Uploading...' : isProcessing ? 'Processing...' : 'Upload and Process'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this), isUploading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative pt-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs font-semibold inline-block text-indigo-600\",\n                  children: [\"Upload Progress: \", progress, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs font-semibold inline-block text-gray-500\",\n                  children: \"Phase 1/2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"overflow-hidden h-2 mb-4 text-xs flex rounded bg-indigo-200\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: `${progress}%`\n                  },\n                  className: \"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-indigo-600\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-gray-500 text-center\",\n                children: \"Uploading your CT scan to the server. Please wait...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this), isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative pt-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs font-semibold inline-block text-green-600\",\n                  children: [\"Processing Progress: \", processingProgress, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs font-semibold inline-block text-gray-500\",\n                  children: \"Phase 2/2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"overflow-hidden h-2 mb-4 text-xs flex rounded bg-green-200\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: `${processingProgress}%`\n                  },\n                  className: \"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-green-600\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-gray-500 text-center\",\n                children: \"Analyzing the CT scan with deep learning models. This may take several minutes depending on the scan size.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadPage, \"QiVTYXKd4+/lCn6tHCmXTtbmYOM=\", false, function () {\n  return [useNavigate, useTheme, useDropzone, useDropzone];\n});\n_c = UploadPage;\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","useNavigate","axios","useDropzone","CloudArrowUpIcon","ExclamationCircleIcon","InformationCircleIcon","useTheme","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadPage","_s","files","setFiles","rawFile","setRawFile","confidence","setConfidence","noSegmentation","setNoSegmentation","isUploading","setIsUploading","isProcessing","setIsProcessing","error","setError","progress","setProgress","processingProgress","setProcessingProgress","showRawUpload","setShowRawUpload","navigate","darkMode","getRootProps","getInputProps","isDragActive","accept","multiple","onDrop","acceptedFiles","mhdFile","find","file","name","toLowerCase","endsWith","length","getRawRootProps","getRawInputProps","isRawDragActive","handleUpload","maxSizeInBytes","size","toFixed","mhdBaseName","slice","rawBaseName","window","confirm","formData","FormData","append","confidenceValue","toString","console","log","pair","entries","response","post","headers","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","currentProgress","processingInterval","setInterval","clearInterval","min","data","success","setTimeout","job_id","errorMessage","status","request","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","htmlFor","type","max","step","value","onChange","e","parseFloat","target","checked","onClick","disabled","style","width","_c","$RefreshReg$"],"sources":["D:/Segmentation/pipeline/webapp/static/src/pages/UploadPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { CloudArrowUpIcon, ExclamationCircleIcon, InformationCircleIcon } from '@heroicons/react/24/outline';\r\nimport { useTheme } from '../contexts/ThemeContext';\r\n\r\nconst UploadPage = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [rawFile, setRawFile] = useState(null);\r\n  const [confidence, setConfidence] = useState(0.5);\r\n  const [noSegmentation, setNoSegmentation] = useState(false);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const [processingProgress, setProcessingProgress] = useState(0);\r\n  const [showRawUpload, setShowRawUpload] = useState(false);\r\n  const navigate = useNavigate();\r\n  const { darkMode } = useTheme();\r\n\r\n  // Configure dropzone for CT scan files\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    accept: {\r\n      'application/octet-stream': ['.mhd', '.raw', '.nii.gz', '.nii'],\r\n      'application/dicom': ['.dcm'],\r\n    },\r\n    multiple: true, // Allow multiple files to select both .mhd and .raw together\r\n    onDrop: (acceptedFiles) => {\r\n      // Sort files to identify MHD and RAW files\r\n      const mhdFile = acceptedFiles.find(file => file.name.toLowerCase().endsWith('.mhd'));\r\n      const rawFile = acceptedFiles.find(file => file.name.toLowerCase().endsWith('.raw'));\r\n      \r\n      if (mhdFile && rawFile) {\r\n        // Both files uploaded together\r\n        setFiles([mhdFile]);\r\n        setRawFile(rawFile);\r\n        setShowRawUpload(false);\r\n        setError(null);\r\n      } else if (mhdFile) {\r\n        // Only MHD file uploaded\r\n        setFiles([mhdFile]);\r\n        setShowRawUpload(true);\r\n        setError(\"You've uploaded an MHD file. Please also upload the associated RAW file.\");\r\n      } else if (rawFile) {\r\n        // Only RAW file uploaded\r\n        setRawFile(rawFile);\r\n        setShowRawUpload(true);\r\n        if (files.length === 0 || !files[0].name.toLowerCase().endsWith('.mhd')) {\r\n          setError(\"You've uploaded a RAW file. Please also upload the associated MHD file.\");\r\n        } else {\r\n          setError(null);\r\n        }\r\n      } else if (acceptedFiles.length > 0) {\r\n        // Other valid file types (NIFTI, DICOM)\r\n        setFiles(acceptedFiles);\r\n        setShowRawUpload(false);\r\n        setError(null);\r\n      }\r\n    },\r\n  });\r\n\r\n  // Configure dropzone specifically for RAW files\r\n  const { getRootProps: getRawRootProps, getInputProps: getRawInputProps, isDragActive: isRawDragActive } = useDropzone({\r\n    accept: {\r\n      'application/octet-stream': ['.raw'],\r\n    },\r\n    multiple: false,\r\n    onDrop: (acceptedFiles) => {\r\n      if (acceptedFiles.length > 0) {\r\n        setRawFile(acceptedFiles[0]);\r\n        setError(null);\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleUpload = async () => {\r\n    if (files.length === 0) {\r\n      setError('Please select a file to upload');\r\n      return;\r\n    }\r\n\r\n    // If user selected an MHD file but no RAW file, show error\r\n    if (files[0].name.toLowerCase().endsWith('.mhd') && !rawFile) {\r\n      setError('Please upload the associated RAW file for your MHD file');\r\n      return;\r\n    }\r\n\r\n    // Validate file sizes\r\n    const maxSizeInBytes = 300 * 1024 * 1024; // 300MB\r\n    if (files[0].size > maxSizeInBytes) {\r\n      setError(`File size exceeds the maximum limit of 300MB. Your file is ${(files[0].size / (1024 * 1024)).toFixed(2)}MB.`);\r\n      return;\r\n    }\r\n    \r\n    if (rawFile && rawFile.size > maxSizeInBytes) {\r\n      setError(`RAW file size exceeds the maximum limit of 300MB. Your file is ${(rawFile.size / (1024 * 1024)).toFixed(2)}MB.`);\r\n      return;\r\n    }\r\n\r\n    // Check file name patterns for MHD and RAW to ensure they match\r\n    if (files[0].name.toLowerCase().endsWith('.mhd') && rawFile) {\r\n      const mhdBaseName = files[0].name.toLowerCase().slice(0, -4); // Remove .mhd\r\n      const rawBaseName = rawFile.name.toLowerCase().slice(0, -4);  // Remove .raw\r\n      \r\n      if (mhdBaseName !== rawBaseName && !window.confirm(`The MHD file (${files[0].name}) and RAW file (${rawFile.name}) have different base names. Are you sure they belong together?`)) {\r\n        setError('Please make sure your MHD and RAW files have matching names');\r\n        return;\r\n      }\r\n    }\r\n\r\n    setIsUploading(true);\r\n    setProgress(0);\r\n    setProcessingProgress(0);\r\n    setError(null);\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', files[0]);\r\n    \r\n    // Add RAW file if present\r\n    if (rawFile) {\r\n      formData.append('raw_file', rawFile);\r\n    }\r\n    \r\n    // Ensure confidence value is a string with proper format\r\n    const confidenceValue = confidence.toString();\r\n    console.log(\"Uploading with confidence value:\", confidenceValue);\r\n    formData.append('confidence', confidenceValue);\r\n    \r\n    // Debug the form data being sent\r\n    for (let pair of formData.entries()) {\r\n      console.log(pair[0] + ': ' + pair[1]);\r\n    }\r\n    \r\n    // Remove lungs_only option and only send no_segmentation\r\n    formData.append('lungs_only', 'false');\r\n    formData.append('no_segmentation', noSegmentation.toString());\r\n\r\n    try {\r\n      // Upload phase\r\n      const response = await axios.post('/api/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setProgress(percentCompleted);\r\n          \r\n          // When upload is complete (100%), start the processing progress simulation\r\n          if (percentCompleted === 100) {\r\n            setIsUploading(false);\r\n            setIsProcessing(true);\r\n            \r\n            // Simulate processing progress\r\n            // This is just a visual indicator since we don't have real-time backend progress updates\r\n            let currentProgress = 0;\r\n            const processingInterval = setInterval(() => {\r\n              // Increment progress in a non-linear way to simulate real processing\r\n              // Start slower, then speed up, then slow down again at the end\r\n              if (currentProgress < 30) {\r\n                currentProgress += 1;\r\n              } else if (currentProgress < 70) {\r\n                currentProgress += 2;\r\n              } else if (currentProgress < 90) {\r\n                currentProgress += 0.5;\r\n              } else if (currentProgress < 98) {\r\n                currentProgress += 0.2;\r\n              }\r\n              \r\n              if (currentProgress >= 99) {\r\n                clearInterval(processingInterval);\r\n                currentProgress = 99; // Let the final 100% happen when we get the response\r\n              }\r\n              \r\n              setProcessingProgress(Math.min(99, currentProgress));\r\n            }, 300); // Update every 300ms\r\n          }\r\n        },\r\n      });\r\n\r\n      if (response.data.success) {\r\n        // Set processing to complete\r\n        setProcessingProgress(100);\r\n        setIsProcessing(false);\r\n        \r\n        // Navigate to results page for this scan\r\n        setTimeout(() => {\r\n          navigate(`/results/${response.data.job_id}`);\r\n        }, 500); // Short delay to show 100% before navigating\r\n      } else {\r\n        setError(response.data.error || 'Unknown error occurred');\r\n        setIsUploading(false);\r\n        setIsProcessing(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Upload error:', error);\r\n      \r\n      // Provide more detailed error messages based on the error\r\n      let errorMessage = 'Error uploading file. Please try again.';\r\n      \r\n      if (error.response) {\r\n        // Server responded with an error\r\n        console.error('Error response:', error.response.data);\r\n        if (error.response.status === 413) {\r\n          errorMessage = 'File too large. The maximum allowed size is 300MB.';\r\n        } else if (error.response.data && error.response.data.error) {\r\n          errorMessage = error.response.data.error;\r\n        } else {\r\n          errorMessage = `Server error (${error.response.status}). Please try again later.`;\r\n        }\r\n      } else if (error.request) {\r\n        // Request made but no response received\r\n        errorMessage = 'No response from server. Please check your network connection.';\r\n      }\r\n      \r\n      setError(errorMessage);\r\n      setIsUploading(false);\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`space-y-6 ${darkMode ? 'text-white' : ''}`}>\r\n      <div className=\"flex justify-between items-center\">\r\n        <h1 className={`text-2xl font-semibold ${darkMode ? 'text-white' : 'text-gray-900'}`}>Upload CT Scan</h1>\r\n      </div>\r\n\r\n      <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} shadow rounded-lg p-6 max-w-4xl mx-auto`}>\r\n        <div className=\"space-y-6\">\r\n          {/* MHD/NIFTI/DICOM file info box */}\r\n          <div className={`${darkMode ? 'bg-blue-900' : 'bg-blue-50'} p-4 rounded-md mb-4`}>\r\n            <div className=\"flex\">\r\n              <InformationCircleIcon className={`h-5 w-5 ${darkMode ? 'text-blue-300' : 'text-blue-400'}`} />\r\n              <div className={`ml-3 text-sm ${darkMode ? 'text-blue-200' : 'text-blue-700'}`}>\r\n                <p><strong>File Formats:</strong></p>\r\n                <ul className=\"list-disc pl-5 mt-1\">\r\n                  <li><strong>MetaImage (.mhd + .raw):</strong> Both files must be uploaded together</li>\r\n                  <li><strong>NIFTI (.nii.gz or .nii):</strong> Single file upload</li>\r\n                  <li><strong>DICOM (.dcm):</strong> Single file upload</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Main file dropzone */}\r\n          <div>\r\n            <label className={`block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\r\n              {showRawUpload && rawFile ? \"MHD File\" : \"CT Scan File\"}\r\n            </label>\r\n            <div\r\n              {...getRootProps()}\r\n              className={`mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-dashed rounded-md cursor-pointer ${\r\n                isDragActive \r\n                  ? 'border-indigo-500 bg-indigo-50' \r\n                  : darkMode \r\n                    ? 'border-gray-600 hover:border-gray-500' \r\n                    : 'border-gray-300'\r\n              } ${darkMode ? 'bg-gray-700' : ''}`}\r\n            >\r\n              <div className=\"space-y-1 text-center\">\r\n                <CloudArrowUpIcon className={`mx-auto h-12 w-12 ${darkMode ? 'text-gray-400' : 'text-gray-400'}`} />\r\n                <div className={`flex text-sm ${darkMode ? 'text-gray-300' : 'text-gray-600'}`}>\r\n                  <input id=\"file-upload\" {...getInputProps()} />\r\n                  <p className=\"pl-1\">\r\n                    Drag and drop your CT scan file{files.length === 0 && rawFile ? \" (MHD)\" : \"\"} here, or click to select\r\n                  </p>\r\n                </div>\r\n                <p className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>\r\n                  {showRawUpload && rawFile \r\n                    ? \"Please upload the MHD file that matches your RAW file\" \r\n                    : \"You can upload both MHD+RAW together by selecting both files\"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            {files.length > 0 && (\r\n              <div className=\"mt-2\">\r\n                <p className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-500'}`}>\r\n                  Selected file: <span className={`font-medium ${darkMode ? 'text-indigo-400' : 'text-indigo-600'}`}>{files[0].name}</span> ({(files[0].size / (1024 * 1024)).toFixed(2)} MB)\r\n                  {rawFile && files[0].name.toLowerCase().endsWith('.mhd') && (\r\n                    <> + Selected RAW file: <span className={`font-medium ${darkMode ? 'text-indigo-400' : 'text-indigo-600'}`}>{rawFile.name}</span> ({(rawFile.size / (1024 * 1024)).toFixed(2)} MB)</>\r\n                  )}\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* RAW file dropzone (shown only when MHD file is selected but no RAW file yet) */}\r\n          {(showRawUpload || (files.length > 0 && files[0].name.toLowerCase().endsWith('.mhd') && !rawFile)) && (\r\n            <div>\r\n              <label className={`block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\r\n                RAW File {rawFile && files.length === 0 ? \"(Needs matching MHD file)\" : \"(Required for MHD format)\"}\r\n              </label>\r\n              <div\r\n                {...getRawRootProps()}\r\n                className={`mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-dashed rounded-md cursor-pointer ${\r\n                  isRawDragActive \r\n                    ? 'border-indigo-500 bg-indigo-50' \r\n                    : darkMode \r\n                      ? 'border-gray-600 hover:border-gray-500' \r\n                      : 'border-gray-300'\r\n                } ${darkMode ? 'bg-gray-700' : ''}`}\r\n              >\r\n                <div className=\"space-y-1 text-center\">\r\n                  <CloudArrowUpIcon className={`mx-auto h-12 w-12 ${darkMode ? 'text-gray-400' : 'text-gray-400'}`} />\r\n                  <div className={`flex text-sm ${darkMode ? 'text-gray-300' : 'text-gray-600'}`}>\r\n                    <input id=\"raw-file-upload\" {...getRawInputProps()} />\r\n                    <p className=\"pl-1\">\r\n                      Drag and drop the associated RAW file here, or click to select file\r\n                    </p>\r\n                  </div>\r\n                  <p className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>Required for MHD format</p>\r\n                </div>\r\n              </div>\r\n              {rawFile && !files.length > 0 && (\r\n                <div className=\"mt-2\">\r\n                  <p className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-500'}`}>\r\n                    Selected RAW file: <span className={`font-medium ${darkMode ? 'text-indigo-400' : 'text-indigo-600'}`}>{rawFile.name}</span> ({(rawFile.size / (1024 * 1024)).toFixed(2)} MB)\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {/* Processing options */}\r\n          <div>\r\n            <h3 className={`text-lg font-medium ${darkMode ? 'text-white' : 'text-gray-900'}`}>Processing Options</h3>\r\n            <div className=\"mt-4 space-y-4\">\r\n              <div>\r\n                <label htmlFor=\"confidence\" className={`block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\r\n                  Confidence Threshold: {confidence.toFixed(2)}\r\n                </label>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <span className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>0.0</span>\r\n                  <input\r\n                    type=\"range\"\r\n                    id=\"confidence\"\r\n                    name=\"confidence\"\r\n                    min=\"0.01\"\r\n                    max=\"0.99\"\r\n                    step=\"0.01\"\r\n                    value={confidence}\r\n                    onChange={(e) => {\r\n                      const value = parseFloat(e.target.value);\r\n                      console.log(\"Confidence slider changed to:\", value);\r\n                      setConfidence(value);\r\n                    }}\r\n                    className={`w-full h-2 ${darkMode ? 'bg-gray-600' : 'bg-gray-200'} rounded-lg appearance-none cursor-pointer`}\r\n                  />\r\n                  <span className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>1.0</span>\r\n                </div>\r\n                <p className={`mt-1 text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>\r\n                  Higher values result in fewer, more confident nodule detections. Lower values show more potential nodules with lower confidence.\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"flex items-start\">\r\n                <div className=\"flex items-center h-5\">\r\n                  <input\r\n                    id=\"no-segmentation\"\r\n                    name=\"no-segmentation\"\r\n                    type=\"checkbox\"\r\n                    checked={noSegmentation}\r\n                    onChange={(e) => setNoSegmentation(e.target.checked)}\r\n                    className={`focus:ring-indigo-500 h-4 w-4 text-indigo-600 ${darkMode ? 'bg-gray-700 border-gray-500' : 'border-gray-300'} rounded`}\r\n                  />\r\n                </div>\r\n                <div className=\"ml-3 text-sm\">\r\n                  <label htmlFor=\"no-segmentation\" className={`font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>\r\n                    Skip Nodule Segmentation\r\n                  </label>\r\n                  <p className={`${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>\r\n                    Detect nodules but skip the detailed segmentation step\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Error message */}\r\n          {error && (\r\n            <div className={`rounded-md ${darkMode ? 'bg-red-900' : 'bg-red-50'} p-4`}>\r\n              <div className=\"flex\">\r\n                <ExclamationCircleIcon className={`h-5 w-5 ${darkMode ? 'text-red-300' : 'text-red-400'}`} />\r\n                <div className=\"ml-3\">\r\n                  <h3 className={`text-sm font-medium ${darkMode ? 'text-red-200' : 'text-red-800'}`}>{error}</h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Upload button and progress */}\r\n          <div>\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleUpload}\r\n              disabled={isUploading || isProcessing || (files.length === 0 && !rawFile) || (files.length > 0 && files[0].name.toLowerCase().endsWith('.mhd') && !rawFile)}\r\n              className={`w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white ${\r\n                isUploading || isProcessing || (files.length === 0 && !rawFile) || (files.length > 0 && files[0].name.toLowerCase().endsWith('.mhd') && !rawFile)\r\n                  ? 'bg-indigo-300 dark:bg-indigo-900 cursor-not-allowed'\r\n                  : 'bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\r\n              }`}\r\n            >\r\n              {isUploading ? 'Uploading...' : isProcessing ? 'Processing...' : 'Upload and Process'}\r\n            </button>\r\n            \r\n            {/* Upload progress indicator */}\r\n            {isUploading && (\r\n              <div className=\"mt-4\">\r\n                <div className=\"relative pt-1\">\r\n                  <div className=\"flex justify-between items-center mb-1\">\r\n                    <span className=\"text-xs font-semibold inline-block text-indigo-600\">\r\n                      Upload Progress: {progress}%\r\n                    </span>\r\n                    <span className=\"text-xs font-semibold inline-block text-gray-500\">\r\n                      Phase 1/2\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"overflow-hidden h-2 mb-4 text-xs flex rounded bg-indigo-200\">\r\n                    <div\r\n                      style={{ width: `${progress}%` }}\r\n                      className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-indigo-600\"\r\n                    ></div>\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500 text-center\">\r\n                    Uploading your CT scan to the server. Please wait...\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Processing progress indicator (new) */}\r\n            {isProcessing && (\r\n              <div className=\"mt-4\">\r\n                <div className=\"relative pt-1\">\r\n                  <div className=\"flex justify-between items-center mb-1\">\r\n                    <span className=\"text-xs font-semibold inline-block text-green-600\">\r\n                      Processing Progress: {processingProgress}%\r\n                    </span>\r\n                    <span className=\"text-xs font-semibold inline-block text-gray-500\">\r\n                      Phase 2/2\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"overflow-hidden h-2 mb-4 text-xs flex rounded bg-green-200\">\r\n                    <div\r\n                      style={{ width: `${processingProgress}%` }}\r\n                      className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-green-600\"\r\n                    ></div>\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500 text-center\">\r\n                    Analyzing the CT scan with deep learning models. This may take several minutes depending on the scan size.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}