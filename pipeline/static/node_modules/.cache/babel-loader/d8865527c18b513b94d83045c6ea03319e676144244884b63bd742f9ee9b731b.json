{"ast":null,"code":"var _jsxFileName = \"D:\\\\Segmentation\\\\pipeline\\\\webapp\\\\static\\\\src\\\\pages\\\\UploadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { useDropzone } from 'react-dropzone';\nimport { CloudArrowUpIcon, ExclamationCircleIcon, InformationCircleIcon } from '@heroicons/react/24/outline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPage = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [rawFile, setRawFile] = useState(null);\n  const [confidence, setConfidence] = useState(0.5);\n  const [lungsOnly, setLungsOnly] = useState(false);\n  const [noSegmentation, setNoSegmentation] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n  const [error, setError] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [showRawUpload, setShowRawUpload] = useState(false);\n  const navigate = useNavigate();\n\n  // Configure dropzone for CT scan files\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    accept: {\n      'application/octet-stream': ['.mhd', '.raw', '.nii.gz', '.nii'],\n      'application/dicom': ['.dcm']\n    },\n    multiple: true,\n    // Allow multiple files to select both .mhd and .raw together\n    onDrop: acceptedFiles => {\n      // Sort files to identify MHD and RAW files\n      const mhdFile = acceptedFiles.find(file => file.name.toLowerCase().endsWith('.mhd'));\n      const rawFile = acceptedFiles.find(file => file.name.toLowerCase().endsWith('.raw'));\n      if (mhdFile && rawFile) {\n        // Both files uploaded together\n        setFiles([mhdFile]);\n        setRawFile(rawFile);\n        setShowRawUpload(false);\n        setError(null);\n      } else if (mhdFile) {\n        // Only MHD file uploaded\n        setFiles([mhdFile]);\n        setShowRawUpload(true);\n        setError(\"You've uploaded an MHD file. Please also upload the associated RAW file.\");\n      } else if (rawFile) {\n        // Only RAW file uploaded\n        setRawFile(rawFile);\n        setShowRawUpload(true);\n        if (files.length === 0 || !files[0].name.toLowerCase().endsWith('.mhd')) {\n          setError(\"You've uploaded a RAW file. Please also upload the associated MHD file.\");\n        } else {\n          setError(null);\n        }\n      } else if (acceptedFiles.length > 0) {\n        // Other valid file types (NIFTI, DICOM)\n        setFiles(acceptedFiles);\n        setShowRawUpload(false);\n        setError(null);\n      }\n    }\n  });\n\n  // Configure dropzone specifically for RAW files\n  const {\n    getRootProps: getRawRootProps,\n    getInputProps: getRawInputProps,\n    isDragActive: isRawDragActive\n  } = useDropzone({\n    accept: {\n      'application/octet-stream': ['.raw']\n    },\n    multiple: false,\n    onDrop: acceptedFiles => {\n      if (acceptedFiles.length > 0) {\n        setRawFile(acceptedFiles[0]);\n        setError(null);\n      }\n    }\n  });\n  const handleUpload = async () => {\n    if (files.length === 0) {\n      setError('Please select a file to upload');\n      return;\n    }\n\n    // If user selected an MHD file but no RAW file, show error\n    if (files[0].name.toLowerCase().endsWith('.mhd') && !rawFile) {\n      setError('Please upload the associated RAW file for your MHD file');\n      return;\n    }\n\n    // Validate file sizes\n    const maxSizeInBytes = 300 * 1024 * 1024; // 300MB\n    if (files[0].size > maxSizeInBytes) {\n      setError(`File size exceeds the maximum limit of 300MB. Your file is ${(files[0].size / (1024 * 1024)).toFixed(2)}MB.`);\n      return;\n    }\n    if (rawFile && rawFile.size > maxSizeInBytes) {\n      setError(`RAW file size exceeds the maximum limit of 300MB. Your file is ${(rawFile.size / (1024 * 1024)).toFixed(2)}MB.`);\n      return;\n    }\n\n    // Check file name patterns for MHD and RAW to ensure they match\n    if (files[0].name.toLowerCase().endsWith('.mhd') && rawFile) {\n      const mhdBaseName = files[0].name.toLowerCase().slice(0, -4); // Remove .mhd\n      const rawBaseName = rawFile.name.toLowerCase().slice(0, -4); // Remove .raw\n\n      if (mhdBaseName !== rawBaseName && !confirm(`The MHD file (${files[0].name}) and RAW file (${rawFile.name}) have different base names. Are you sure they belong together?`)) {\n        setError('Please make sure your MHD and RAW files have matching names');\n        return;\n      }\n    }\n    setIsUploading(true);\n    setProgress(0);\n    setError(null);\n    const formData = new FormData();\n    formData.append('file', files[0]);\n\n    // Add RAW file if present\n    if (rawFile) {\n      formData.append('raw_file', rawFile);\n    }\n\n    // Add processing options\n    formData.append('confidence', confidence);\n    formData.append('lungs_only', lungsOnly);\n    formData.append('no_segmentation', noSegmentation);\n    try {\n      const response = await axios.post('/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setProgress(percentCompleted);\n        }\n      });\n      if (response.data.success) {\n        // Navigate to results page for this scan\n        navigate(`/results/${response.data.job_id}`);\n      } else {\n        setError(response.data.error || 'Unknown error occurred');\n        setIsUploading(false);\n      }\n    } catch (error) {\n      console.error('Upload error:', error);\n\n      // Provide more detailed error messages based on the error\n      let errorMessage = 'Error uploading file. Please try again.';\n      if (error.response) {\n        // Server responded with an error\n        console.error('Error response:', error.response.data);\n        if (error.response.status === 413) {\n          errorMessage = 'File too large. The maximum allowed size is 300MB.';\n        } else if (error.response.data && error.response.data.error) {\n          errorMessage = error.response.data.error;\n        } else {\n          errorMessage = `Server error (${error.response.status}). Please try again later.`;\n        }\n      } else if (error.request) {\n        // Request made but no response received\n        errorMessage = 'No response from server. Please check your network connection.';\n      }\n      setError(errorMessage);\n      setIsUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-semibold text-gray-900\",\n        children: \"Upload CT Scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow rounded-lg p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-50 p-4 rounded-md mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(InformationCircleIcon, {\n              className: \"h-5 w-5 text-blue-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-3 text-sm text-blue-700\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"File Formats:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 20\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-disc pl-5 mt-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"MetaImage (.mhd + .raw):\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 23\n                  }, this), \" Both files must be uploaded together\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"NIFTI (.nii.gz or .nii):\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 23\n                  }, this), \" Single file upload\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"DICOM (.dcm):\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 23\n                  }, this), \" Single file upload\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: showRawUpload && rawFile ? \"MHD File\" : \"CT Scan File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ...getRootProps(),\n            className: `mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-dashed rounded-md cursor-pointer ${isDragActive ? 'border-indigo-500 bg-indigo-50' : 'border-gray-300'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1 text-center\",\n              children: [/*#__PURE__*/_jsxDEV(CloudArrowUpIcon, {\n                className: \"mx-auto h-12 w-12 text-gray-400\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex text-sm text-gray-600\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"file-upload\",\n                  ...getInputProps()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"pl-1\",\n                  children: [\"Drag and drop your CT scan file\", files.length === 0 && rawFile ? \" (MHD)\" : \"\", \" here, or click to select\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-gray-500\",\n                children: showRawUpload && rawFile ? \"Please upload the MHD file that matches your RAW file\" : \"You can upload both MHD+RAW together by selecting both files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500\",\n              children: [\"Selected file: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium text-indigo-600\",\n                children: files[0].name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 34\n              }, this), \" (\", (files[0].size / (1024 * 1024)).toFixed(2), \" MB)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), (showRawUpload || files.length > 0 && files[0].name.toLowerCase().endsWith('.mhd')) && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: [\"RAW File \", rawFile && files.length === 0 ? \"(Needs matching MHD file)\" : \"(Required for MHD format)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ...getRawRootProps(),\n            className: `mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-dashed rounded-md cursor-pointer ${isRawDragActive ? 'border-indigo-500 bg-indigo-50' : 'border-gray-300'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1 text-center\",\n              children: [/*#__PURE__*/_jsxDEV(CloudArrowUpIcon, {\n                className: \"mx-auto h-12 w-12 text-gray-400\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex text-sm text-gray-600\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"raw-file-upload\",\n                  ...getRawInputProps()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"pl-1\",\n                  children: \"Drag and drop the associated RAW file here, or click to select file\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-gray-500\",\n                children: \"Required for MHD format\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), rawFile && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500\",\n              children: [\"Selected RAW file: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium text-indigo-600\",\n                children: rawFile.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 40\n              }, this), \" (\", (rawFile.size / (1024 * 1024)).toFixed(2), \" MB)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-gray-900\",\n            children: \"Processing Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"confidence\",\n                className: \"form-label\",\n                children: [\"Confidence Threshold: \", confidence]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                id: \"confidence\",\n                name: \"confidence\",\n                min: \"0.1\",\n                max: \"0.9\",\n                step: \"0.1\",\n                value: confidence,\n                onChange: e => setConfidence(parseFloat(e.target.value)),\n                className: \"mt-1 w-full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-1 text-sm text-gray-500\",\n                children: \"Higher values are more selective (fewer false positives, might miss subtle nodules). Lower values detect more potential nodules (more false positives).\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-start\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center h-5\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"lungs-only\",\n                  name: \"lungs-only\",\n                  type: \"checkbox\",\n                  checked: lungsOnly,\n                  onChange: e => setLungsOnly(e.target.checked),\n                  className: \"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ml-3 text-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"lungs-only\",\n                  className: \"font-medium text-gray-700\",\n                  children: \"Lungs Segmentation Only\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-500\",\n                  children: \"Only perform lung segmentation without nodule detection\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-start\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center h-5\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"no-segmentation\",\n                  name: \"no-segmentation\",\n                  type: \"checkbox\",\n                  checked: noSegmentation,\n                  onChange: e => setNoSegmentation(e.target.checked),\n                  className: \"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ml-3 text-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"no-segmentation\",\n                  className: \"font-medium text-gray-700\",\n                  children: \"Skip Nodule Segmentation\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-500\",\n                  children: \"Detect nodules but skip the detailed segmentation step\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rounded-md bg-red-50 p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(ExclamationCircleIcon, {\n              className: \"h-5 w-5 text-red-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-3\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-sm font-medium text-red-800\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleUpload,\n            disabled: isUploading || files.length === 0 && !rawFile || files.length > 0 && files[0].name.toLowerCase().endsWith('.mhd') && !rawFile,\n            className: `w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white ${isUploading || files.length === 0 && !rawFile || files.length > 0 && files[0].name.toLowerCase().endsWith('.mhd') && !rawFile ? 'bg-indigo-300 cursor-not-allowed' : 'bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'}`,\n            children: isUploading ? 'Processing...' : 'Upload and Process'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), isUploading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative pt-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center mb-1\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs font-semibold inline-block text-indigo-600\",\n                  children: [progress, \"% Complete\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"overflow-hidden h-2 mb-4 text-xs flex rounded bg-indigo-200\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: `${progress}%`\n                  },\n                  className: \"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-indigo-600\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-gray-500 text-center\",\n                children: \"Please wait while we process your CT scan. This may take several minutes.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadPage, \"RdDpQPMjWQMOLu27UXBaIX5fEPA=\", false, function () {\n  return [useNavigate, useDropzone, useDropzone];\n});\n_c = UploadPage;\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","useNavigate","axios","useDropzone","CloudArrowUpIcon","ExclamationCircleIcon","InformationCircleIcon","jsxDEV","_jsxDEV","UploadPage","_s","files","setFiles","rawFile","setRawFile","confidence","setConfidence","lungsOnly","setLungsOnly","noSegmentation","setNoSegmentation","isUploading","setIsUploading","error","setError","progress","setProgress","showRawUpload","setShowRawUpload","navigate","getRootProps","getInputProps","isDragActive","accept","multiple","onDrop","acceptedFiles","mhdFile","find","file","name","toLowerCase","endsWith","length","getRawRootProps","getRawInputProps","isRawDragActive","handleUpload","maxSizeInBytes","size","toFixed","mhdBaseName","slice","rawBaseName","confirm","formData","FormData","append","response","post","headers","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","data","success","job_id","console","errorMessage","status","request","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","htmlFor","type","min","max","step","value","onChange","e","parseFloat","target","checked","onClick","disabled","style","width","_c","$RefreshReg$"],"sources":["D:/Segmentation/pipeline/webapp/static/src/pages/UploadPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { CloudArrowUpIcon, ExclamationCircleIcon, InformationCircleIcon } from '@heroicons/react/24/outline';\r\n\r\nconst UploadPage = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [rawFile, setRawFile] = useState(null);\r\n  const [confidence, setConfidence] = useState(0.5);\r\n  const [lungsOnly, setLungsOnly] = useState(false);\r\n  const [noSegmentation, setNoSegmentation] = useState(false);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const [showRawUpload, setShowRawUpload] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // Configure dropzone for CT scan files\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    accept: {\r\n      'application/octet-stream': ['.mhd', '.raw', '.nii.gz', '.nii'],\r\n      'application/dicom': ['.dcm'],\r\n    },\r\n    multiple: true, // Allow multiple files to select both .mhd and .raw together\r\n    onDrop: (acceptedFiles) => {\r\n      // Sort files to identify MHD and RAW files\r\n      const mhdFile = acceptedFiles.find(file => file.name.toLowerCase().endsWith('.mhd'));\r\n      const rawFile = acceptedFiles.find(file => file.name.toLowerCase().endsWith('.raw'));\r\n      \r\n      if (mhdFile && rawFile) {\r\n        // Both files uploaded together\r\n        setFiles([mhdFile]);\r\n        setRawFile(rawFile);\r\n        setShowRawUpload(false);\r\n        setError(null);\r\n      } else if (mhdFile) {\r\n        // Only MHD file uploaded\r\n        setFiles([mhdFile]);\r\n        setShowRawUpload(true);\r\n        setError(\"You've uploaded an MHD file. Please also upload the associated RAW file.\");\r\n      } else if (rawFile) {\r\n        // Only RAW file uploaded\r\n        setRawFile(rawFile);\r\n        setShowRawUpload(true);\r\n        if (files.length === 0 || !files[0].name.toLowerCase().endsWith('.mhd')) {\r\n          setError(\"You've uploaded a RAW file. Please also upload the associated MHD file.\");\r\n        } else {\r\n          setError(null);\r\n        }\r\n      } else if (acceptedFiles.length > 0) {\r\n        // Other valid file types (NIFTI, DICOM)\r\n        setFiles(acceptedFiles);\r\n        setShowRawUpload(false);\r\n        setError(null);\r\n      }\r\n    },\r\n  });\r\n\r\n  // Configure dropzone specifically for RAW files\r\n  const { getRootProps: getRawRootProps, getInputProps: getRawInputProps, isDragActive: isRawDragActive } = useDropzone({\r\n    accept: {\r\n      'application/octet-stream': ['.raw'],\r\n    },\r\n    multiple: false,\r\n    onDrop: (acceptedFiles) => {\r\n      if (acceptedFiles.length > 0) {\r\n        setRawFile(acceptedFiles[0]);\r\n        setError(null);\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleUpload = async () => {\r\n    if (files.length === 0) {\r\n      setError('Please select a file to upload');\r\n      return;\r\n    }\r\n\r\n    // If user selected an MHD file but no RAW file, show error\r\n    if (files[0].name.toLowerCase().endsWith('.mhd') && !rawFile) {\r\n      setError('Please upload the associated RAW file for your MHD file');\r\n      return;\r\n    }\r\n\r\n    // Validate file sizes\r\n    const maxSizeInBytes = 300 * 1024 * 1024; // 300MB\r\n    if (files[0].size > maxSizeInBytes) {\r\n      setError(`File size exceeds the maximum limit of 300MB. Your file is ${(files[0].size / (1024 * 1024)).toFixed(2)}MB.`);\r\n      return;\r\n    }\r\n    \r\n    if (rawFile && rawFile.size > maxSizeInBytes) {\r\n      setError(`RAW file size exceeds the maximum limit of 300MB. Your file is ${(rawFile.size / (1024 * 1024)).toFixed(2)}MB.`);\r\n      return;\r\n    }\r\n\r\n    // Check file name patterns for MHD and RAW to ensure they match\r\n    if (files[0].name.toLowerCase().endsWith('.mhd') && rawFile) {\r\n      const mhdBaseName = files[0].name.toLowerCase().slice(0, -4); // Remove .mhd\r\n      const rawBaseName = rawFile.name.toLowerCase().slice(0, -4);  // Remove .raw\r\n      \r\n      if (mhdBaseName !== rawBaseName && !confirm(`The MHD file (${files[0].name}) and RAW file (${rawFile.name}) have different base names. Are you sure they belong together?`)) {\r\n        setError('Please make sure your MHD and RAW files have matching names');\r\n        return;\r\n      }\r\n    }\r\n\r\n    setIsUploading(true);\r\n    setProgress(0);\r\n    setError(null);\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', files[0]);\r\n    \r\n    // Add RAW file if present\r\n    if (rawFile) {\r\n      formData.append('raw_file', rawFile);\r\n    }\r\n    \r\n    // Add processing options\r\n    formData.append('confidence', confidence);\r\n    formData.append('lungs_only', lungsOnly);\r\n    formData.append('no_segmentation', noSegmentation);\r\n\r\n    try {\r\n      const response = await axios.post('/api/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setProgress(percentCompleted);\r\n        },\r\n      });\r\n\r\n      if (response.data.success) {\r\n        // Navigate to results page for this scan\r\n        navigate(`/results/${response.data.job_id}`);\r\n      } else {\r\n        setError(response.data.error || 'Unknown error occurred');\r\n        setIsUploading(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Upload error:', error);\r\n      \r\n      // Provide more detailed error messages based on the error\r\n      let errorMessage = 'Error uploading file. Please try again.';\r\n      \r\n      if (error.response) {\r\n        // Server responded with an error\r\n        console.error('Error response:', error.response.data);\r\n        if (error.response.status === 413) {\r\n          errorMessage = 'File too large. The maximum allowed size is 300MB.';\r\n        } else if (error.response.data && error.response.data.error) {\r\n          errorMessage = error.response.data.error;\r\n        } else {\r\n          errorMessage = `Server error (${error.response.status}). Please try again later.`;\r\n        }\r\n      } else if (error.request) {\r\n        // Request made but no response received\r\n        errorMessage = 'No response from server. Please check your network connection.';\r\n      }\r\n      \r\n      setError(errorMessage);\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h1 className=\"text-2xl font-semibold text-gray-900\">Upload CT Scan</h1>\r\n      </div>\r\n\r\n      <div className=\"bg-white shadow rounded-lg p-6\">\r\n        <div className=\"space-y-6\">\r\n          {/* MHD/NIFTI/DICOM file info box */}\r\n          <div className=\"bg-blue-50 p-4 rounded-md mb-4\">\r\n            <div className=\"flex\">\r\n              <InformationCircleIcon className=\"h-5 w-5 text-blue-400\" />\r\n              <div className=\"ml-3 text-sm text-blue-700\">\r\n                <p><strong>File Formats:</strong></p>\r\n                <ul className=\"list-disc pl-5 mt-1\">\r\n                  <li><strong>MetaImage (.mhd + .raw):</strong> Both files must be uploaded together</li>\r\n                  <li><strong>NIFTI (.nii.gz or .nii):</strong> Single file upload</li>\r\n                  <li><strong>DICOM (.dcm):</strong> Single file upload</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Main file dropzone */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              {showRawUpload && rawFile ? \"MHD File\" : \"CT Scan File\"}\r\n            </label>\r\n            <div\r\n              {...getRootProps()}\r\n              className={`mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-dashed rounded-md cursor-pointer ${\r\n                isDragActive ? 'border-indigo-500 bg-indigo-50' : 'border-gray-300'\r\n              }`}\r\n            >\r\n              <div className=\"space-y-1 text-center\">\r\n                <CloudArrowUpIcon className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n                <div className=\"flex text-sm text-gray-600\">\r\n                  <input id=\"file-upload\" {...getInputProps()} />\r\n                  <p className=\"pl-1\">\r\n                    Drag and drop your CT scan file{files.length === 0 && rawFile ? \" (MHD)\" : \"\"} here, or click to select\r\n                  </p>\r\n                </div>\r\n                <p className=\"text-xs text-gray-500\">\r\n                  {showRawUpload && rawFile \r\n                    ? \"Please upload the MHD file that matches your RAW file\" \r\n                    : \"You can upload both MHD+RAW together by selecting both files\"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            {files.length > 0 && (\r\n              <div className=\"mt-2\">\r\n                <p className=\"text-sm text-gray-500\">\r\n                  Selected file: <span className=\"font-medium text-indigo-600\">{files[0].name}</span> ({(files[0].size / (1024 * 1024)).toFixed(2)} MB)\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* RAW file dropzone (shown when MHD file is selected or when we want to show both) */}\r\n          {(showRawUpload || (files.length > 0 && files[0].name.toLowerCase().endsWith('.mhd'))) && (\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                RAW File {rawFile && files.length === 0 ? \"(Needs matching MHD file)\" : \"(Required for MHD format)\"}\r\n              </label>\r\n              <div\r\n                {...getRawRootProps()}\r\n                className={`mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-dashed rounded-md cursor-pointer ${\r\n                  isRawDragActive ? 'border-indigo-500 bg-indigo-50' : 'border-gray-300'\r\n                }`}\r\n              >\r\n                <div className=\"space-y-1 text-center\">\r\n                  <CloudArrowUpIcon className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n                  <div className=\"flex text-sm text-gray-600\">\r\n                    <input id=\"raw-file-upload\" {...getRawInputProps()} />\r\n                    <p className=\"pl-1\">\r\n                      Drag and drop the associated RAW file here, or click to select file\r\n                    </p>\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500\">Required for MHD format</p>\r\n                </div>\r\n              </div>\r\n              {rawFile && (\r\n                <div className=\"mt-2\">\r\n                  <p className=\"text-sm text-gray-500\">\r\n                    Selected RAW file: <span className=\"font-medium text-indigo-600\">{rawFile.name}</span> ({(rawFile.size / (1024 * 1024)).toFixed(2)} MB)\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {/* Processing options */}\r\n          <div>\r\n            <h3 className=\"text-lg font-medium text-gray-900\">Processing Options</h3>\r\n            <div className=\"mt-4 space-y-4\">\r\n              <div>\r\n                <label htmlFor=\"confidence\" className=\"form-label\">\r\n                  Confidence Threshold: {confidence}\r\n                </label>\r\n                <input\r\n                  type=\"range\"\r\n                  id=\"confidence\"\r\n                  name=\"confidence\"\r\n                  min=\"0.1\"\r\n                  max=\"0.9\"\r\n                  step=\"0.1\"\r\n                  value={confidence}\r\n                  onChange={(e) => setConfidence(parseFloat(e.target.value))}\r\n                  className=\"mt-1 w-full\"\r\n                />\r\n                <p className=\"mt-1 text-sm text-gray-500\">\r\n                  Higher values are more selective (fewer false positives, might miss subtle nodules).\r\n                  Lower values detect more potential nodules (more false positives).\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"flex items-start\">\r\n                <div className=\"flex items-center h-5\">\r\n                  <input\r\n                    id=\"lungs-only\"\r\n                    name=\"lungs-only\"\r\n                    type=\"checkbox\"\r\n                    checked={lungsOnly}\r\n                    onChange={(e) => setLungsOnly(e.target.checked)}\r\n                    className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\r\n                  />\r\n                </div>\r\n                <div className=\"ml-3 text-sm\">\r\n                  <label htmlFor=\"lungs-only\" className=\"font-medium text-gray-700\">\r\n                    Lungs Segmentation Only\r\n                  </label>\r\n                  <p className=\"text-gray-500\">\r\n                    Only perform lung segmentation without nodule detection\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-start\">\r\n                <div className=\"flex items-center h-5\">\r\n                  <input\r\n                    id=\"no-segmentation\"\r\n                    name=\"no-segmentation\"\r\n                    type=\"checkbox\"\r\n                    checked={noSegmentation}\r\n                    onChange={(e) => setNoSegmentation(e.target.checked)}\r\n                    className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\r\n                  />\r\n                </div>\r\n                <div className=\"ml-3 text-sm\">\r\n                  <label htmlFor=\"no-segmentation\" className=\"font-medium text-gray-700\">\r\n                    Skip Nodule Segmentation\r\n                  </label>\r\n                  <p className=\"text-gray-500\">\r\n                    Detect nodules but skip the detailed segmentation step\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Error message */}\r\n          {error && (\r\n            <div className=\"rounded-md bg-red-50 p-4\">\r\n              <div className=\"flex\">\r\n                <ExclamationCircleIcon className=\"h-5 w-5 text-red-400\" />\r\n                <div className=\"ml-3\">\r\n                  <h3 className=\"text-sm font-medium text-red-800\">{error}</h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Upload button and progress */}\r\n          <div>\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleUpload}\r\n              disabled={isUploading || (files.length === 0 && !rawFile) || (files.length > 0 && files[0].name.toLowerCase().endsWith('.mhd') && !rawFile)}\r\n              className={`w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white ${\r\n                isUploading || (files.length === 0 && !rawFile) || (files.length > 0 && files[0].name.toLowerCase().endsWith('.mhd') && !rawFile)\r\n                  ? 'bg-indigo-300 cursor-not-allowed'\r\n                  : 'bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\r\n              }`}\r\n            >\r\n              {isUploading ? 'Processing...' : 'Upload and Process'}\r\n            </button>\r\n            \r\n            {isUploading && (\r\n              <div className=\"mt-4\">\r\n                <div className=\"relative pt-1\">\r\n                  <div className=\"text-center mb-1\">\r\n                    <span className=\"text-xs font-semibold inline-block text-indigo-600\">\r\n                      {progress}% Complete\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"overflow-hidden h-2 mb-4 text-xs flex rounded bg-indigo-200\">\r\n                    <div\r\n                      style={{ width: `${progress}%` }}\r\n                      className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-indigo-600\"\r\n                    ></div>\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500 text-center\">\r\n                    Please wait while we process your CT scan. This may take several minutes.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}