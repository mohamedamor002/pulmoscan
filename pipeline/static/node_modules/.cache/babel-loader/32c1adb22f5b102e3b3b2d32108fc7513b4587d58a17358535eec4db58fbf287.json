{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{useNavigate,useLocation}from'react-router-dom';import axios from'axios';import{useDropzone}from'react-dropzone';import{CloudArrowUpIcon,ExclamationCircleIcon,InformationCircleIcon,CheckCircleIcon,XCircleIcon,ViewfinderCircleIcon,XMarkIcon}from'@heroicons/react/24/outline';import{useTheme}from'../contexts/ThemeContext';import InteractiveViewer from'../components/InteractiveViewer';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const UploadPage=()=>{const[files,setFiles]=useState([]);const[rawFile,setRawFile]=useState(null);const[confidence,setConfidence]=useState(0.5);const[isUploading,setIsUploading]=useState(false);const[isProcessing,setIsProcessing]=useState(false);const[error,setError]=useState(null);const[progress,setProgress]=useState(0);const[processingProgress,setProcessingProgress]=useState(0);const[showRawUpload,setShowRawUpload]=useState(false);const[previewResult,setPreviewResult]=useState(null);const[showPreview,setShowPreview]=useState(false);const[selectedNoduleId,setSelectedNoduleId]=useState(null);const[showLeaveConfirmation,setShowLeaveConfirmation]=useState(false);const[showPatientForm,setShowPatientForm]=useState(false);const[patientInfo,setPatientInfo]=useState({name:'',age:'',description:''});const[isNavigating,setIsNavigating]=useState(false);const[pendingNavigation,setPendingNavigation]=useState(null);const navigate=useNavigate();const location=useLocation();const{darkMode}=useTheme();// Track current location to detect changes\nconst[prevLocation,setPrevLocation]=useState(null);// Handle location changes to detect navigation attempts\nuseEffect(()=>{// Skip on first render\nif(prevLocation===null){setPrevLocation(location);return;}// If the location has changed and we haven't explicitly allowed navigation\nif(location!==prevLocation&&!isNavigating&&showPreview&&previewResult){// Block navigation by going back to previous location\n// This happens synchronously, before the confirmation dialog\nnavigate(-1);// Show confirmation dialog\nsetShowLeaveConfirmation(true);setPendingNavigation(location.pathname+location.search);return;}// Update the previous location\nsetPrevLocation(location);},[location,prevLocation,isNavigating,showPreview,previewResult,navigate]);// Browser back/refresh confirmation\nuseEffect(()=>{const handleBeforeUnload=e=>{if(showPreview&&previewResult){e.preventDefault();e.returnValue='';return'';}};window.addEventListener('beforeunload',handleBeforeUnload);return()=>{window.removeEventListener('beforeunload',handleBeforeUnload);};},[showPreview,previewResult]);// Custom navigation function (can be used for in-app links that need confirmation)\nconst customNavigate=to=>{if(showPreview&&previewResult){// Store pending navigation and show confirmation\nsetPendingNavigation(to);setShowLeaveConfirmation(true);}else{// If no unsaved changes, navigate directly\nnavigate(to);}};// Configure dropzone for CT scan files\nconst{getRootProps,getInputProps,isDragActive}=useDropzone({accept:{'application/octet-stream':['.mhd','.raw','.nii.gz','.nii'],'application/dicom':['.dcm']},multiple:true,// Allow multiple files to select both .mhd and .raw together\nonDrop:acceptedFiles=>{// Reset preview state when new files are dropped\nsetPreviewResult(null);setShowPreview(false);// Sort files to identify MHD and RAW files\nconst mhdFile=acceptedFiles.find(file=>file.name.toLowerCase().endsWith('.mhd'));const rawFile=acceptedFiles.find(file=>file.name.toLowerCase().endsWith('.raw'));if(mhdFile&&rawFile){// Both files uploaded together\nsetFiles([mhdFile]);setRawFile(rawFile);setShowRawUpload(false);setError(null);}else if(mhdFile){// Only MHD file uploaded\nsetFiles([mhdFile]);setShowRawUpload(true);setError(\"You've uploaded an MHD file. Please also upload the associated RAW file.\");}else if(rawFile){// Only RAW file uploaded\nsetRawFile(rawFile);setShowRawUpload(true);if(files.length===0||!files[0].name.toLowerCase().endsWith('.mhd')){setError(\"You've uploaded a RAW file. Please also upload the associated MHD file.\");}else{setError(null);}}else if(acceptedFiles.length>0){// Other valid file types (NIFTI, DICOM)\nsetFiles(acceptedFiles);setShowRawUpload(false);setError(null);}}});// Configure dropzone specifically for RAW files\nconst{getRootProps:getRawRootProps,getInputProps:getRawInputProps,isDragActive:isRawDragActive}=useDropzone({accept:{'application/octet-stream':['.raw']},multiple:false,onDrop:acceptedFiles=>{if(acceptedFiles.length>0){setRawFile(acceptedFiles[0]);setError(null);}}});const handleUpload=async()=>{if(files.length===0){setError('Please select a file to upload');return;}// If user selected an MHD file but no RAW file, show error\nif(files[0].name.toLowerCase().endsWith('.mhd')&&!rawFile){setError('Please upload the associated RAW file for your MHD file');return;}// Validate file sizes\nconst maxSizeInBytes=300*1024*1024;// 300MB\nif(files[0].size>maxSizeInBytes){setError(`File size exceeds the maximum limit of 300MB. Your file is ${(files[0].size/(1024*1024)).toFixed(2)}MB.`);return;}if(rawFile&&rawFile.size>maxSizeInBytes){setError(`RAW file size exceeds the maximum limit of 300MB. Your file is ${(rawFile.size/(1024*1024)).toFixed(2)}MB.`);return;}// Check file name patterns for MHD and RAW to ensure they match\nif(files[0].name.toLowerCase().endsWith('.mhd')&&rawFile){const mhdBaseName=files[0].name.toLowerCase().slice(0,-4);// Remove .mhd\nconst rawBaseName=rawFile.name.toLowerCase().slice(0,-4);// Remove .raw\nif(mhdBaseName!==rawBaseName&&!window.confirm(`The MHD file (${files[0].name}) and RAW file (${rawFile.name}) have different base names. Are you sure they belong together?`)){setError('Please make sure your MHD and RAW files have matching names');return;}}setIsUploading(true);setProgress(0);setProcessingProgress(0);setError(null);const formData=new FormData();formData.append('file',files[0]);// Add RAW file if present\nif(rawFile){formData.append('raw_file',rawFile);}// Ensure confidence value is a string with proper format\nconst confidenceValue=confidence.toString();console.log(\"Uploading with confidence value:\",confidenceValue);formData.append('confidence',confidenceValue);// Debug the form data being sent\nfor(let pair of formData.entries()){console.log(pair[0]+': '+pair[1]);}// Always set no_segmentation to true to disable nodule segmentation completely\nformData.append('lungs_only','false');formData.append('no_segmentation','true');try{// Upload phase\nconst response=await axios.post('/api/upload',formData,{headers:{'Content-Type':'multipart/form-data'},onUploadProgress:progressEvent=>{const percentCompleted=Math.round(progressEvent.loaded*100/progressEvent.total);setProgress(percentCompleted);// When upload is complete (100%), start the processing progress simulation\nif(percentCompleted===100){setIsUploading(false);setIsProcessing(true);// Simulate processing progress\n// This is just a visual indicator since we don't have real-time backend progress updates\nlet currentProgress=0;const processingInterval=setInterval(()=>{// Increment progress in a non-linear way to simulate real processing\n// Start slower, then speed up, then slow down again at the end\nif(currentProgress<30){currentProgress+=1;}else if(currentProgress<70){currentProgress+=2;}else if(currentProgress<90){currentProgress+=0.5;}else if(currentProgress<98){currentProgress+=0.2;}if(currentProgress>=99){clearInterval(processingInterval);currentProgress=99;// Let the final 100% happen when we get the response\n}setProcessingProgress(Math.min(99,currentProgress));},300);// Update every 300ms\n}}});if(response.data.success){// Set processing to complete\nsetProcessingProgress(100);setIsProcessing(false);// Now fetch the preview result to display\nconst jobId=response.data.job_id;try{const previewResponse=await axios.get(`/api/results/preview/${jobId}`);setPreviewResult(previewResponse.data);setShowPreview(true);}catch(previewError){var _previewError$respons,_previewError$respons2;console.error('Preview error:',previewError);setError(((_previewError$respons=previewError.response)===null||_previewError$respons===void 0?void 0:(_previewError$respons2=_previewError$respons.data)===null||_previewError$respons2===void 0?void 0:_previewError$respons2.error)||'Error retrieving result preview');}}else{setError(response.data.error||'Unknown error occurred');setIsUploading(false);setIsProcessing(false);}}catch(error){console.error('Upload error:',error);// Provide more detailed error messages based on the error\nlet errorMessage='Error uploading file. Please try again.';if(error.response){// Server responded with an error\nconsole.error('Error response:',error.response.data);if(error.response.status===413){errorMessage='File too large. The maximum allowed size is 300MB.';}else if(error.response.data&&error.response.data.error){errorMessage=error.response.data.error;}else{errorMessage=`Server error (${error.response.status}). Please try again later.`;}}else if(error.request){// Request made but no response received\nerrorMessage='No response from server. Please check your network connection.';}setError(errorMessage);setIsUploading(false);setIsProcessing(false);}};// Handle patient info form inputs\nconst handlePatientInfoChange=e=>{const{name,value}=e.target;setPatientInfo(prev=>({...prev,[name]:value}));};// Handle saving with patient info\nconst handleSaveWithPatientInfo=async()=>{if(!previewResult||!previewResult.job_id){setError('No result to save');return;}try{const response=await axios.post(`/api/results/action/${previewResult.job_id}`,{action:'save',patient_info:patientInfo});if(response.data.success){// Hide the form\nsetShowPatientForm(false);// Set navigating flag to allow navigation\nsetIsNavigating(true);// If we have a pending navigation, go there\nif(pendingNavigation){navigate(pendingNavigation);setPendingNavigation(null);}else{// Otherwise go to the result page\nnavigate(`/results/${response.data.case_name}`);}}else{setError(response.data.error||'Failed to save results');}}catch(error){var _error$response,_error$response$data;console.error('Error saving result:',error);setError(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Error saving result');}};// Handle result actions (save/discard)\nconst handleResultAction=async action=>{if(!previewResult||!previewResult.job_id){setError('No result to save or discard');return;}if(action==='save'){// Show patient information form\nsetShowPatientForm(true);}else{try{const response=await axios.post(`/api/results/action/${previewResult.job_id}`,{action:action});if(response.data.success){// Reset the form on discard\nsetFiles([]);setRawFile(null);setPreviewResult(null);setShowPreview(false);// Allow navigation after discarding\nsetIsNavigating(true);// If we were trying to navigate somewhere when discarding, navigate there\nif(pendingNavigation){navigate(pendingNavigation);setPendingNavigation(null);}}else{setError(response.data.error||`Failed to ${action} results`);}}catch(error){var _error$response2,_error$response2$data;console.error(`Error ${action}ing result:`,error);setError(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||`Error ${action}ing result`);}}};// Handle action on leave confirmation\nconst handleLeaveConfirmation=shouldSave=>{if(shouldSave==='save'){// Show patient form\nsetShowPatientForm(true);setShowLeaveConfirmation(false);}else if(shouldSave==='discard'){// Discard and continue navigation\nhandleResultAction('discard');setShowLeaveConfirmation(false);// Set navigating flag to allow navigation\nsetIsNavigating(true);// If we have a pending navigation, go there\nif(pendingNavigation){navigate(pendingNavigation);setPendingNavigation(null);}}else{// Stay on page\nsetShowLeaveConfirmation(false);setPendingNavigation(null);}};// Handle nodule selection\nconst handleNoduleClick=noduleId=>{setSelectedNoduleId(noduleId);};return/*#__PURE__*/_jsxs(\"div\",{className:`space-y-6 ${darkMode?'text-white':''}`,children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-between items-center\",children:/*#__PURE__*/_jsx(\"h1\",{className:`text-2xl font-semibold ${darkMode?'text-white':'text-gray-900'}`,children:\"Upload CT Scan\"})}),showPreview&&previewResult?/*#__PURE__*/_jsx(\"div\",{className:`${darkMode?'bg-gray-800':'bg-white'} shadow rounded-lg p-6 max-w-4xl mx-auto`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:`text-xl font-semibold ${darkMode?'text-white':'text-gray-900'}`,children:\"Review Scan Results\"}),/*#__PURE__*/_jsx(\"div\",{className:`${darkMode?'bg-blue-900':'bg-blue-50'} p-4 rounded-md mb-4`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(InformationCircleIcon,{className:`h-5 w-5 ${darkMode?'text-blue-300':'text-blue-400'}`}),/*#__PURE__*/_jsx(\"div\",{className:`ml-3 text-sm ${darkMode?'text-blue-200':'text-blue-700'}`,children:/*#__PURE__*/_jsx(\"p\",{children:\"Please review the results below. Use the interactive visualization to examine detected nodules. You can save the results to your records or discard them if not satisfied.\"})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:`${darkMode?'bg-gray-700':'bg-gray-100'} rounded-lg overflow-hidden`,children:[/*#__PURE__*/_jsx(\"div\",{className:`px-4 py-3 border-b ${darkMode?'border-gray-600':'border-gray-200'} sm:px-6`,children:/*#__PURE__*/_jsx(\"h3\",{className:`text-lg font-medium ${darkMode?'text-white':'text-gray-900'}`,children:\"Interactive Visualization\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-4\",children:/*#__PURE__*/_jsx(InteractiveViewer,{caseId:previewResult.case_name,selectedNoduleId:selectedNoduleId})})]}),previewResult.details&&previewResult.details.includes('Nodule ')&&/*#__PURE__*/_jsxs(\"div\",{className:`${darkMode?'bg-gray-700':'bg-gray-100'} p-4 rounded-md`,children:[/*#__PURE__*/_jsx(\"h3\",{className:`text-md font-medium ${darkMode?'text-white':'text-gray-900'} mb-2`,children:\"Detected Nodules:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:`min-w-full divide-y ${darkMode?'divide-gray-600':'divide-gray-200'}`,children:[/*#__PURE__*/_jsx(\"thead\",{className:`${darkMode?'bg-gray-800':'bg-gray-50'}`,children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{scope:\"col\",className:`px-6 py-3 text-left text-xs font-medium ${darkMode?'text-gray-300':'text-gray-500'} uppercase tracking-wider`,children:\"Nodule\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",className:`px-6 py-3 text-left text-xs font-medium ${darkMode?'text-gray-300':'text-gray-500'} uppercase tracking-wider`,children:\"Coordinates (z,y,x)\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",className:`px-6 py-3 text-left text-xs font-medium ${darkMode?'text-gray-300':'text-gray-500'} uppercase tracking-wider`,children:\"Radius (mm)\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",className:`px-6 py-3 text-left text-xs font-medium ${darkMode?'text-gray-300':'text-gray-500'} uppercase tracking-wider`,children:\"Confidence\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:`${darkMode?'bg-gray-700 divide-y divide-gray-600':'bg-white divide-y divide-gray-200'}`,children:extractNodulesFromDetails(previewResult.details).map((nodule,index)=>/*#__PURE__*/_jsxs(\"tr\",{className:`${index%2===0?darkMode?'bg-gray-800':'bg-gray-50':''} \n                            cursor-pointer hover:${darkMode?'bg-gray-600':'bg-gray-100'} ${selectedNoduleId===nodule.id?darkMode?'bg-indigo-900':'bg-indigo-100':''}`,onClick:()=>handleNoduleClick(nodule.id),children:[/*#__PURE__*/_jsx(\"td\",{className:`px-6 py-4 whitespace-nowrap text-sm ${darkMode?'text-white':'text-gray-900'}`,children:nodule.id}),/*#__PURE__*/_jsx(\"td\",{className:`px-6 py-4 whitespace-nowrap text-sm ${darkMode?'text-gray-300':'text-gray-500'}`,children:nodule.coordinates}),/*#__PURE__*/_jsx(\"td\",{className:`px-6 py-4 whitespace-nowrap text-sm ${darkMode?'text-gray-300':'text-gray-500'}`,children:nodule.radius}),/*#__PURE__*/_jsx(\"td\",{className:`px-6 py-4 whitespace-nowrap text-sm ${darkMode?'text-gray-300':'text-gray-500'}`,children:nodule.confidence})]},index))})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:`${darkMode?'bg-gray-700':'bg-gray-100'} p-4 rounded-md`,children:[/*#__PURE__*/_jsx(\"h3\",{className:`text-md font-medium ${darkMode?'text-white':'text-gray-900'} mb-2`,children:\"Analysis Details:\"}),/*#__PURE__*/_jsx(\"pre\",{className:`text-sm whitespace-pre-wrap ${darkMode?'text-gray-300':'text-gray-700'}`,children:previewResult.details||\"No detailed analysis available.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-4 justify-center mt-6\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleResultAction('discard'),className:`px-4 py-2 rounded-md flex items-center ${darkMode?'bg-red-800 text-white hover:bg-red-700':'bg-red-600 text-white hover:bg-red-700'}`,children:[/*#__PURE__*/_jsx(XCircleIcon,{className:\"h-5 w-5 mr-2\"}),\"Discard Results\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleResultAction('save'),className:`px-4 py-2 rounded-md flex items-center ${darkMode?'bg-green-800 text-white hover:bg-green-700':'bg-green-600 text-white hover:bg-green-700'}`,children:[/*#__PURE__*/_jsx(CheckCircleIcon,{className:\"h-5 w-5 mr-2\"}),\"Save to Records\"]})]})]})}):/*#__PURE__*/_jsx(\"div\",{className:`${darkMode?'bg-gray-800':'bg-white'} shadow rounded-lg p-6 max-w-4xl mx-auto`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:`${darkMode?'bg-blue-900':'bg-blue-50'} p-4 rounded-md mb-4`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(InformationCircleIcon,{className:`h-5 w-5 ${darkMode?'text-blue-300':'text-blue-400'}`}),/*#__PURE__*/_jsxs(\"div\",{className:`ml-3 text-sm ${darkMode?'text-blue-200':'text-blue-700'}`,children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"File Formats:\"})}),/*#__PURE__*/_jsxs(\"ul\",{className:\"list-disc pl-5 mt-1\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"MetaImage (.mhd + .raw):\"}),\" Both files must be uploaded together\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"NIFTI (.nii.gz or .nii):\"}),\" Single file upload\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"DICOM (.dcm):\"}),\" Single file upload\"]})]})]})]})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:`block text-sm font-medium ${darkMode?'text-gray-300':'text-gray-700'} mb-1`,children:showRawUpload&&rawFile?\"MHD File\":\"CT Scan File\"}),/*#__PURE__*/_jsx(\"div\",{...getRootProps(),className:`mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-dashed rounded-md cursor-pointer ${isDragActive?'border-indigo-500 bg-indigo-50':darkMode?'border-gray-600 hover:border-gray-500':'border-gray-300'} ${darkMode?'bg-gray-700':''}`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-1 text-center\",children:[/*#__PURE__*/_jsx(CloudArrowUpIcon,{className:`mx-auto h-12 w-12 ${darkMode?'text-gray-400':'text-gray-400'}`}),/*#__PURE__*/_jsxs(\"div\",{className:`flex text-sm ${darkMode?'text-gray-300':'text-gray-600'}`,children:[/*#__PURE__*/_jsx(\"input\",{id:\"file-upload\",...getInputProps()}),/*#__PURE__*/_jsxs(\"p\",{className:\"pl-1\",children:[\"Drag and drop your CT scan file\",files.length===0&&rawFile?\" (MHD)\":\"\",\" here, or click to select\"]})]}),/*#__PURE__*/_jsx(\"p\",{className:`text-xs ${darkMode?'text-gray-400':'text-gray-500'}`,children:showRawUpload&&rawFile?\"Please upload the MHD file that matches your RAW file\":\"You can upload both MHD+RAW together by selecting both files\"})]})}),files.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:/*#__PURE__*/_jsxs(\"p\",{className:`text-sm ${darkMode?'text-gray-300':'text-gray-500'}`,children:[\"Selected file: \",/*#__PURE__*/_jsx(\"span\",{className:`font-medium ${darkMode?'text-indigo-400':'text-indigo-600'}`,children:files[0].name}),\" (\",(files[0].size/(1024*1024)).toFixed(2),\" MB)\",rawFile&&files[0].name.toLowerCase().endsWith('.mhd')&&/*#__PURE__*/_jsxs(_Fragment,{children:[\" + Selected RAW file: \",/*#__PURE__*/_jsx(\"span\",{className:`font-medium ${darkMode?'text-indigo-400':'text-indigo-600'}`,children:rawFile.name}),\" (\",(rawFile.size/(1024*1024)).toFixed(2),\" MB)\"]})]})})]}),(showRawUpload||files.length>0&&files[0].name.toLowerCase().endsWith('.mhd')&&!rawFile)&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{className:`block text-sm font-medium ${darkMode?'text-gray-300':'text-gray-700'} mb-1`,children:[\"RAW File \",rawFile&&files.length===0?\"(Needs matching MHD file)\":\"(Required for MHD format)\"]}),/*#__PURE__*/_jsx(\"div\",{...getRawRootProps(),className:`mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-dashed rounded-md cursor-pointer ${isRawDragActive?'border-indigo-500 bg-indigo-50':darkMode?'border-gray-600 hover:border-gray-500':'border-gray-300'} ${darkMode?'bg-gray-700':''}`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-1 text-center\",children:[/*#__PURE__*/_jsx(CloudArrowUpIcon,{className:`mx-auto h-12 w-12 ${darkMode?'text-gray-400':'text-gray-400'}`}),/*#__PURE__*/_jsxs(\"div\",{className:`flex text-sm ${darkMode?'text-gray-300':'text-gray-600'}`,children:[/*#__PURE__*/_jsx(\"input\",{id:\"raw-file-upload\",...getRawInputProps()}),/*#__PURE__*/_jsx(\"p\",{className:\"pl-1\",children:\"Drag and drop the associated RAW file here, or click to select file\"})]}),/*#__PURE__*/_jsx(\"p\",{className:`text-xs ${darkMode?'text-gray-400':'text-gray-500'}`,children:\"Required for MHD format\"})]})}),rawFile&&!files.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:/*#__PURE__*/_jsxs(\"p\",{className:`text-sm ${darkMode?'text-gray-300':'text-gray-500'}`,children:[\"Selected RAW file: \",/*#__PURE__*/_jsx(\"span\",{className:`font-medium ${darkMode?'text-indigo-400':'text-indigo-600'}`,children:rawFile.name}),\" (\",(rawFile.size/(1024*1024)).toFixed(2),\" MB)\"]})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:`text-lg font-medium ${darkMode?'text-white':'text-gray-900'}`,children:\"Processing Options\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 space-y-4\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"confidence\",className:`block text-sm font-medium ${darkMode?'text-gray-300':'text-gray-700'} mb-1`,children:[\"Confidence Threshold: \",confidence.toFixed(2)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:`text-xs ${darkMode?'text-gray-400':'text-gray-500'}`,children:\"0.0\"}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",id:\"confidence\",name:\"confidence\",min:\"0.01\",max:\"0.99\",step:\"0.01\",value:confidence,onChange:e=>{const value=parseFloat(e.target.value);console.log(\"Confidence slider changed to:\",value);setConfidence(value);},className:`w-full h-2 ${darkMode?'bg-gray-600':'bg-gray-200'} rounded-lg appearance-none cursor-pointer`}),/*#__PURE__*/_jsx(\"span\",{className:`text-xs ${darkMode?'text-gray-400':'text-gray-500'}`,children:\"1.0\"})]}),/*#__PURE__*/_jsx(\"p\",{className:`mt-1 text-xs ${darkMode?'text-gray-400':'text-gray-500'}`,children:\"Higher values result in fewer, more confident nodule detections. Lower values show more potential nodules with lower confidence.\"})]})})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:`rounded-md ${darkMode?'bg-red-900':'bg-red-50'} p-4`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(ExclamationCircleIcon,{className:`h-5 w-5 ${darkMode?'text-red-300':'text-red-400'}`}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-3\",children:/*#__PURE__*/_jsx(\"h3\",{className:`text-sm font-medium ${darkMode?'text-red-200':'text-red-800'}`,children:error})})]})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleUpload,disabled:isUploading||isProcessing||files.length===0&&!rawFile||files.length>0&&files[0].name.toLowerCase().endsWith('.mhd')&&!rawFile,className:`w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white ${isUploading||isProcessing||files.length===0&&!rawFile||files.length>0&&files[0].name.toLowerCase().endsWith('.mhd')&&!rawFile?'bg-indigo-300 dark:bg-indigo-900 cursor-not-allowed':'bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'}`,children:isUploading?'Uploading...':isProcessing?'Processing...':'Upload and Process'}),isUploading&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"relative pt-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-1\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs font-semibold inline-block text-indigo-600\",children:[\"Upload Progress: \",progress,\"%\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs font-semibold inline-block text-gray-500\",children:\"Phase 1/2\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-hidden h-2 mb-4 text-xs flex rounded bg-indigo-200\",children:/*#__PURE__*/_jsx(\"div\",{style:{width:`${progress}%`},className:\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-indigo-600\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 text-center\",children:\"Uploading your CT scan to the server. Please wait...\"})]})}),isProcessing&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"relative pt-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-1\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs font-semibold inline-block text-green-600\",children:[\"Processing Progress: \",processingProgress,\"%\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs font-semibold inline-block text-gray-500\",children:\"Phase 2/2\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-hidden h-2 mb-4 text-xs flex rounded bg-green-200\",children:/*#__PURE__*/_jsx(\"div\",{style:{width:`${processingProgress}%`},className:\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-green-600\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 text-center\",children:\"Analyzing the CT scan with deep learning models. This may take several minutes depending on the scan size.\"})]})})]})]})}),showLeaveConfirmation&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:`${darkMode?'bg-gray-800':'bg-white'} rounded-lg shadow-xl p-6 max-w-md w-full`,children:[/*#__PURE__*/_jsx(\"h3\",{className:`text-lg font-medium ${darkMode?'text-white':'text-gray-900'} mb-4`,children:\"Unsaved Results\"}),/*#__PURE__*/_jsx(\"p\",{className:`${darkMode?'text-gray-300':'text-gray-600'} mb-6`,children:\"You have unsaved analysis results. What would you like to do?\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end space-x-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleLeaveConfirmation('stay'),className:`px-4 py-2 rounded-md ${darkMode?'bg-gray-700 text-gray-300 hover:bg-gray-600':'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,children:\"Stay on Page\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleLeaveConfirmation('discard'),className:`px-4 py-2 rounded-md ${darkMode?'bg-red-800 text-white hover:bg-red-700':'bg-red-600 text-white hover:bg-red-700'}`,children:\"Discard & Leave\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleLeaveConfirmation('save'),className:`px-4 py-2 rounded-md ${darkMode?'bg-green-800 text-white hover:bg-green-700':'bg-green-600 text-white hover:bg-green-700'}`,children:\"Save Results\"})]})]})}),showPatientForm&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:`${darkMode?'bg-gray-800':'bg-white'} rounded-lg shadow-xl p-6 max-w-md w-full`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:`text-lg font-medium ${darkMode?'text-white':'text-gray-900'}`,children:\"Patient Information\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowPatientForm(false),className:`rounded-full p-1 ${darkMode?'hover:bg-gray-700':'hover:bg-gray-200'}`,children:/*#__PURE__*/_jsx(XMarkIcon,{className:`h-5 w-5 ${darkMode?'text-gray-400':'text-gray-500'}`})})]}),/*#__PURE__*/_jsx(\"p\",{className:`${darkMode?'text-gray-300':'text-gray-600'} mb-4`,children:\"Please enter the patient's information to save this result to their medical record.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",className:`block text-sm font-medium ${darkMode?'text-gray-300':'text-gray-700'} mb-1`,children:\"Patient Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",name:\"name\",value:patientInfo.name,onChange:handlePatientInfoChange,required:true,className:`w-full px-3 py-2 border ${darkMode?'bg-gray-700 border-gray-600 text-white':'bg-white border-gray-300 text-gray-900'} rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500`})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"age\",className:`block text-sm font-medium ${darkMode?'text-gray-300':'text-gray-700'} mb-1`,children:\"Patient Age\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"age\",name:\"age\",value:patientInfo.age,onChange:handlePatientInfoChange,min:\"0\",max:\"120\",className:`w-full px-3 py-2 border ${darkMode?'bg-gray-700 border-gray-600 text-white':'bg-white border-gray-300 text-gray-900'} rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500`})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"description\",className:`block text-sm font-medium ${darkMode?'text-gray-300':'text-gray-700'} mb-1`,children:\"Clinical Notes\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"description\",name:\"description\",value:patientInfo.description,onChange:handlePatientInfoChange,rows:\"3\",className:`w-full px-3 py-2 border ${darkMode?'bg-gray-700 border-gray-600 text-white':'bg-white border-gray-300 text-gray-900'} rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500`,placeholder:\"Enter any relevant clinical notes about this scan...\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end space-x-4 mt-6\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowPatientForm(false),className:`px-4 py-2 rounded-md ${darkMode?'bg-gray-700 text-gray-300 hover:bg-gray-600':'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveWithPatientInfo,disabled:!patientInfo.name||!patientInfo.age,className:`px-4 py-2 rounded-md ${!patientInfo.name||!patientInfo.age?`${darkMode?'bg-green-900 text-gray-400':'bg-green-300 text-gray-600'} cursor-not-allowed`:darkMode?'bg-green-800 text-white hover:bg-green-700':'bg-green-600 text-white hover:bg-green-700'}`,children:\"Save to Records\"})]})]})})]});};// Helper function to extract nodule information from details text\nconst extractNodulesFromDetails=details=>{if(!details)return[];const nodules=[];const lines=details.split('\\n');let currentNodule=null;for(const line of lines){// Skip segmentation information line\nif(line.includes('Nodule segmentation performed:')){continue;}if(line.startsWith('Nodule ')){if(currentNodule){nodules.push(currentNodule);}currentNodule={id:line.replace(':','').trim(),coordinates:'',radius:'',confidence:''};}else if(currentNodule){if(line.includes('Coordinates')){currentNodule.coordinates=line.split(':')[1].trim();}else if(line.includes('Radius')){currentNodule.radius=line.split(':')[1].trim();}else if(line.includes('Confidence')){currentNodule.confidence=line.split(':')[1].trim();}}}// Add the last nodule if present\nif(currentNodule){nodules.push(currentNodule);}return nodules;};export default UploadPage;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","useLocation","axios","useDropzone","CloudArrowUpIcon","ExclamationCircleIcon","InformationCircleIcon","CheckCircleIcon","XCircleIcon","ViewfinderCircleIcon","XMarkIcon","useTheme","InteractiveViewer","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","UploadPage","files","setFiles","rawFile","setRawFile","confidence","setConfidence","isUploading","setIsUploading","isProcessing","setIsProcessing","error","setError","progress","setProgress","processingProgress","setProcessingProgress","showRawUpload","setShowRawUpload","previewResult","setPreviewResult","showPreview","setShowPreview","selectedNoduleId","setSelectedNoduleId","showLeaveConfirmation","setShowLeaveConfirmation","showPatientForm","setShowPatientForm","patientInfo","setPatientInfo","name","age","description","isNavigating","setIsNavigating","pendingNavigation","setPendingNavigation","navigate","location","darkMode","prevLocation","setPrevLocation","pathname","search","handleBeforeUnload","e","preventDefault","returnValue","window","addEventListener","removeEventListener","customNavigate","to","getRootProps","getInputProps","isDragActive","accept","multiple","onDrop","acceptedFiles","mhdFile","find","file","toLowerCase","endsWith","length","getRawRootProps","getRawInputProps","isRawDragActive","handleUpload","maxSizeInBytes","size","toFixed","mhdBaseName","slice","rawBaseName","confirm","formData","FormData","append","confidenceValue","toString","console","log","pair","entries","response","post","headers","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","currentProgress","processingInterval","setInterval","clearInterval","min","data","success","jobId","job_id","previewResponse","get","previewError","_previewError$respons","_previewError$respons2","errorMessage","status","request","handlePatientInfoChange","value","target","prev","handleSaveWithPatientInfo","action","patient_info","case_name","_error$response","_error$response$data","handleResultAction","_error$response2","_error$response2$data","handleLeaveConfirmation","shouldSave","handleNoduleClick","noduleId","className","children","caseId","details","includes","scope","extractNodulesFromDetails","map","nodule","index","id","onClick","coordinates","radius","htmlFor","type","max","step","onChange","parseFloat","disabled","style","width","required","rows","placeholder","nodules","lines","split","currentNodule","line","startsWith","push","replace","trim"],"sources":["C:/Users/kouss/Desktop/Cursor/Segmentation/pipeline/webapp/static/src/pages/UploadPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { CloudArrowUpIcon, ExclamationCircleIcon, InformationCircleIcon, CheckCircleIcon, XCircleIcon, ViewfinderCircleIcon, XMarkIcon } from '@heroicons/react/24/outline';\r\nimport { useTheme } from '../contexts/ThemeContext';\r\nimport InteractiveViewer from '../components/InteractiveViewer';\r\n\r\nconst UploadPage = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [rawFile, setRawFile] = useState(null);\r\n  const [confidence, setConfidence] = useState(0.5);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const [processingProgress, setProcessingProgress] = useState(0);\r\n  const [showRawUpload, setShowRawUpload] = useState(false);\r\n  const [previewResult, setPreviewResult] = useState(null);\r\n  const [showPreview, setShowPreview] = useState(false);\r\n  const [selectedNoduleId, setSelectedNoduleId] = useState(null);\r\n  const [showLeaveConfirmation, setShowLeaveConfirmation] = useState(false);\r\n  const [showPatientForm, setShowPatientForm] = useState(false);\r\n  const [patientInfo, setPatientInfo] = useState({\r\n    name: '',\r\n    age: '',\r\n    description: ''\r\n  });\r\n  const [isNavigating, setIsNavigating] = useState(false);\r\n  const [pendingNavigation, setPendingNavigation] = useState(null);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { darkMode } = useTheme();\r\n  \r\n  // Track current location to detect changes\r\n  const [prevLocation, setPrevLocation] = useState(null);\r\n  \r\n  // Handle location changes to detect navigation attempts\r\n  useEffect(() => {\r\n    // Skip on first render\r\n    if (prevLocation === null) {\r\n      setPrevLocation(location);\r\n      return;\r\n    }\r\n    \r\n    // If the location has changed and we haven't explicitly allowed navigation\r\n    if (\r\n      location !== prevLocation && \r\n      !isNavigating && \r\n      showPreview && \r\n      previewResult\r\n    ) {\r\n      // Block navigation by going back to previous location\r\n      // This happens synchronously, before the confirmation dialog\r\n      navigate(-1);\r\n      \r\n      // Show confirmation dialog\r\n      setShowLeaveConfirmation(true);\r\n      setPendingNavigation(location.pathname + location.search);\r\n      \r\n      return;\r\n    }\r\n    \r\n    // Update the previous location\r\n    setPrevLocation(location);\r\n  }, [location, prevLocation, isNavigating, showPreview, previewResult, navigate]);\r\n\r\n  // Browser back/refresh confirmation\r\n  useEffect(() => {\r\n    const handleBeforeUnload = (e) => {\r\n      if (showPreview && previewResult) {\r\n        e.preventDefault();\r\n        e.returnValue = '';\r\n        return '';\r\n      }\r\n    };\r\n\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n    \r\n    return () => {\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    };\r\n  }, [showPreview, previewResult]);\r\n\r\n  // Custom navigation function (can be used for in-app links that need confirmation)\r\n  const customNavigate = (to) => {\r\n    if (showPreview && previewResult) {\r\n      // Store pending navigation and show confirmation\r\n      setPendingNavigation(to);\r\n      setShowLeaveConfirmation(true);\r\n    } else {\r\n      // If no unsaved changes, navigate directly\r\n      navigate(to);\r\n    }\r\n  };\r\n\r\n  // Configure dropzone for CT scan files\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    accept: {\r\n      'application/octet-stream': ['.mhd', '.raw', '.nii.gz', '.nii'],\r\n      'application/dicom': ['.dcm'],\r\n    },\r\n    multiple: true, // Allow multiple files to select both .mhd and .raw together\r\n    onDrop: (acceptedFiles) => {\r\n      // Reset preview state when new files are dropped\r\n      setPreviewResult(null);\r\n      setShowPreview(false);\r\n      \r\n      // Sort files to identify MHD and RAW files\r\n      const mhdFile = acceptedFiles.find(file => file.name.toLowerCase().endsWith('.mhd'));\r\n      const rawFile = acceptedFiles.find(file => file.name.toLowerCase().endsWith('.raw'));\r\n      \r\n      if (mhdFile && rawFile) {\r\n        // Both files uploaded together\r\n        setFiles([mhdFile]);\r\n        setRawFile(rawFile);\r\n        setShowRawUpload(false);\r\n        setError(null);\r\n      } else if (mhdFile) {\r\n        // Only MHD file uploaded\r\n        setFiles([mhdFile]);\r\n        setShowRawUpload(true);\r\n        setError(\"You've uploaded an MHD file. Please also upload the associated RAW file.\");\r\n      } else if (rawFile) {\r\n        // Only RAW file uploaded\r\n        setRawFile(rawFile);\r\n        setShowRawUpload(true);\r\n        if (files.length === 0 || !files[0].name.toLowerCase().endsWith('.mhd')) {\r\n          setError(\"You've uploaded a RAW file. Please also upload the associated MHD file.\");\r\n        } else {\r\n          setError(null);\r\n        }\r\n      } else if (acceptedFiles.length > 0) {\r\n        // Other valid file types (NIFTI, DICOM)\r\n        setFiles(acceptedFiles);\r\n        setShowRawUpload(false);\r\n        setError(null);\r\n      }\r\n    },\r\n  });\r\n\r\n  // Configure dropzone specifically for RAW files\r\n  const { getRootProps: getRawRootProps, getInputProps: getRawInputProps, isDragActive: isRawDragActive } = useDropzone({\r\n    accept: {\r\n      'application/octet-stream': ['.raw'],\r\n    },\r\n    multiple: false,\r\n    onDrop: (acceptedFiles) => {\r\n      if (acceptedFiles.length > 0) {\r\n        setRawFile(acceptedFiles[0]);\r\n        setError(null);\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleUpload = async () => {\r\n    if (files.length === 0) {\r\n      setError('Please select a file to upload');\r\n      return;\r\n    }\r\n\r\n    // If user selected an MHD file but no RAW file, show error\r\n    if (files[0].name.toLowerCase().endsWith('.mhd') && !rawFile) {\r\n      setError('Please upload the associated RAW file for your MHD file');\r\n      return;\r\n    }\r\n\r\n    // Validate file sizes\r\n    const maxSizeInBytes = 300 * 1024 * 1024; // 300MB\r\n    if (files[0].size > maxSizeInBytes) {\r\n      setError(`File size exceeds the maximum limit of 300MB. Your file is ${(files[0].size / (1024 * 1024)).toFixed(2)}MB.`);\r\n      return;\r\n    }\r\n    \r\n    if (rawFile && rawFile.size > maxSizeInBytes) {\r\n      setError(`RAW file size exceeds the maximum limit of 300MB. Your file is ${(rawFile.size / (1024 * 1024)).toFixed(2)}MB.`);\r\n      return;\r\n    }\r\n\r\n    // Check file name patterns for MHD and RAW to ensure they match\r\n    if (files[0].name.toLowerCase().endsWith('.mhd') && rawFile) {\r\n      const mhdBaseName = files[0].name.toLowerCase().slice(0, -4); // Remove .mhd\r\n      const rawBaseName = rawFile.name.toLowerCase().slice(0, -4);  // Remove .raw\r\n      \r\n      if (mhdBaseName !== rawBaseName && !window.confirm(`The MHD file (${files[0].name}) and RAW file (${rawFile.name}) have different base names. Are you sure they belong together?`)) {\r\n        setError('Please make sure your MHD and RAW files have matching names');\r\n        return;\r\n      }\r\n    }\r\n\r\n    setIsUploading(true);\r\n    setProgress(0);\r\n    setProcessingProgress(0);\r\n    setError(null);\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', files[0]);\r\n    \r\n    // Add RAW file if present\r\n    if (rawFile) {\r\n      formData.append('raw_file', rawFile);\r\n    }\r\n    \r\n    // Ensure confidence value is a string with proper format\r\n    const confidenceValue = confidence.toString();\r\n    console.log(\"Uploading with confidence value:\", confidenceValue);\r\n    formData.append('confidence', confidenceValue);\r\n    \r\n    // Debug the form data being sent\r\n    for (let pair of formData.entries()) {\r\n      console.log(pair[0] + ': ' + pair[1]);\r\n    }\r\n    \r\n    // Always set no_segmentation to true to disable nodule segmentation completely\r\n    formData.append('lungs_only', 'false');\r\n    formData.append('no_segmentation', 'true');\r\n\r\n    try {\r\n      // Upload phase\r\n      const response = await axios.post('/api/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setProgress(percentCompleted);\r\n          \r\n          // When upload is complete (100%), start the processing progress simulation\r\n          if (percentCompleted === 100) {\r\n            setIsUploading(false);\r\n            setIsProcessing(true);\r\n            \r\n            // Simulate processing progress\r\n            // This is just a visual indicator since we don't have real-time backend progress updates\r\n            let currentProgress = 0;\r\n            const processingInterval = setInterval(() => {\r\n              // Increment progress in a non-linear way to simulate real processing\r\n              // Start slower, then speed up, then slow down again at the end\r\n              if (currentProgress < 30) {\r\n                currentProgress += 1;\r\n              } else if (currentProgress < 70) {\r\n                currentProgress += 2;\r\n              } else if (currentProgress < 90) {\r\n                currentProgress += 0.5;\r\n              } else if (currentProgress < 98) {\r\n                currentProgress += 0.2;\r\n              }\r\n              \r\n              if (currentProgress >= 99) {\r\n                clearInterval(processingInterval);\r\n                currentProgress = 99; // Let the final 100% happen when we get the response\r\n              }\r\n              \r\n              setProcessingProgress(Math.min(99, currentProgress));\r\n            }, 300); // Update every 300ms\r\n          }\r\n        },\r\n      });\r\n\r\n      if (response.data.success) {\r\n        // Set processing to complete\r\n        setProcessingProgress(100);\r\n        setIsProcessing(false);\r\n        \r\n        // Now fetch the preview result to display\r\n        const jobId = response.data.job_id;\r\n        try {\r\n          const previewResponse = await axios.get(`/api/results/preview/${jobId}`);\r\n          setPreviewResult(previewResponse.data);\r\n          setShowPreview(true);\r\n        } catch (previewError) {\r\n          console.error('Preview error:', previewError);\r\n          setError(previewError.response?.data?.error || 'Error retrieving result preview');\r\n        }\r\n      } else {\r\n        setError(response.data.error || 'Unknown error occurred');\r\n        setIsUploading(false);\r\n        setIsProcessing(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Upload error:', error);\r\n      \r\n      // Provide more detailed error messages based on the error\r\n      let errorMessage = 'Error uploading file. Please try again.';\r\n      \r\n      if (error.response) {\r\n        // Server responded with an error\r\n        console.error('Error response:', error.response.data);\r\n        if (error.response.status === 413) {\r\n          errorMessage = 'File too large. The maximum allowed size is 300MB.';\r\n        } else if (error.response.data && error.response.data.error) {\r\n          errorMessage = error.response.data.error;\r\n        } else {\r\n          errorMessage = `Server error (${error.response.status}). Please try again later.`;\r\n        }\r\n      } else if (error.request) {\r\n        // Request made but no response received\r\n        errorMessage = 'No response from server. Please check your network connection.';\r\n      }\r\n      \r\n      setError(errorMessage);\r\n      setIsUploading(false);\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  // Handle patient info form inputs\r\n  const handlePatientInfoChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPatientInfo(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  // Handle saving with patient info\r\n  const handleSaveWithPatientInfo = async () => {\r\n    if (!previewResult || !previewResult.job_id) {\r\n      setError('No result to save');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(`/api/results/action/${previewResult.job_id}`, {\r\n        action: 'save',\r\n        patient_info: patientInfo\r\n      });\r\n\r\n      if (response.data.success) {\r\n        // Hide the form\r\n        setShowPatientForm(false);\r\n        \r\n        // Set navigating flag to allow navigation\r\n        setIsNavigating(true);\r\n        \r\n        // If we have a pending navigation, go there\r\n        if (pendingNavigation) {\r\n          navigate(pendingNavigation);\r\n          setPendingNavigation(null);\r\n        } else {\r\n          // Otherwise go to the result page\r\n          navigate(`/results/${response.data.case_name}`);\r\n        }\r\n      } else {\r\n        setError(response.data.error || 'Failed to save results');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving result:', error);\r\n      setError(error.response?.data?.error || 'Error saving result');\r\n    }\r\n  };\r\n\r\n  // Handle result actions (save/discard)\r\n  const handleResultAction = async (action) => {\r\n    if (!previewResult || !previewResult.job_id) {\r\n      setError('No result to save or discard');\r\n      return;\r\n    }\r\n\r\n    if (action === 'save') {\r\n      // Show patient information form\r\n      setShowPatientForm(true);\r\n    } else {\r\n      try {\r\n        const response = await axios.post(`/api/results/action/${previewResult.job_id}`, {\r\n          action: action\r\n        });\r\n\r\n        if (response.data.success) {\r\n          // Reset the form on discard\r\n          setFiles([]);\r\n          setRawFile(null);\r\n          setPreviewResult(null);\r\n          setShowPreview(false);\r\n          \r\n          // Allow navigation after discarding\r\n          setIsNavigating(true);\r\n          \r\n          // If we were trying to navigate somewhere when discarding, navigate there\r\n          if (pendingNavigation) {\r\n            navigate(pendingNavigation);\r\n            setPendingNavigation(null);\r\n          }\r\n        } else {\r\n          setError(response.data.error || `Failed to ${action} results`);\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error ${action}ing result:`, error);\r\n        setError(error.response?.data?.error || `Error ${action}ing result`);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle action on leave confirmation\r\n  const handleLeaveConfirmation = (shouldSave) => {\r\n    if (shouldSave === 'save') {\r\n      // Show patient form\r\n      setShowPatientForm(true);\r\n      setShowLeaveConfirmation(false);\r\n    } else if (shouldSave === 'discard') {\r\n      // Discard and continue navigation\r\n      handleResultAction('discard');\r\n      setShowLeaveConfirmation(false);\r\n      \r\n      // Set navigating flag to allow navigation\r\n      setIsNavigating(true);\r\n      \r\n      // If we have a pending navigation, go there\r\n      if (pendingNavigation) {\r\n        navigate(pendingNavigation);\r\n        setPendingNavigation(null);\r\n      }\r\n    } else {\r\n      // Stay on page\r\n      setShowLeaveConfirmation(false);\r\n      setPendingNavigation(null);\r\n    }\r\n  };\r\n\r\n  // Handle nodule selection\r\n  const handleNoduleClick = (noduleId) => {\r\n    setSelectedNoduleId(noduleId);\r\n  };\r\n\r\n  return (\r\n    <div className={`space-y-6 ${darkMode ? 'text-white' : ''}`}>\r\n      <div className=\"flex justify-between items-center\">\r\n        <h1 className={`text-2xl font-semibold ${darkMode ? 'text-white' : 'text-gray-900'}`}>Upload CT Scan</h1>\r\n      </div>\r\n\r\n      {showPreview && previewResult ? (\r\n        <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} shadow rounded-lg p-6 max-w-4xl mx-auto`}>\r\n          <div className=\"space-y-6\">\r\n            <h2 className={`text-xl font-semibold ${darkMode ? 'text-white' : 'text-gray-900'}`}>\r\n              Review Scan Results\r\n            </h2>\r\n            \r\n            <div className={`${darkMode ? 'bg-blue-900' : 'bg-blue-50'} p-4 rounded-md mb-4`}>\r\n              <div className=\"flex\">\r\n                <InformationCircleIcon className={`h-5 w-5 ${darkMode ? 'text-blue-300' : 'text-blue-400'}`} />\r\n                <div className={`ml-3 text-sm ${darkMode ? 'text-blue-200' : 'text-blue-700'}`}>\r\n                  <p>Please review the results below. Use the interactive visualization to examine detected nodules. You can save the results to your records or discard them if not satisfied.</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Visualization section */}\r\n            <div className={`${darkMode ? 'bg-gray-700' : 'bg-gray-100'} rounded-lg overflow-hidden`}>\r\n              <div className={`px-4 py-3 border-b ${darkMode ? 'border-gray-600' : 'border-gray-200'} sm:px-6`}>\r\n                <h3 className={`text-lg font-medium ${darkMode ? 'text-white' : 'text-gray-900'}`}>Interactive Visualization</h3>\r\n              </div>\r\n              \r\n              {/* Interactive viewer */}\r\n              <div className=\"p-4\">\r\n                <InteractiveViewer \r\n                  caseId={previewResult.case_name} \r\n                  selectedNoduleId={selectedNoduleId}\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Nodule table for interactive navigation */}\r\n            {previewResult.details && previewResult.details.includes('Nodule ') && (\r\n              <div className={`${darkMode ? 'bg-gray-700' : 'bg-gray-100'} p-4 rounded-md`}>\r\n                <h3 className={`text-md font-medium ${darkMode ? 'text-white' : 'text-gray-900'} mb-2`}>\r\n                  Detected Nodules:\r\n                </h3>\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className={`min-w-full divide-y ${darkMode ? 'divide-gray-600' : 'divide-gray-200'}`}>\r\n                    <thead className={`${darkMode ? 'bg-gray-800' : 'bg-gray-50'}`}>\r\n                      <tr>\r\n                        <th scope=\"col\" className={`px-6 py-3 text-left text-xs font-medium ${darkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>\r\n                          Nodule\r\n                        </th>\r\n                        <th scope=\"col\" className={`px-6 py-3 text-left text-xs font-medium ${darkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>\r\n                          Coordinates (z,y,x)\r\n                        </th>\r\n                        <th scope=\"col\" className={`px-6 py-3 text-left text-xs font-medium ${darkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>\r\n                          Radius (mm)\r\n                        </th>\r\n                        <th scope=\"col\" className={`px-6 py-3 text-left text-xs font-medium ${darkMode ? 'text-gray-300' : 'text-gray-500'} uppercase tracking-wider`}>\r\n                          Confidence\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className={`${darkMode ? 'bg-gray-700 divide-y divide-gray-600' : 'bg-white divide-y divide-gray-200'}`}>\r\n                      {extractNodulesFromDetails(previewResult.details).map((nodule, index) => (\r\n                        <tr \r\n                          key={index} \r\n                          className={`${index % 2 === 0 ? (darkMode ? 'bg-gray-800' : 'bg-gray-50') : ''} \r\n                            cursor-pointer hover:${darkMode ? 'bg-gray-600' : 'bg-gray-100'} ${selectedNoduleId === nodule.id ? (darkMode ? 'bg-indigo-900' : 'bg-indigo-100') : ''}`}\r\n                          onClick={() => handleNoduleClick(nodule.id)}\r\n                        >\r\n                          <td className={`px-6 py-4 whitespace-nowrap text-sm ${darkMode ? 'text-white' : 'text-gray-900'}`}>\r\n                            {nodule.id}\r\n                          </td>\r\n                          <td className={`px-6 py-4 whitespace-nowrap text-sm ${darkMode ? 'text-gray-300' : 'text-gray-500'}`}>\r\n                            {nodule.coordinates}\r\n                          </td>\r\n                          <td className={`px-6 py-4 whitespace-nowrap text-sm ${darkMode ? 'text-gray-300' : 'text-gray-500'}`}>\r\n                            {nodule.radius}\r\n                          </td>\r\n                          <td className={`px-6 py-4 whitespace-nowrap text-sm ${darkMode ? 'text-gray-300' : 'text-gray-500'}`}>\r\n                            {nodule.confidence}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Details section */}\r\n            <div className={`${darkMode ? 'bg-gray-700' : 'bg-gray-100'} p-4 rounded-md`}>\r\n              <h3 className={`text-md font-medium ${darkMode ? 'text-white' : 'text-gray-900'} mb-2`}>\r\n                Analysis Details:\r\n              </h3>\r\n              <pre className={`text-sm whitespace-pre-wrap ${darkMode ? 'text-gray-300' : 'text-gray-700'}`}>\r\n                {previewResult.details || \"No detailed analysis available.\"}\r\n              </pre>\r\n            </div>\r\n            \r\n            {/* Action buttons */}\r\n            <div className=\"flex space-x-4 justify-center mt-6\">\r\n              <button\r\n                onClick={() => handleResultAction('discard')}\r\n                className={`px-4 py-2 rounded-md flex items-center ${\r\n                  darkMode \r\n                    ? 'bg-red-800 text-white hover:bg-red-700' \r\n                    : 'bg-red-600 text-white hover:bg-red-700'\r\n                }`}\r\n              >\r\n                <XCircleIcon className=\"h-5 w-5 mr-2\" />\r\n                Discard Results\r\n              </button>\r\n              \r\n              <button\r\n                onClick={() => handleResultAction('save')}\r\n                className={`px-4 py-2 rounded-md flex items-center ${\r\n                  darkMode \r\n                    ? 'bg-green-800 text-white hover:bg-green-700' \r\n                    : 'bg-green-600 text-white hover:bg-green-700'\r\n                }`}\r\n              >\r\n                <CheckCircleIcon className=\"h-5 w-5 mr-2\" />\r\n                Save to Records\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} shadow rounded-lg p-6 max-w-4xl mx-auto`}>\r\n          <div className=\"space-y-6\">\r\n            {/* MHD/NIFTI/DICOM file info box */}\r\n            <div className={`${darkMode ? 'bg-blue-900' : 'bg-blue-50'} p-4 rounded-md mb-4`}>\r\n              <div className=\"flex\">\r\n                <InformationCircleIcon className={`h-5 w-5 ${darkMode ? 'text-blue-300' : 'text-blue-400'}`} />\r\n                <div className={`ml-3 text-sm ${darkMode ? 'text-blue-200' : 'text-blue-700'}`}>\r\n                  <p><strong>File Formats:</strong></p>\r\n                  <ul className=\"list-disc pl-5 mt-1\">\r\n                    <li><strong>MetaImage (.mhd + .raw):</strong> Both files must be uploaded together</li>\r\n                    <li><strong>NIFTI (.nii.gz or .nii):</strong> Single file upload</li>\r\n                    <li><strong>DICOM (.dcm):</strong> Single file upload</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Main file dropzone */}\r\n            <div>\r\n              <label className={`block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\r\n                {showRawUpload && rawFile ? \"MHD File\" : \"CT Scan File\"}\r\n              </label>\r\n              <div\r\n                {...getRootProps()}\r\n                className={`mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-dashed rounded-md cursor-pointer ${\r\n                  isDragActive \r\n                    ? 'border-indigo-500 bg-indigo-50' \r\n                    : darkMode \r\n                      ? 'border-gray-600 hover:border-gray-500' \r\n                      : 'border-gray-300'\r\n                } ${darkMode ? 'bg-gray-700' : ''}`}\r\n              >\r\n                <div className=\"space-y-1 text-center\">\r\n                  <CloudArrowUpIcon className={`mx-auto h-12 w-12 ${darkMode ? 'text-gray-400' : 'text-gray-400'}`} />\r\n                  <div className={`flex text-sm ${darkMode ? 'text-gray-300' : 'text-gray-600'}`}>\r\n                    <input id=\"file-upload\" {...getInputProps()} />\r\n                    <p className=\"pl-1\">\r\n                      Drag and drop your CT scan file{files.length === 0 && rawFile ? \" (MHD)\" : \"\"} here, or click to select\r\n                    </p>\r\n                  </div>\r\n                  <p className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>\r\n                    {showRawUpload && rawFile \r\n                      ? \"Please upload the MHD file that matches your RAW file\" \r\n                      : \"You can upload both MHD+RAW together by selecting both files\"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              {files.length > 0 && (\r\n                <div className=\"mt-2\">\r\n                  <p className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-500'}`}>\r\n                    Selected file: <span className={`font-medium ${darkMode ? 'text-indigo-400' : 'text-indigo-600'}`}>{files[0].name}</span> ({(files[0].size / (1024 * 1024)).toFixed(2)} MB)\r\n                    {rawFile && files[0].name.toLowerCase().endsWith('.mhd') && (\r\n                      <> + Selected RAW file: <span className={`font-medium ${darkMode ? 'text-indigo-400' : 'text-indigo-600'}`}>{rawFile.name}</span> ({(rawFile.size / (1024 * 1024)).toFixed(2)} MB)</>\r\n                    )}\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* RAW file dropzone (shown only when MHD file is selected but no RAW file yet) */}\r\n            {(showRawUpload || (files.length > 0 && files[0].name.toLowerCase().endsWith('.mhd') && !rawFile)) && (\r\n              <div>\r\n                <label className={`block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\r\n                  RAW File {rawFile && files.length === 0 ? \"(Needs matching MHD file)\" : \"(Required for MHD format)\"}\r\n                </label>\r\n                <div\r\n                  {...getRawRootProps()}\r\n                  className={`mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-dashed rounded-md cursor-pointer ${\r\n                    isRawDragActive \r\n                      ? 'border-indigo-500 bg-indigo-50' \r\n                      : darkMode \r\n                        ? 'border-gray-600 hover:border-gray-500' \r\n                        : 'border-gray-300'\r\n                  } ${darkMode ? 'bg-gray-700' : ''}`}\r\n                >\r\n                  <div className=\"space-y-1 text-center\">\r\n                    <CloudArrowUpIcon className={`mx-auto h-12 w-12 ${darkMode ? 'text-gray-400' : 'text-gray-400'}`} />\r\n                    <div className={`flex text-sm ${darkMode ? 'text-gray-300' : 'text-gray-600'}`}>\r\n                      <input id=\"raw-file-upload\" {...getRawInputProps()} />\r\n                      <p className=\"pl-1\">\r\n                        Drag and drop the associated RAW file here, or click to select file\r\n                      </p>\r\n                    </div>\r\n                    <p className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>Required for MHD format</p>\r\n                  </div>\r\n                </div>\r\n                {rawFile && !files.length > 0 && (\r\n                  <div className=\"mt-2\">\r\n                    <p className={`text-sm ${darkMode ? 'text-gray-300' : 'text-gray-500'}`}>\r\n                      Selected RAW file: <span className={`font-medium ${darkMode ? 'text-indigo-400' : 'text-indigo-600'}`}>{rawFile.name}</span> ({(rawFile.size / (1024 * 1024)).toFixed(2)} MB)\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {/* Processing options */}\r\n            <div>\r\n              <h3 className={`text-lg font-medium ${darkMode ? 'text-white' : 'text-gray-900'}`}>Processing Options</h3>\r\n              <div className=\"mt-4 space-y-4\">\r\n                <div>\r\n                  <label htmlFor=\"confidence\" className={`block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\r\n                    Confidence Threshold: {confidence.toFixed(2)}\r\n                  </label>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <span className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>0.0</span>\r\n                    <input\r\n                      type=\"range\"\r\n                      id=\"confidence\"\r\n                      name=\"confidence\"\r\n                      min=\"0.01\"\r\n                      max=\"0.99\"\r\n                      step=\"0.01\"\r\n                      value={confidence}\r\n                      onChange={(e) => {\r\n                        const value = parseFloat(e.target.value);\r\n                        console.log(\"Confidence slider changed to:\", value);\r\n                        setConfidence(value);\r\n                      }}\r\n                      className={`w-full h-2 ${darkMode ? 'bg-gray-600' : 'bg-gray-200'} rounded-lg appearance-none cursor-pointer`}\r\n                    />\r\n                    <span className={`text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>1.0</span>\r\n                  </div>\r\n                  <p className={`mt-1 text-xs ${darkMode ? 'text-gray-400' : 'text-gray-500'}`}>\r\n                    Higher values result in fewer, more confident nodule detections. Lower values show more potential nodules with lower confidence.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Error message */}\r\n            {error && (\r\n              <div className={`rounded-md ${darkMode ? 'bg-red-900' : 'bg-red-50'} p-4`}>\r\n                <div className=\"flex\">\r\n                  <ExclamationCircleIcon className={`h-5 w-5 ${darkMode ? 'text-red-300' : 'text-red-400'}`} />\r\n                  <div className=\"ml-3\">\r\n                    <h3 className={`text-sm font-medium ${darkMode ? 'text-red-200' : 'text-red-800'}`}>{error}</h3>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Upload button and progress */}\r\n            <div>\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleUpload}\r\n                disabled={isUploading || isProcessing || (files.length === 0 && !rawFile) || (files.length > 0 && files[0].name.toLowerCase().endsWith('.mhd') && !rawFile)}\r\n                className={`w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white ${\r\n                  isUploading || isProcessing || (files.length === 0 && !rawFile) || (files.length > 0 && files[0].name.toLowerCase().endsWith('.mhd') && !rawFile)\r\n                    ? 'bg-indigo-300 dark:bg-indigo-900 cursor-not-allowed'\r\n                    : 'bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\r\n                }`}\r\n              >\r\n                {isUploading ? 'Uploading...' : isProcessing ? 'Processing...' : 'Upload and Process'}\r\n              </button>\r\n              \r\n              {/* Upload progress indicator */}\r\n              {isUploading && (\r\n                <div className=\"mt-4\">\r\n                  <div className=\"relative pt-1\">\r\n                    <div className=\"flex justify-between items-center mb-1\">\r\n                      <span className=\"text-xs font-semibold inline-block text-indigo-600\">\r\n                        Upload Progress: {progress}%\r\n                      </span>\r\n                      <span className=\"text-xs font-semibold inline-block text-gray-500\">\r\n                        Phase 1/2\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"overflow-hidden h-2 mb-4 text-xs flex rounded bg-indigo-200\">\r\n                      <div\r\n                        style={{ width: `${progress}%` }}\r\n                        className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-indigo-600\"\r\n                      ></div>\r\n                    </div>\r\n                    <p className=\"text-xs text-gray-500 text-center\">\r\n                      Uploading your CT scan to the server. Please wait...\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Processing progress indicator */}\r\n              {isProcessing && (\r\n                <div className=\"mt-4\">\r\n                  <div className=\"relative pt-1\">\r\n                    <div className=\"flex justify-between items-center mb-1\">\r\n                      <span className=\"text-xs font-semibold inline-block text-green-600\">\r\n                        Processing Progress: {processingProgress}%\r\n                      </span>\r\n                      <span className=\"text-xs font-semibold inline-block text-gray-500\">\r\n                        Phase 2/2\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"overflow-hidden h-2 mb-4 text-xs flex rounded bg-green-200\">\r\n                      <div\r\n                        style={{ width: `${processingProgress}%` }}\r\n                        className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-green-600\"\r\n                      ></div>\r\n                    </div>\r\n                    <p className=\"text-xs text-gray-500 text-center\">\r\n                      Analyzing the CT scan with deep learning models. This may take several minutes depending on the scan size.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Leave confirmation dialog */}\r\n      {showLeaveConfirmation && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-xl p-6 max-w-md w-full`}>\r\n            <h3 className={`text-lg font-medium ${darkMode ? 'text-white' : 'text-gray-900'} mb-4`}>\r\n              Unsaved Results\r\n            </h3>\r\n            <p className={`${darkMode ? 'text-gray-300' : 'text-gray-600'} mb-6`}>\r\n              You have unsaved analysis results. What would you like to do?\r\n            </p>\r\n            <div className=\"flex justify-end space-x-4\">\r\n              <button\r\n                onClick={() => handleLeaveConfirmation('stay')}\r\n                className={`px-4 py-2 rounded-md ${\r\n                  darkMode \r\n                    ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' \r\n                    : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\r\n                }`}\r\n              >\r\n                Stay on Page\r\n              </button>\r\n              <button\r\n                onClick={() => handleLeaveConfirmation('discard')}\r\n                className={`px-4 py-2 rounded-md ${\r\n                  darkMode \r\n                    ? 'bg-red-800 text-white hover:bg-red-700' \r\n                    : 'bg-red-600 text-white hover:bg-red-700'\r\n                }`}\r\n              >\r\n                Discard & Leave\r\n              </button>\r\n              <button\r\n                onClick={() => handleLeaveConfirmation('save')}\r\n                className={`px-4 py-2 rounded-md ${\r\n                  darkMode \r\n                    ? 'bg-green-800 text-white hover:bg-green-700' \r\n                    : 'bg-green-600 text-white hover:bg-green-700'\r\n                }`}\r\n              >\r\n                Save Results\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Patient information form */}\r\n      {showPatientForm && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className={`${darkMode ? 'bg-gray-800' : 'bg-white'} rounded-lg shadow-xl p-6 max-w-md w-full`}>\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h3 className={`text-lg font-medium ${darkMode ? 'text-white' : 'text-gray-900'}`}>\r\n                Patient Information\r\n              </h3>\r\n              <button \r\n                onClick={() => setShowPatientForm(false)} \r\n                className={`rounded-full p-1 ${darkMode ? 'hover:bg-gray-700' : 'hover:bg-gray-200'}`}\r\n              >\r\n                <XMarkIcon className={`h-5 w-5 ${darkMode ? 'text-gray-400' : 'text-gray-500'}`} />\r\n              </button>\r\n            </div>\r\n            \r\n            <p className={`${darkMode ? 'text-gray-300' : 'text-gray-600'} mb-4`}>\r\n              Please enter the patient's information to save this result to their medical record.\r\n            </p>\r\n            \r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label htmlFor=\"name\" className={`block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\r\n                  Patient Name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  value={patientInfo.name}\r\n                  onChange={handlePatientInfoChange}\r\n                  required\r\n                  className={`w-full px-3 py-2 border ${darkMode ? 'bg-gray-700 border-gray-600 text-white' : 'bg-white border-gray-300 text-gray-900'} rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500`}\r\n                />\r\n              </div>\r\n              \r\n              <div>\r\n                <label htmlFor=\"age\" className={`block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\r\n                  Patient Age\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"age\"\r\n                  name=\"age\"\r\n                  value={patientInfo.age}\r\n                  onChange={handlePatientInfoChange}\r\n                  min=\"0\"\r\n                  max=\"120\"\r\n                  className={`w-full px-3 py-2 border ${darkMode ? 'bg-gray-700 border-gray-600 text-white' : 'bg-white border-gray-300 text-gray-900'} rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500`}\r\n                />\r\n              </div>\r\n              \r\n              <div>\r\n                <label htmlFor=\"description\" className={`block text-sm font-medium ${darkMode ? 'text-gray-300' : 'text-gray-700'} mb-1`}>\r\n                  Clinical Notes\r\n                </label>\r\n                <textarea\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  value={patientInfo.description}\r\n                  onChange={handlePatientInfoChange}\r\n                  rows=\"3\"\r\n                  className={`w-full px-3 py-2 border ${darkMode ? 'bg-gray-700 border-gray-600 text-white' : 'bg-white border-gray-300 text-gray-900'} rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500`}\r\n                  placeholder=\"Enter any relevant clinical notes about this scan...\"\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex justify-end space-x-4 mt-6\">\r\n              <button\r\n                onClick={() => setShowPatientForm(false)}\r\n                className={`px-4 py-2 rounded-md ${\r\n                  darkMode \r\n                    ? 'bg-gray-700 text-gray-300 hover:bg-gray-600' \r\n                    : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\r\n                }`}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleSaveWithPatientInfo}\r\n                disabled={!patientInfo.name || !patientInfo.age}\r\n                className={`px-4 py-2 rounded-md ${\r\n                  !patientInfo.name || !patientInfo.age\r\n                    ? `${darkMode ? 'bg-green-900 text-gray-400' : 'bg-green-300 text-gray-600'} cursor-not-allowed`\r\n                    : darkMode \r\n                      ? 'bg-green-800 text-white hover:bg-green-700' \r\n                      : 'bg-green-600 text-white hover:bg-green-700'\r\n                }`}\r\n              >\r\n                Save to Records\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Helper function to extract nodule information from details text\r\nconst extractNodulesFromDetails = (details) => {\r\n  if (!details) return [];\r\n\r\n  const nodules = [];\r\n  const lines = details.split('\\n');\r\n  let currentNodule = null;\r\n  \r\n  for (const line of lines) {\r\n    // Skip segmentation information line\r\n    if (line.includes('Nodule segmentation performed:')) {\r\n      continue;\r\n    }\r\n    \r\n    if (line.startsWith('Nodule ')) {\r\n      if (currentNodule) {\r\n        nodules.push(currentNodule);\r\n      }\r\n      currentNodule = {\r\n        id: line.replace(':', '').trim(),\r\n        coordinates: '',\r\n        radius: '',\r\n        confidence: '',\r\n      };\r\n    } else if (currentNodule) {\r\n      if (line.includes('Coordinates')) {\r\n        currentNodule.coordinates = line.split(':')[1].trim();\r\n      } else if (line.includes('Radius')) {\r\n        currentNodule.radius = line.split(':')[1].trim();\r\n      } else if (line.includes('Confidence')) {\r\n        currentNodule.confidence = line.split(':')[1].trim();\r\n      }\r\n    }\r\n  }\r\n  \r\n  // Add the last nodule if present\r\n  if (currentNodule) {\r\n    nodules.push(currentNodule);\r\n  }\r\n  \r\n  return nodules;\r\n};\r\n\r\nexport default UploadPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}