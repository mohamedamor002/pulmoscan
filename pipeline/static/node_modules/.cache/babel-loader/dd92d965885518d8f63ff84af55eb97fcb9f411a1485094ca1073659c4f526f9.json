{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import axios from'axios';import{Bar}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from'chart.js';import{CloudArrowUpIcon,DocumentTextIcon,ExclamationCircleIcon}from'@heroicons/react/24/outline';// Register ChartJS components\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);const DashboardPage=()=>{const[results,setResults]=useState([]);const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);const[stats,setStats]=useState({totalScans:0,scansWithNodules:0,totalNodules:0,averageNodulesPerScan:0,failedScans:0});useEffect(()=>{const fetchResults=async()=>{try{setIsLoading(true);const response=await axios.get('/api/results');const data=response.data||[];setResults(data);if(data.length===0){// No results to process\nsetStats({totalScans:0,scansWithNodules:0,totalNodules:0,averageNodulesPerScan:0,failedScans:0});setIsLoading(false);return;}// Calculate statistics\nconst scansWithNodules=await Promise.all(data.map(async result=>{try{var _detailsResponse$data;const detailsResponse=await axios.get(`/api/results/${result.case_name}/details`);const details=((_detailsResponse$data=detailsResponse.data)===null||_detailsResponse$data===void 0?void 0:_detailsResponse$data.details)||'';// Simple text parsing to determine if nodules were found\nconst hasNodules=details&&!details.includes('No nodules detected')&&!details.includes('No detailed information available');// Count nodules by looking for \"Nodule X:\" patterns in the text\nconst noduleMatches=details.match(/Nodule \\d+:/g)||[];const noduleCount=noduleMatches.length;return{...result,hasNodules,noduleCount,hasDetails:!!details};}catch(error){console.error(`Error fetching details for ${result.case_name}:`,error);// Return the result with default values even if details fail to load\nreturn{...result,hasNodules:false,noduleCount:0,hasDetails:false,error:true};}}));// Filter out results that had errors if needed\nconst validResults=scansWithNodules.filter(scan=>!scan.error);const validResultsCount=validResults.length;// Continue even if some scans had errors\nconst withNodules=scansWithNodules.filter(scan=>scan.hasNodules);const totalNodules=scansWithNodules.reduce((sum,scan)=>sum+scan.noduleCount,0);const failedScans=scansWithNodules.filter(scan=>scan.error).length;setStats({totalScans:data.length,scansWithNodules:withNodules.length,totalNodules:totalNodules,averageNodulesPerScan:validResultsCount>0?(totalNodules/validResultsCount).toFixed(2):0,failedScans:failedScans});setIsLoading(false);}catch(error){console.error('Error fetching results:',error);// Provide more specific error message based on the error\nlet errorMessage='Failed to load results data. Please try refreshing the page.';if(error.response){// The request was made and the server responded with a status code\n// that falls out of the range of 2xx\nconsole.error('Error response data:',error.response.data);errorMessage=`Server error: ${error.response.status}. Please try again later.`;}else if(error.request){// The request was made but no response was received\nerrorMessage='No response from server. Please check your network connection.';}setError(errorMessage);// Still set some empty results to allow partial dashboard rendering\nsetResults([]);setStats({totalScans:0,scansWithNodules:0,totalNodules:0,averageNodulesPerScan:0,failedScans:0});setIsLoading(false);}};fetchResults();},[]);// Prepare data for the chart\nconst chartData={labels:['With Nodules','Without Nodules'],datasets:[{label:'CT Scans',data:[stats.scansWithNodules,stats.totalScans-stats.scansWithNodules],backgroundColor:['rgba(79, 70, 229, 0.6)','rgba(209, 213, 219, 0.6)'],borderColor:['rgba(79, 70, 229, 1)','rgba(209, 213, 219, 1)'],borderWidth:1}]};const chartOptions={responsive:true,plugins:{legend:{position:'top'},title:{display:true,text:'Nodule Detection Results'}},scales:{y:{beginAtZero:true,ticks:{precision:0}}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-semibold text-gray-900\",children:\"Dashboard\"}),/*#__PURE__*/_jsx(Link,{to:\"/upload\",className:\"btn-primary\",children:\"Upload New Scan\"})]}),isLoading?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-12\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"inline-block h-8 w-8 animate-spin rounded-full border-4 border-solid border-indigo-600 border-r-transparent\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-4 text-gray-600\",children:\"Loading dashboard data...\"})]}):error?/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-50 p-4 rounded-md\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(ExclamationCircleIcon,{className:\"h-5 w-5 text-red-400\",\"aria-hidden\":\"true\"}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-3\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-medium text-red-800\",children:error})})]})}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-white overflow-hidden shadow rounded-lg\",children:/*#__PURE__*/_jsx(\"div\",{className:\"px-4 py-5 sm:p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0 bg-indigo-500 rounded-md p-3\",children:/*#__PURE__*/_jsx(DocumentTextIcon,{className:\"h-6 w-6 text-white\",\"aria-hidden\":\"true\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-5 w-0 flex-1\",children:/*#__PURE__*/_jsxs(\"dl\",{children:[/*#__PURE__*/_jsx(\"dt\",{className:\"text-sm font-medium text-gray-500 truncate\",children:\"Total Scans\"}),/*#__PURE__*/_jsx(\"dd\",{className:\"text-3xl font-semibold text-gray-900\",children:stats.totalScans})]})})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white overflow-hidden shadow rounded-lg\",children:/*#__PURE__*/_jsx(\"div\",{className:\"px-4 py-5 sm:p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0 bg-green-500 rounded-md p-3\",children:/*#__PURE__*/_jsx(DocumentTextIcon,{className:\"h-6 w-6 text-white\",\"aria-hidden\":\"true\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-5 w-0 flex-1\",children:/*#__PURE__*/_jsxs(\"dl\",{children:[/*#__PURE__*/_jsx(\"dt\",{className:\"text-sm font-medium text-gray-500 truncate\",children:\"Scans With Nodules\"}),/*#__PURE__*/_jsx(\"dd\",{className:\"text-3xl font-semibold text-gray-900\",children:stats.scansWithNodules})]})})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white overflow-hidden shadow rounded-lg\",children:/*#__PURE__*/_jsx(\"div\",{className:\"px-4 py-5 sm:p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0 bg-yellow-500 rounded-md p-3\",children:/*#__PURE__*/_jsx(DocumentTextIcon,{className:\"h-6 w-6 text-white\",\"aria-hidden\":\"true\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-5 w-0 flex-1\",children:/*#__PURE__*/_jsxs(\"dl\",{children:[/*#__PURE__*/_jsx(\"dt\",{className:\"text-sm font-medium text-gray-500 truncate\",children:\"Total Nodules\"}),/*#__PURE__*/_jsx(\"dd\",{className:\"text-3xl font-semibold text-gray-900\",children:stats.totalNodules})]})})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white overflow-hidden shadow rounded-lg\",children:/*#__PURE__*/_jsx(\"div\",{className:\"px-4 py-5 sm:p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0 bg-blue-500 rounded-md p-3\",children:/*#__PURE__*/_jsx(DocumentTextIcon,{className:\"h-6 w-6 text-white\",\"aria-hidden\":\"true\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-5 w-0 flex-1\",children:/*#__PURE__*/_jsxs(\"dl\",{children:[/*#__PURE__*/_jsx(\"dt\",{className:\"text-sm font-medium text-gray-500 truncate\",children:\"Avg. Nodules/Scan\"}),/*#__PURE__*/_jsx(\"dd\",{className:\"text-3xl font-semibold text-gray-900\",children:stats.averageNodulesPerScan})]})})]})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-6 shadow rounded-lg\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-medium text-gray-900 mb-4\",children:\"Results Distribution\"}),/*#__PURE__*/_jsx(\"div\",{className:\"h-64\",children:/*#__PURE__*/_jsx(Bar,{data:chartData,options:chartOptions})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"px-4 py-5 border-b border-gray-200 sm:px-6\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"Recent Results\"})}),/*#__PURE__*/_jsxs(\"ul\",{className:\"divide-y divide-gray-200\",children:[results.slice(0,5).map(result=>/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:`/results/${result.case_name}`,className:\"block hover:bg-gray-50\",children:/*#__PURE__*/_jsx(\"div\",{className:\"px-4 py-4 sm:px-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",children:/*#__PURE__*/_jsx(DocumentTextIcon,{className:\"h-6 w-6 text-gray-400\",\"aria-hidden\":\"true\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-3\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-indigo-600 truncate\",children:result.case_name}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500\",children:[\"Processed on \",new Date(result.timestamp).toLocaleString()]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-2 flex-shrink-0 flex\",children:/*#__PURE__*/_jsx(\"p\",{className:\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\",children:\"View Details\"})})]})})})},result.case_name)),results.length===0&&/*#__PURE__*/_jsx(\"li\",{className:\"px-4 py-5 sm:px-6 text-center text-gray-500\",children:\"No results available. Upload a CT scan to get started.\"})]}),results.length>5&&/*#__PURE__*/_jsx(\"div\",{className:\"px-4 py-3 bg-gray-50 text-right sm:px-6\",children:/*#__PURE__*/_jsx(Link,{to:\"/results\",className:\"text-sm font-medium text-indigo-600 hover:text-indigo-500\",children:\"View all results\"})})]})]})]});};export default DashboardPage;","map":{"version":3,"names":["React","useState","useEffect","Link","axios","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","CloudArrowUpIcon","DocumentTextIcon","ExclamationCircleIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","register","DashboardPage","results","setResults","isLoading","setIsLoading","error","setError","stats","setStats","totalScans","scansWithNodules","totalNodules","averageNodulesPerScan","failedScans","fetchResults","response","get","data","length","Promise","all","map","result","_detailsResponse$data","detailsResponse","case_name","details","hasNodules","includes","noduleMatches","match","noduleCount","hasDetails","console","validResults","filter","scan","validResultsCount","withNodules","reduce","sum","toFixed","errorMessage","status","request","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","chartOptions","responsive","plugins","legend","position","title","display","text","scales","y","beginAtZero","ticks","precision","className","children","to","options","slice","Date","timestamp","toLocaleString"],"sources":["D:/Segmentation/pipeline/webapp/static/src/pages/DashboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\nimport { CloudArrowUpIcon, DocumentTextIcon, ExclamationCircleIcon } from '@heroicons/react/24/outline';\r\n\r\n// Register ChartJS components\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst DashboardPage = () => {\r\n  const [results, setResults] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [stats, setStats] = useState({\r\n    totalScans: 0,\r\n    scansWithNodules: 0,\r\n    totalNodules: 0,\r\n    averageNodulesPerScan: 0,\r\n    failedScans: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchResults = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await axios.get('/api/results');\r\n        const data = response.data || [];\r\n        setResults(data);\r\n        \r\n        if (data.length === 0) {\r\n          // No results to process\r\n          setStats({\r\n            totalScans: 0,\r\n            scansWithNodules: 0,\r\n            totalNodules: 0,\r\n            averageNodulesPerScan: 0,\r\n            failedScans: 0\r\n          });\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n        \r\n        // Calculate statistics\r\n        const scansWithNodules = await Promise.all(\r\n          data.map(async (result) => {\r\n            try {\r\n              const detailsResponse = await axios.get(`/api/results/${result.case_name}/details`);\r\n              const details = detailsResponse.data?.details || '';\r\n              // Simple text parsing to determine if nodules were found\r\n              const hasNodules = details && \r\n                !details.includes('No nodules detected') && \r\n                !details.includes('No detailed information available');\r\n              \r\n              // Count nodules by looking for \"Nodule X:\" patterns in the text\r\n              const noduleMatches = details.match(/Nodule \\d+:/g) || [];\r\n              const noduleCount = noduleMatches.length;\r\n              \r\n              return {\r\n                ...result,\r\n                hasNodules,\r\n                noduleCount,\r\n                hasDetails: !!details\r\n              };\r\n            } catch (error) {\r\n              console.error(`Error fetching details for ${result.case_name}:`, error);\r\n              // Return the result with default values even if details fail to load\r\n              return { \r\n                ...result, \r\n                hasNodules: false, \r\n                noduleCount: 0,\r\n                hasDetails: false,\r\n                error: true \r\n              };\r\n            }\r\n          })\r\n        );\r\n        \r\n        // Filter out results that had errors if needed\r\n        const validResults = scansWithNodules.filter(scan => !scan.error);\r\n        const validResultsCount = validResults.length;\r\n        \r\n        // Continue even if some scans had errors\r\n        const withNodules = scansWithNodules.filter(scan => scan.hasNodules);\r\n        const totalNodules = scansWithNodules.reduce((sum, scan) => sum + scan.noduleCount, 0);\r\n        const failedScans = scansWithNodules.filter(scan => scan.error).length;\r\n        \r\n        setStats({\r\n          totalScans: data.length,\r\n          scansWithNodules: withNodules.length,\r\n          totalNodules: totalNodules,\r\n          averageNodulesPerScan: validResultsCount > 0 ? (totalNodules / validResultsCount).toFixed(2) : 0,\r\n          failedScans: failedScans\r\n        });\r\n        \r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching results:', error);\r\n        \r\n        // Provide more specific error message based on the error\r\n        let errorMessage = 'Failed to load results data. Please try refreshing the page.';\r\n        if (error.response) {\r\n          // The request was made and the server responded with a status code\r\n          // that falls out of the range of 2xx\r\n          console.error('Error response data:', error.response.data);\r\n          errorMessage = `Server error: ${error.response.status}. Please try again later.`;\r\n        } else if (error.request) {\r\n          // The request was made but no response was received\r\n          errorMessage = 'No response from server. Please check your network connection.';\r\n        }\r\n        \r\n        setError(errorMessage);\r\n        \r\n        // Still set some empty results to allow partial dashboard rendering\r\n        setResults([]);\r\n        setStats({\r\n          totalScans: 0,\r\n          scansWithNodules: 0,\r\n          totalNodules: 0,\r\n          averageNodulesPerScan: 0,\r\n          failedScans: 0\r\n        });\r\n        \r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchResults();\r\n  }, []);\r\n\r\n  // Prepare data for the chart\r\n  const chartData = {\r\n    labels: ['With Nodules', 'Without Nodules'],\r\n    datasets: [\r\n      {\r\n        label: 'CT Scans',\r\n        data: [stats.scansWithNodules, stats.totalScans - stats.scansWithNodules],\r\n        backgroundColor: ['rgba(79, 70, 229, 0.6)', 'rgba(209, 213, 219, 0.6)'],\r\n        borderColor: ['rgba(79, 70, 229, 1)', 'rgba(209, 213, 219, 1)'],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Nodule Detection Results',\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        ticks: {\r\n          precision: 0,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h1 className=\"text-2xl font-semibold text-gray-900\">Dashboard</h1>\r\n        <Link to=\"/upload\" className=\"btn-primary\">\r\n          Upload New Scan\r\n        </Link>\r\n      </div>\r\n\r\n      {isLoading ? (\r\n        <div className=\"text-center py-12\">\r\n          <div className=\"inline-block h-8 w-8 animate-spin rounded-full border-4 border-solid border-indigo-600 border-r-transparent\"></div>\r\n          <p className=\"mt-4 text-gray-600\">Loading dashboard data...</p>\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"bg-red-50 p-4 rounded-md\">\r\n          <div className=\"flex\">\r\n            <ExclamationCircleIcon className=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\r\n            <div className=\"ml-3\">\r\n              <h3 className=\"text-sm font-medium text-red-800\">{error}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* Stats Cards */}\r\n          <div className=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4\">\r\n            <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n              <div className=\"px-4 py-5 sm:p-6\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0 bg-indigo-500 rounded-md p-3\">\r\n                    <DocumentTextIcon className=\"h-6 w-6 text-white\" aria-hidden=\"true\" />\r\n                  </div>\r\n                  <div className=\"ml-5 w-0 flex-1\">\r\n                    <dl>\r\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">Total Scans</dt>\r\n                      <dd className=\"text-3xl font-semibold text-gray-900\">{stats.totalScans}</dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n              <div className=\"px-4 py-5 sm:p-6\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0 bg-green-500 rounded-md p-3\">\r\n                    <DocumentTextIcon className=\"h-6 w-6 text-white\" aria-hidden=\"true\" />\r\n                  </div>\r\n                  <div className=\"ml-5 w-0 flex-1\">\r\n                    <dl>\r\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">Scans With Nodules</dt>\r\n                      <dd className=\"text-3xl font-semibold text-gray-900\">{stats.scansWithNodules}</dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n              <div className=\"px-4 py-5 sm:p-6\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0 bg-yellow-500 rounded-md p-3\">\r\n                    <DocumentTextIcon className=\"h-6 w-6 text-white\" aria-hidden=\"true\" />\r\n                  </div>\r\n                  <div className=\"ml-5 w-0 flex-1\">\r\n                    <dl>\r\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">Total Nodules</dt>\r\n                      <dd className=\"text-3xl font-semibold text-gray-900\">{stats.totalNodules}</dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n              <div className=\"px-4 py-5 sm:p-6\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0 bg-blue-500 rounded-md p-3\">\r\n                    <DocumentTextIcon className=\"h-6 w-6 text-white\" aria-hidden=\"true\" />\r\n                  </div>\r\n                  <div className=\"ml-5 w-0 flex-1\">\r\n                    <dl>\r\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">Avg. Nodules/Scan</dt>\r\n                      <dd className=\"text-3xl font-semibold text-gray-900\">{stats.averageNodulesPerScan}</dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Chart */}\r\n          <div className=\"bg-white p-6 shadow rounded-lg\">\r\n            <h2 className=\"text-lg font-medium text-gray-900 mb-4\">Results Distribution</h2>\r\n            <div className=\"h-64\">\r\n              <Bar data={chartData} options={chartOptions} />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Recent Results */}\r\n          <div className=\"bg-white shadow rounded-lg\">\r\n            <div className=\"px-4 py-5 border-b border-gray-200 sm:px-6\">\r\n              <h3 className=\"text-lg font-medium text-gray-900\">Recent Results</h3>\r\n            </div>\r\n            <ul className=\"divide-y divide-gray-200\">\r\n              {results.slice(0, 5).map((result) => (\r\n                <li key={result.case_name}>\r\n                  <Link to={`/results/${result.case_name}`} className=\"block hover:bg-gray-50\">\r\n                    <div className=\"px-4 py-4 sm:px-6\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div className=\"flex items-center\">\r\n                          <div className=\"flex-shrink-0\">\r\n                            <DocumentTextIcon className=\"h-6 w-6 text-gray-400\" aria-hidden=\"true\" />\r\n                          </div>\r\n                          <div className=\"ml-3\">\r\n                            <p className=\"text-sm font-medium text-indigo-600 truncate\">{result.case_name}</p>\r\n                            <p className=\"text-sm text-gray-500\">\r\n                              Processed on {new Date(result.timestamp).toLocaleString()}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"ml-2 flex-shrink-0 flex\">\r\n                          <p className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\r\n                            View Details\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Link>\r\n                </li>\r\n              ))}\r\n              {results.length === 0 && (\r\n                <li className=\"px-4 py-5 sm:px-6 text-center text-gray-500\">\r\n                  No results available. Upload a CT scan to get started.\r\n                </li>\r\n              )}\r\n            </ul>\r\n            {results.length > 5 && (\r\n              <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\r\n                <Link \r\n                  to=\"/results\" \r\n                  className=\"text-sm font-medium text-indigo-600 hover:text-indigo-500\"\r\n                >\r\n                  View all results\r\n                </Link>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}